{"version":3,"file":"cljs.repl.js","sources":["cljs/repl.cljs"],"mappings":"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","names":["p__7735","map__7736","cljs.core/PROTOCOL_SENTINEL","cljs.core.apply.cljs$core$IFn$_invoke$arity$2","cljs.core/hash-map","cljs.core.get.cljs$core$IFn$_invoke$arity$2","cljs.repl/print-doc","n","nm","m","cljs.core.println.cljs$core$IFn$_invoke$arity$variadic","temp__5457__auto__","ns","seq__7738","cljs.core/seq","chunk__7739","count__7740","i__7741","cljs.core/chunked-seq?","c__4351__auto__","cljs.core/chunk-first","cljs.core/chunk-rest","cljs.core/count","cljs.core/first","cljs.core/next","f","arglists","or__3949__auto__","cljs.core.prn.cljs$core$IFn$_invoke$arity$variadic","cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2","cljs.core/second","cljs.core/contains?","seq__7742","chunk__7743","count__7744","i__7745","vec__7746","cljs.core.nth.cljs$core$IFn$_invoke$arity$3","map__7749","vec__7752","map__7755","name","doc","cljs.core/println","fnspec","cljs.spec.alpha/get-spec","cljs.core.symbol.cljs$core$IFn$_invoke$arity$2","cljs.core/ns-name","cljs.core/name","cljs.core.print.cljs$core$IFn$_invoke$arity$variadic","seq__7757","chunk__7758","count__7759","i__7760","role","spec","cljs.spec.alpha/describe"],"sourcesContent":[";; Copyright (c) Rich Hickey. All rights reserved.\n;; The use and distribution terms for this software are covered by the\n;; Eclipse Public License 1.0 (http://opensource.org/licenses/eclipse-1.0.php)\n;; which can be found in the file epl-v10.html at the root of this distribution.\n;; By using this software in any fashion, you are agreeing to be bound by\n;; the terms of this license.\n;; You must not remove this notice, or any other, from this software.\n\n(ns cljs.repl\n  (:require-macros cljs.repl)\n  (:require [cljs.spec.alpha :as spec]))\n\n(defn print-doc [{n :ns nm :name :as m}]\n  (println \"-------------------------\")\n  (println (str (when-let [ns (:ns m)] (str ns \"/\")) (:name m)))\n  (when (:protocol m)\n    (println \"Protocol\"))\n  (cond\n    (:forms m) (doseq [f (:forms m)]\n                 (println \"  \" f))\n    (:arglists m) (let [arglists (:arglists m)]\n                    (if (or (:macro m)\n                         (:repl-special-function m))\n                     (prn arglists)\n                     (prn\n                       (if (= 'quote (first arglists))\n                         (second arglists)\n                         arglists)))))\n  (if (:special-form m)\n    (do\n      (println \"Special Form\")\n      (println \" \" (:doc m))\n      (if (contains? m :url)\n        (when (:url m)\n          (println (str \"\\n  Please see http://clojure.org/\" (:url m))))\n        (println (str \"\\n  Please see http://clojure.org/special_forms#\"\n                   (:name m)))))\n    (do\n      (when (:macro m)\n        (println \"Macro\"))\n      (when (:repl-special-function m)\n        (println \"REPL Special Function\"))\n      (println \" \" (:doc m))\n      (when (:protocol m)\n        (doseq [[name {:keys [doc arglists]}] (:methods m)]\n          (println)\n          (println \" \" name)\n          (println \" \" arglists)\n          (when doc\n            (println \" \" doc))))\n      (when n\n        (when-let [fnspec (spec/get-spec (symbol (str (ns-name n)) (name nm)))]\n          (print \"Spec\")\n          (doseq [role [:args :ret :fn]]\n            (when-let [spec (get fnspec role)]\n              (print (str \"\\n \" (name role) \":\") (spec/describe spec)))))))))\n"]}