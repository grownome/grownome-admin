{"version":3,"file":"shadow.test.browser.js","sources":["shadow/test/browser.cljs"],"mappings":";;;;AAMA,GAAA,QAAAA,mCAAAC,wCAAAC,gDAAAC;AAAA;AAAA,AAAA,AAASC,+BAAS,+CAAA,/CAACC;;AACnB,oBAAMD;AAAN,AACE,AAACE,6BACC,WAAKC;AAAL,AACE,OAACC,gDAAWJ,6BAAS,gDAAA,HAAKG;;;AAHhC;AAKA,4BAAA,5BAAME;AAAN,AAEE,OAACC;;AAEH,2BAAA,3BAAMC,8DAAMC;AAAZ,AACE,yCAAA,zCAAM,AAAaR;;AAMnB,QAACQ,qCAAAA,uCAAAA;;AAGH,2BAAA,3BAAeC;AAAf,AACE,OAACJ","names":["js/shadow","js/shadow.test","js/shadow.test.browser","js/shadow.test.browser.log-node","shadow.test.browser/log-node","shadow.dom.by_id.cljs$core$IFn$_invoke$arity$1","cljs.core/set-print-fn!","s","shadow.dom.append.cljs$core$IFn$_invoke$arity$2","shadow.test.browser/start","shadow.test.run_all_tests.cljs$core$IFn$_invoke$arity$0","shadow.test.browser/stop","done","shadow.test.browser/init"],"sourcesContent":["(ns shadow.test.browser\n  \"generic browser test runner\"\n  (:require [shadow.test :as st]\n            [shadow.dom :as dom]))\n\n;; FIXME: implement custom reporter instead\n(defonce log-node (dom/by-id \"log\"))\n(when log-node\n  (set-print-fn!\n    (fn [s]\n      (dom/append log-node (str s \"\\n\")))))\n\n(defn start []\n  ;; (js/console.log \"test env\" @st/tests-ref)\n  (st/run-all-tests))\n\n(defn stop [done]\n  (set! (.-innerText log-node) \"\")\n\n  ;; FIXME: determine if async tests are still running\n  ;; and call done after instead\n  ;; otherwise a live reload might interfere with running tests by\n  ;; reloading code in the middle\n  (done))\n\n;; not sure we need to do something once?\n(defn ^:export init []\n  (start))\n"]}