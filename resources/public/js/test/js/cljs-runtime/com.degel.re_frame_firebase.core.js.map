{"version":3,"file":"com.degel.re_frame_firebase.core.js","sources":["com/degel/re_frame_firebase/core.cljs"],"mappings":";;;;AASA,GAAA,QAAAA,gCAAAC,sCAAAC,wDAAAC,6DAAAC;AAAA;AAAA,AAAA,AAASC,kDAAe,6CAAA,7CAACC;;AAEzB,AAAA,sDAAA,8DAAAC,pHAAMM;AAAN,AAAA,IAAAL,qBAAA;AAAA,AAAA,IAAAC,yBAAA,AAAA;AAAA,AAAA,IAAAC,uBAAA;;AAAA,AAAA,GAAA,CAAAA,uBAAAD;AAAA,AAAA,AAAAD,wBAAA,CAAA,UAAAE;;AAAA,cAAA,CAAAA,uBAAA;;;;AAAA;;;;AAAA,IAAAC,uBAAA,EAAA,CAAA,MAAA,AAAAH,4BAAA,AAAA,KAAAI,qBAAA,AAAAJ,yBAAA,KAAA,IAAA,OAAA;AAAA,AAAA,OAAAK,yFAAAF;;;AAAA,AAAA,AAAA,AAAAE,2FAAA,WAAAC;AAAA,AAAA,IAAAC,YAAAD;IAAAC,gBAAA,EAAA,EAAA,EAAA,CAAAA,aAAA,QAAA,EAAA,EAAA,CAAA,AAAAA,gDAAA,WAAA,CAAAC,gCAAA,AAAAD,8BAAA,KAAA,OAAA,QAAA,AAAAE,8CAAAC,mBAAAH,WAAAA;mBAAA,AAAAI,4CAAAJ,cAAA,zEAAoCQ;qBAApC,AAAAJ,4CAAAJ,cAAA,3EAAiDS;4BAAjD,AAAAL,4CAAAJ,cAAA,lFAAgEU;AAAhE,AACE,iIAAA,iKAAA,2GAAA,tYAACC,0DAAMrB,gDAAesB,oFACQ,AAACC,2BAAUJ,sIACX,AAACK,yBAAQN,qGACT,AAACK,2BAAU,iBAAAE,mBAAIL;AAAJ,AAAA,oBAAAK;AAAAA;;AAA0BC;;;;;AAJrE,AAAA,AAAAlB,8EAAA;;AAAA;AAAA,AAAA,AAAAA,wEAAA,WAAAO;AAAA,AAAA,IAAAC,qBAAA;AAAA,AAAA,OAAAA,wDAAA,AAAAC,cAAAF;;;AAAA,AAMA,kDAAA,lDAAMY,4GAAgBC;AAAtB,AACE,OAACC,uBAA0B,AAACC,qBAAQF;;AAKtC,gDAAA,hDAAMG;AAAN,AACE,IAAAC,qBAAmB,AAAA,kGAAA,AAAAE,gBAAelC;AAAlC,AAAA,oBAAAgC;AAAA,AAAA,cAAAA,VAAWC;AAAX,AACE,QAACA,wCAAAA,0CAAAA;;AADH;;;AAGF,oDAAA,pDAAME,gHAAkBC;AAAxB,AACE,IAAAJ,qBAAmB,AAAA,kGAAA,AAAAE,gBAAelC;AAAlC,AAAA,oBAAAgC;AAAA,AAAA,cAAAA,VAAWC;AAAX,AACE,QAACA,wCAAAA,8CAAAA,RAAQG,0BAAAA;;AADX;;;AAGF,yDAAA,zDAAMC;AAAN,AACE,OAAA,qHAAA,AAAAH,gBAAyBlC","names":["js/com","js/com.degel","js/com.degel.re-frame-firebase","js/com.degel.re-frame-firebase.core","js/com.degel.re-frame-firebase.core.firebase-state","com.degel.re-frame-firebase.core/firebase-state","cljs.core.atom.cljs$core$IFn$_invoke$arity$1","var_args","args__4534__auto__","len__4531__auto__","i__4532__auto__","argseq__4535__auto__","cljs.core/IndexedSeq","com.degel.re-frame-firebase.core/set-firebase-state","p__9909","map__9910","cljs.core/PROTOCOL_SENTINEL","cljs.core.apply.cljs$core$IFn$_invoke$arity$2","cljs.core/hash-map","cljs.core.get.cljs$core$IFn$_invoke$arity$2","seq9908","self__4519__auto__","cljs.core/seq","get-user-sub","set-user-event","default-error-handler","cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$variadic","cljs.core/assoc","iron.re-utils/event->fn","iron.re-utils/sub->fn","or__3949__auto__","js/alert","com.degel.re-frame-firebase.core/initialize-app","firebase-app-info","js/firebase.initializeApp","cljs.core/clj->js","com.degel.re-frame-firebase.core/current-user","temp__5457__auto__","handler","cljs.core/deref","com.degel.re-frame-firebase.core/set-current-user","user","com.degel.re-frame-firebase.core/default-error-handler"],"sourcesContent":[";;; Author: David Goldfarb (deg@degel.com)\n;;; Copyright (c) 2017, David Goldfarb\n\n(ns com.degel.re-frame-firebase.core\n  (:require\n   [iron.re-utils :refer [<sub >evt event->fn sub->fn]]\n   [firebase.app :as firebase-app]))\n\n;;; Used mostly to register client handlers\n(defonce firebase-state (atom {}))\n\n(defn set-firebase-state [& {:keys [get-user-sub set-user-event default-error-handler]}]\n  (swap! firebase-state assoc\n         :set-user-fn           (event->fn set-user-event)\n         :get-user-fn           (sub->fn get-user-sub)\n         :default-error-handler (event->fn (or default-error-handler js/alert))))\n\n(defn initialize-app [firebase-app-info]\n  (js/firebase.initializeApp (clj->js firebase-app-info)))\n\n;;; [TODO] Consider adding a default atom to hold the user state when :get-user-fn and\n;;; and :set-user-fn are not defined. Need to do this carefully, so as not to cause any\n;;; surprises for users who accidentally defined just one of the two callbacks.\n(defn current-user []\n  (when-let [handler (:get-user-fn @firebase-state)]\n    (handler)))\n\n(defn set-current-user [user]\n  (when-let [handler (:set-user-fn @firebase-state)]\n    (handler user)))\n\n(defn default-error-handler []\n  (:default-error-handler @firebase-state))\n"]}