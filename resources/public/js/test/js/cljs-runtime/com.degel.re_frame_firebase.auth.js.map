{"version":3,"file":"com.degel.re_frame_firebase.auth.js","sources":["com/degel/re_frame_firebase/auth.cljs"],"mappings":"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","names":["com.degel.re-frame-firebase.auth/user","firebase-user","cljs.core/first","com.degel.re-frame-firebase.auth/set-user","com.degel.re-frame-firebase.core/set-current-user","com.degel.re-frame-firebase.auth/init-auth","js/firebase.auth","com.degel.re-frame-firebase.core/default-error-handler","user-credential","com.degel.re-frame-firebase.auth/sign-in-fns","target9916","auth-provider","target9917","com.degel.re-frame-firebase.auth/maybe-link-with-credential","pending-credential","and__3938__auto__","temp__5457__auto__","com.degel.re-frame-firebase.auth/oauth-sign-in","opts","map__9918","cljs.core/PROTOCOL_SENTINEL","cljs.core.apply.cljs$core$IFn$_invoke$arity$2","cljs.core/hash-map","cljs.core.get.cljs$core$IFn$_invoke$arity$3","cljs.core.get.cljs$core$IFn$_invoke$arity$2","sign-in-method","scopes","custom-parameters","link-with-credential","seq__9920","cljs.core/seq","chunk__9921","count__9922","i__9923","cljs.core/chunked-seq?","c__4351__auto__","cljs.core/chunk-first","cljs.core/chunk-rest","cljs.core/count","cljs.core/next","scope","cljs.core/clj->js","temp__5455__auto__","sign-in","G__9924","G__9925","cljs.core.partial.cljs$core$IFn$_invoke$arity$2","iron.re_utils._GT_evt.cljs$core$IFn$_invoke$arity$1","js/Error","com.degel.re-frame-firebase.auth/google-sign-in","js/firebase.auth.GoogleAuthProvider","com.degel.re-frame-firebase.auth/facebook-sign-in","js/firebase.auth.FacebookAuthProvider","com.degel.re-frame-firebase.auth/twitter-sign-in","js/firebase.auth.TwitterAuthProvider","com.degel.re-frame-firebase.auth/github-sign-in","js/firebase.auth.GithubAuthProvider","p__9976","map__9977","com.degel.re-frame-firebase.auth/email-sign-in","email","password","p__9979","map__9980","com.degel.re-frame-firebase.auth/email-create-user","com.degel.re-frame-firebase.auth/sign-out"],"sourcesContent":[";;; Author: David Goldfarb (deg@degel.com)\n;;; Copyright (c) 2017, David Goldfarb\n\n(ns com.degel.re-frame-firebase.auth\n  (:require-macros [reagent.ratom :refer [reaction]])\n  (:require\n   [clojure.spec.alpha :as s]\n   [re-frame.core :as re-frame]\n   [iron.re-utils :refer [>evt]]\n   [firebase.app :as firebase-app]\n   [firebase.auth :as firebase-auth]\n   [com.degel.re-frame-firebase.core :as core]))\n\n\n(defn- user\n  \"Extract interesting details from the Firebase JS user object.\"\n  [firebase-user]\n  (when firebase-user\n    {:uid           (.-uid firebase-user)\n     :provider-data (.-providerData firebase-user)\n     :display-name  (.-displayName firebase-user)\n     :photo-url     (.-photoURL firebase-user)\n     :email         (-> firebase-user .-providerData first .-email)}))\n\n(defn- set-user\n  [firebase-user]\n  (-> firebase-user\n      (user)\n      (core/set-current-user)))\n\n(defn- init-auth []\n  (.onAuthStateChanged\n   (js/firebase.auth)\n   set-user\n   (core/default-error-handler))\n\n  (-> (js/firebase.auth)\n      (.getRedirectResult)\n      (.then (fn on-user-credential [user-credential]\n               (-> user-credential\n                   (.-user)\n                   set-user)))\n      (.catch (core/default-error-handler))))\n\n(def ^:private sign-in-fns\n  {:popup (memfn signInWithPopup auth-provider)\n   :redirect (memfn signInWithRedirect auth-provider)})\n\n(defn- maybe-link-with-credential\n  [pending-credential user-credential]\n  (when (and pending-credential user-credential)\n    (when-let [firebase-user (.-user user-credential)]\n      (-> firebase-user\n          (.linkWithCredential pending-credential)\n          (.catch (core/default-error-handler))))))\n\n(defn- oauth-sign-in\n  [auth-provider opts]\n  (let [{:keys [sign-in-method scopes custom-parameters link-with-credential]\n         :or {sign-in-method :redirect}} opts]\n\n    (doseq [scope scopes]\n      (.addScope auth-provider scope))\n\n    (when custom-parameters\n      (.setCustomParameters auth-provider (clj->js custom-parameters)))\n\n    (if-let [sign-in (sign-in-fns sign-in-method)]\n      (-> (js/firebase.auth)\n          (sign-in auth-provider)\n          (.then (partial maybe-link-with-credential link-with-credential))\n          (.catch (core/default-error-handler)))\n      (>evt [(core/default-error-handler)\n             (js/Error. (str \"Unsupported sign-in-method: \" sign-in-method \". Either :redirect or :popup are supported.\"))]))))\n\n\n(defn google-sign-in\n  [opts]\n  ;; TODO: use Credential for mobile.\n  (oauth-sign-in (js/firebase.auth.GoogleAuthProvider.) opts))\n\n\n(defn facebook-sign-in\n  [opts]\n  (oauth-sign-in (js/firebase.auth.FacebookAuthProvider.) opts))\n\n\n(defn twitter-sign-in\n  [opts]\n  (oauth-sign-in (js/firebase.auth.TwitterAuthProvider.) opts))\n\n\n(defn github-sign-in\n  [opts]\n  (oauth-sign-in (js/firebase.auth.GithubAuthProvider.) opts))\n\n\n(defn email-sign-in [{:keys [email password]}]\n  (-> (js/firebase.auth)\n      (.signInWithEmailAndPassword email password)\n      (.then set-user)\n      (.catch (core/default-error-handler))))\n\n\n(defn email-create-user [{:keys [email password]}]\n  (-> (js/firebase.auth)\n      (.createUserWithEmailAndPassword email password)\n      (.then set-user)\n      (.catch (core/default-error-handler))))\n\n(defn sign-out []\n  (-> (js/firebase.auth)\n      (.signOut)\n      (.catch (core/default-error-handler))))\n"]}