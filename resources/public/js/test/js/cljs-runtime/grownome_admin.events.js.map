{"version":3,"file":"grownome_admin.events.js","sources":["grownome_admin/events.cljs"],"mappings":"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","names":["re_frame.core.reg_event_db.cljs$core$IFn$_invoke$arity$2","day8.re-frame.tracing/is-trace-enabled?","+debux-dbg-opts+","debux.common.util/send-form!","opts__5582__auto__","result__5583__auto__","debux.common.util/send-trace!","e","e9745","_","grownome-admin.db/default-db","p__9746","vec__9747","cljs.core.nth.cljs$core$IFn$_invoke$arity$3","e9751","p__9752","vec__9753","db","active-panel","cljs.core.assoc.cljs$core$IFn$_invoke$arity$3","re_frame.core.reg_event_fx.cljs$core$IFn$_invoke$arity$2","p__9757","vec__9758","user","G__9761","G__9762","re-frame.core/reg-sub","p__9765","vec__9766","e9770","p__9773","vec__9774","error","grownome-admin.events/test-data","grownome-admin.events/get-devices","d","cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2","cljs.core/first","cljs.core/second","grownome-admin.events/get-docs","cljs.core/rest","p__9782","vec__9784","grownome-admin.events/keywordize-pair","a","b","cljs.core.keyword.cljs$core$IFn$_invoke$arity$1","grownome-admin.events/get-as-map","cljs.core.reduce.cljs$core$IFn$_invoke$arity$3","result","G__9787","cljs.core/Keyword","cljs.core.into.cljs$core$IFn$_invoke$arity$2","cljs.core.map.cljs$core$IFn$_invoke$arity$2","grownome-admin.events/convert-data","p__9790","vec__9791","value","p__9794","vec__9795","owned-val","id","cljs.core.update_in.cljs$core$IFn$_invoke$arity$6","cljs.core/assoc-in"],"sourcesContent":["(ns grownome-admin.events\r\n  (:require\r\n   [re-frame.core :as re-frame]\r\n   [grownome-admin.db :as db]\r\n   [day8.re-frame.tracing :refer-macros [fn-traced defn-traced]]))\r\n\r\n(re-frame/reg-event-db\r\n ::initialize-db\r\n (fn-traced [_ _]\r\n   db/default-db))\r\n\r\n(re-frame/reg-event-db\r\n ::set-active-panel\r\n (fn-traced [db [_ active-panel]]\r\n   (assoc db :active-panel active-panel)))\r\n\r\n;; Firebase auth sign-in\r\n(re-frame/reg-event-fx\r\n ::sign-in\r\n (fn [_ _] {:firebase/google-sign-in {:sign-in-method :popup}}))\r\n\r\n\r\n;;; Firebase auth sign-out\r\n(re-frame/reg-event-fx\r\n ::sign-out\r\n (fn [_ _] {:firebase/sign-out nil}))\r\n\r\n\r\n;;; Firebase auth - Store the user object\r\n(re-frame/reg-event-db\r\n ::set-user\r\n (fn [db [_ user]]\r\n   (assoc db :user user)))\r\n\r\n;;; Firebase auth - A subscription to return the user to the library\r\n(re-frame/reg-sub\r\n ::user\r\n (fn [db _] (:user db)))\r\n\r\n;;; Firebase auth error\r\n(re-frame/reg-event-db\r\n ::firebase-error\r\n ;; Takes parameters of 1) Db and 2) the event\r\n ;; Key value is the db parameter and 2) is the information passed with the event\r\n ;; [{:key :value} [::firebase-error {:errormetadata \"our error\"}]]\r\n (fn-traced [db [_ error]]\r\n            (assoc db :firebase-error error)))\r\n\r\n;;; Firebase retrieve device collection, save into DB\r\n(re-frame/reg-event-fx\r\n ::device-get\r\n (fn [_ _] {:firestore/get {:path-collection [:device-names]\r\n                            :on-success [::save-devices]}}))\r\n\r\n(def test-data\r\n  [:devices [:docs\r\n             [:data [\"xx\" \"11\"] [\"yy\" \"22\"]]\r\n             [:id \"id\"]]])\r\n\r\n(defn get-devices\r\n  \"Pull the :devices data out of the incoming vector\"\r\n  [d]\r\n  (when (= :devices (first d))\r\n    (second d)))\r\n\r\n(defn get-docs\r\n  \"Extract the :docs data\"\r\n  [d]\r\n  (when (= :docs (first d))\r\n    (rest d)))\r\n\r\n(defn keywordize-pair\r\n  \"Convert a 2-string vector pair into a keyword/string vector pair\r\n  (note the extra set of square brackets)\"\r\n  [[a b]]\r\n  [(keyword a) b])\r\n\r\n(defn get-as-map\r\n  \"Convert heterogeneous vectors into a map\"\r\n  [d]\r\n  (reduce (fn [result d]\r\n            (case (first d)\r\n              :data (into result (map keywordize-pair (rest d)))\r\n              :id (assoc result :id (second d))\r\n              result))\r\n          {}\r\n          d))\r\n\r\n(defn convert-data\r\n  \"put it all together\"\r\n  [d]\r\n  [:devices (-> (get-devices d)\r\n                get-docs\r\n                get-as-map)])\r\n\r\n;; [:devices [:docs [:data [...], :id [id], ...]]]\r\n;; Save the devices retrieved from Firestore to the DB\r\n(re-frame/reg-event-db\r\n ::save-devices\r\n (fn [db [_ value]]\r\n   (assoc db :devices value)\r\n        ))\r\n\r\n;;; device editing updates Owned in DB\r\n(re-frame/reg-event-db\r\n ::owned-updatedb\r\n  (fn [db [_ owned-val id]]\r\n    (update-in db [:devices :docs [:id id]] assoc-in db [:devices :docs :data :owned] owned-val)))\r\n\r\n;;; device editing updates Initial State Link in DB\r\n#_(re-frame/reg-event-db\r\n ::islink-updatedb\r\n (println \"trying to change\")\r\n (fn [db [_ ISLink-val id]]\r\n   (update-in db {:devices :docs :id id} assoc [:devices :docs :data :initialStateLink] ISLink-val)))\r\n\r\n;;; Firebase write to Firestore\r\n(re-frame/reg-event-fx\r\n :owned-update\r\n (fn [_ _] {:firestore/update {:path [:device-names :document]\r\n                               :data {:owned-val \"owned-val\"}}}))\r\n"]}