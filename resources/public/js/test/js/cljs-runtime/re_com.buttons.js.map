{"version":3,"file":"re_com.buttons.js","sources":["re_com/buttons.cljs"],"mappings":"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","names":["re-com.buttons/button-args-desc","re-com.validate/string-or-hiccup?","cljs.core/fn?","re-com.validate/position?","re-com.validate/position-options-list","cljs.core/string?","re-com.validate/css-style?","re-com.validate/html-attr?","re-com.buttons/button","showing?","reagent.core.atom.cljs$core$IFn$_invoke$arity$1","p__7806","map__7807","cljs.core/PROTOCOL_SENTINEL","cljs.core.apply.cljs$core$IFn$_invoke$arity$2","cljs.core/hash-map","cljs.core.get.cljs$core$IFn$_invoke$arity$2","cljs.core.get.cljs$core$IFn$_invoke$arity$3","js/Error","label","on-click","tooltip","tooltip-position","disabled?","class","style","attr","args","js/goog.DEBUG","re_com.validate.validate_args.cljs$core$IFn$_invoke$arity$variadic","re-com.validate/extract-arg-data","cljs.core/reset!","re-com.util/deref-or-value","the-button","cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic","re-com.box/flex-child-style","event","and__3938__auto__","cljs.core/not","re-com.box/box","re-com.popover/popover-tooltip","or__3949__auto__","re-com.buttons/md-circle-icon-button-args-desc","re-com.validate/button-size?","re-com.validate/button-sizes-list","re-com.buttons/md-circle-icon-button","p__7843","map__7844","md-icon-name","size","emphasise?","G__7846","cljs.core/Keyword","re-com.buttons/md-icon-button-args-desc","re-com.buttons/md-icon-button","p__7875","map__7877","G__7885","re-com.buttons/info-button-args-desc","re-com.buttons/info-button","p__7917","map__7919","info","position","width","cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2","re-com.buttons/row-button-args-desc","re-com.buttons/row-button","p__7927","map__7928","mouse-over-row?","re-com.buttons/hyperlink-args-desc","re-com.buttons/hyperlink","p__7965","map__7966","re-com.buttons/hyperlink-href-args-desc","re-com.validate/string-or-atom?","re-com.buttons/hyperlink-href","p__7997","map__7998","href","target"],"sourcesContent":["(ns re-com.buttons\r\n  (:require-macros [re-com.core :refer [handler-fn]])\r\n  (:require [re-com.util     :refer [deref-or-value px]]\r\n            [re-com.validate :refer [position? position-options-list button-size? button-sizes-list\r\n                                     string-or-hiccup? css-style? html-attr? string-or-atom?] :refer-macros [validate-args-macro]]\r\n            [re-com.popover  :refer [popover-tooltip]]\r\n            [re-com.box      :refer [h-box v-box box gap line flex-child-style]]\r\n            [reagent.core    :as    reagent]))\r\n\r\n;; ------------------------------------------------------------------------------------\r\n;;  Component: button\r\n;; ------------------------------------------------------------------------------------\r\n\r\n(def button-args-desc\r\n  [{:name :label            :required true                         :type \"string | hiccup\" :validate-fn string-or-hiccup? :description \"label for the button\"}\r\n   {:name :on-click         :required false                        :type \"-> nil\"          :validate-fn fn?               :description \"a function which takes no params and returns nothing. Called when the button is clicked\"}\r\n   {:name :tooltip          :required false                        :type \"string | hiccup\" :validate-fn string-or-hiccup? :description \"what to show in the tooltip\"}\r\n   {:name :tooltip-position :required false :default :below-center :type \"keyword\"         :validate-fn position?         :description [:span \"relative to this anchor. One of \" position-options-list]}\r\n   {:name :disabled?        :required false :default false         :type \"boolean | atom\"                                 :description \"if true, the user can't click the button\"}\r\n   {:name :class            :required false                        :type \"string\"          :validate-fn string?           :description \"CSS class names, space separated\"}\r\n   {:name :style            :required false                        :type \"CSS style map\"   :validate-fn css-style?        :description \"CSS styles\"}\r\n   {:name :attr             :required false                        :type \"HTML attr map\"   :validate-fn html-attr?        :description [:span \"HTML attributes, like \" [:code \":on-mouse-move\"] [:br] \"No \" [:code \":class\"] \" or \" [:code \":style\"] \"allowed\"]}])\r\n\r\n(defn button\r\n  \"Returns the markup for a basic button\"\r\n  []\r\n  (let [showing? (reagent/atom false)]\r\n    (fn\r\n      [& {:keys [label on-click tooltip tooltip-position disabled? class style attr]\r\n          :or   {class \"btn-default\"}\r\n          :as   args}]\r\n      {:pre [(validate-args-macro button-args-desc args \"button\")]}\r\n      (when-not tooltip (reset! showing? false)) ;; To prevent tooltip from still showing after button drag/drop\r\n      (let [disabled? (deref-or-value disabled?)\r\n            the-button [:button\r\n                        (merge\r\n                          {:class    (str \"rc-button btn \" class)\r\n                           :style    (merge\r\n                                       (flex-child-style \"none\")\r\n                                       style)\r\n                           :disabled disabled?\r\n                           :on-click (handler-fn\r\n                                       (when (and on-click (not disabled?))\r\n                                         (on-click event)))}\r\n                          (when tooltip\r\n                            {:on-mouse-over (handler-fn (reset! showing? true))\r\n                             :on-mouse-out  (handler-fn (reset! showing? false))})\r\n                          attr)\r\n                        label]]\r\n        (when disabled?\r\n          (reset! showing? false))\r\n        [box\r\n         :class \"display-inline-flex\"\r\n         :align :start\r\n         :child (if tooltip\r\n                  [popover-tooltip\r\n                   :label    tooltip\r\n                   :position (or tooltip-position :below-center)\r\n                   :showing? showing?\r\n                   :anchor   the-button]\r\n                  the-button)]))))\r\n\r\n\r\n;;--------------------------------------------------------------------------------------------------\r\n;; Component: md-circle-icon-button\r\n;;--------------------------------------------------------------------------------------------------\r\n\r\n(def md-circle-icon-button-args-desc\r\n  [{:name :md-icon-name     :required true  :default \"zmdi-plus\"   :type \"string\"          :validate-fn string?           :description [:span \"the name of the icon.\" [:br] \"For example, \" [:code \"\\\"zmdi-plus\\\"\"] \" or \" [:code \"\\\"zmdi-undo\\\"\"]] }\r\n   {:name :on-click         :required false                        :type \"-> nil\"          :validate-fn fn?               :description \"a function which takes no params and returns nothing. Called when the button is clicked\"}\r\n   {:name :size             :required false :default :regular      :type \"keyword\"         :validate-fn button-size?      :description [:span \"one of \" button-sizes-list]}\r\n   {:name :tooltip          :required false                        :type \"string | hiccup\" :validate-fn string-or-hiccup? :description \"what to show in the tooltip\"}\r\n   {:name :tooltip-position :required false :default :below-center :type \"keyword\"         :validate-fn position?         :description [:span \"relative to this anchor. One of \" position-options-list]}\r\n   {:name :emphasise?       :required false :default false         :type \"boolean\"                                        :description \"if true, use emphasised styling so the button really stands out\"}\r\n   {:name :disabled?        :required false :default false         :type \"boolean\"                                        :description \"if true, the user can't click the button\"}\r\n   {:name :class            :required false                        :type \"string\"          :validate-fn string?           :description \"CSS class names, space separated\"}\r\n   {:name :style            :required false                        :type \"CSS style map\"   :validate-fn css-style?        :description \"CSS styles to add or override\"}\r\n   {:name :attr             :required false                        :type \"HTML attr map\"   :validate-fn html-attr?        :description [:span \"HTML attributes, like \" [:code \":on-mouse-move\"] [:br] \"No \" [:code \":class\"] \" or \" [:code \":style\"] \"allowed\"]}])\r\n\r\n(defn md-circle-icon-button\r\n  \"a circular button containing a material design icon\"\r\n  []\r\n  (let [showing? (reagent/atom false)]\r\n    (fn\r\n      [& {:keys [md-icon-name on-click size tooltip tooltip-position emphasise? disabled? class style attr]\r\n          :or   {md-icon-name \"zmdi-plus\"}\r\n          :as   args}]\r\n      {:pre [(validate-args-macro md-circle-icon-button-args-desc args \"md-circle-icon-button\")]}\r\n      (when-not tooltip (reset! showing? false)) ;; To prevent tooltip from still showing after button drag/drop\r\n      (let [the-button [:div\r\n                        (merge\r\n                          {:class    (str\r\n                                       \"rc-md-circle-icon-button noselect \"\r\n                                       (case size\r\n                                         :smaller \"rc-circle-smaller \"\r\n                                         :larger \"rc-circle-larger \"\r\n                                         \" \")\r\n                                       (when emphasise? \"rc-circle-emphasis \")\r\n                                       (when disabled? \"rc-circle-disabled \")\r\n                                       class)\r\n                           :style    (merge\r\n                                       {:cursor (when-not disabled? \"pointer\")}\r\n                                       style)\r\n                           :on-click (handler-fn\r\n                                       (when (and on-click (not disabled?))\r\n                                         (on-click event)))}\r\n                          (when tooltip\r\n                            {:on-mouse-over (handler-fn (reset! showing? true))\r\n                             :on-mouse-out  (handler-fn (reset! showing? false))})\r\n                          attr)\r\n                        [:i {:class (str \"zmdi zmdi-hc-fw-rc \" md-icon-name)}]]]\r\n        [box\r\n         :class \"display-inline-flex\"\r\n         :align :start\r\n         :child (if tooltip\r\n                  [popover-tooltip\r\n                   :label    tooltip\r\n                   :position (or tooltip-position :below-center)\r\n                   :showing? showing?\r\n                   :anchor   the-button]\r\n                  the-button)]))))\r\n\r\n\r\n;;--------------------------------------------------------------------------------------------------\r\n;; Component: md-icon-button\r\n;;--------------------------------------------------------------------------------------------------\r\n\r\n(def md-icon-button-args-desc\r\n  [{:name :md-icon-name     :required true  :default \"zmdi-plus\"   :type \"string\"          :validate-fn string?           :description [:span \"the name of the icon.\" [:br] \"For example, \" [:code \"\\\"zmdi-plus\\\"\"] \" or \" [:code \"\\\"zmdi-undo\\\"\"]]}\r\n   {:name :on-click         :required false                        :type \"-> nil\"          :validate-fn fn?               :description \"a function which takes no params and returns nothing. Called when the button is clicked\"}\r\n   {:name :size             :required false :default :regular      :type \"keyword\"         :validate-fn button-size?      :description [:span \"one of \" button-sizes-list]}\r\n   {:name :tooltip          :required false                        :type \"string | hiccup\" :validate-fn string-or-hiccup? :description \"what to show in the tooltip\"}\r\n   {:name :tooltip-position :required false :default :below-center :type \"keyword\"         :validate-fn position?         :description [:span \"relative to this anchor. One of \" position-options-list]}\r\n   {:name :emphasise?       :required false :default false         :type \"boolean\"                                        :description \"if true, use emphasised styling so the button really stands out\"}\r\n   {:name :disabled?        :required false :default false         :type \"boolean\"                                        :description \"if true, the user can't click the button\"}\r\n   {:name :class            :required false                        :type \"string\"          :validate-fn string?           :description \"CSS class names, space separated\"}\r\n   {:name :style            :required false                        :type \"CSS style map\"   :validate-fn css-style?        :description \"CSS styles to add or override\"}\r\n   {:name :attr             :required false                        :type \"HTML attr map\"   :validate-fn html-attr?        :description [:span \"HTML attributes, like \" [:code \":on-mouse-move\"] [:br] \"No \" [:code \":class\"] \" or \" [:code \":style\"] \"allowed\"]}])\r\n\r\n(defn md-icon-button\r\n  \"a square button containing a material design icon\"\r\n  []\r\n  (let [showing? (reagent/atom false)]\r\n    (fn\r\n      [& {:keys [md-icon-name on-click size tooltip tooltip-position emphasise? disabled? class style attr]\r\n          :or   {md-icon-name \"zmdi-plus\"}\r\n          :as   args}]\r\n      {:pre [(validate-args-macro md-icon-button-args-desc args \"md-icon-button\")]}\r\n      (when-not tooltip (reset! showing? false)) ;; To prevent tooltip from still showing after button drag/drop\r\n      (let [the-button [:div\r\n                        (merge\r\n                          {:class    (str\r\n                                       \"rc-md-icon-button noselect \"\r\n                                       (case size\r\n                                         :smaller \"rc-icon-smaller \"\r\n                                         :larger \"rc-icon-larger \"\r\n                                         \" \")\r\n                                       (when emphasise? \"rc-icon-emphasis \")\r\n                                       (when disabled? \"rc-icon-disabled \")\r\n                                       class)\r\n                           :style    (merge\r\n                                       {:cursor (when-not disabled? \"pointer\")}\r\n                                       style)\r\n                           :on-click (handler-fn\r\n                                       (when (and on-click (not disabled?))\r\n                                         (on-click event)))}\r\n                          (when tooltip\r\n                            {:on-mouse-over (handler-fn (reset! showing? true))\r\n                             :on-mouse-out  (handler-fn (reset! showing? false))})\r\n                          attr)\r\n                        [:i {:class (str \"zmdi zmdi-hc-fw-rc \" md-icon-name)}]]]\r\n        [box\r\n         :class \"display-inline-flex\"\r\n         :align :start\r\n         :child (if tooltip\r\n                  [popover-tooltip\r\n                   :label    tooltip\r\n                   :position (or tooltip-position :below-center)\r\n                   :showing? showing?\r\n                   :anchor   the-button]\r\n                  the-button)]))))\r\n\r\n\r\n;;--------------------------------------------------------------------------------------------------\r\n;; Component: info-button\r\n;;--------------------------------------------------------------------------------------------------\r\n\r\n(def info-button-args-desc\r\n  [{:name :info     :required true                        :type \"string | hiccup\" :validate-fn string-or-hiccup? :description \"what's shown in the popover\"}\r\n   {:name :position :required false :default :right-below :type \"keyword\"         :validate-fn position?         :description [:span \"relative to this anchor. One of \" position-options-list]}\r\n   {:name :width    :required false :default \"250px\"      :type \"string\"          :validate-fn string?           :description \"width in px\"}\r\n   {:name :class    :required false                       :type \"string\"          :validate-fn string?           :description \"CSS class names, space separated\"}\r\n   {:name :style    :required false                       :type \"CSS style map\"   :validate-fn css-style?        :description \"CSS styles to add or override\"}\r\n   {:name :attr     :required false                       :type \"HTML attr map\"   :validate-fn html-attr?        :description [:span \"HTML attributes, like \" [:code \":on-mouse-move\"] [:br] \"No \" [:code \":class\"] \" or \" [:code \":style\"] \"allowed\"]}])\r\n\r\n(defn info-button\r\n  \"A tiny light grey button, with an 'i' in it. Meant to be unobrusive.\r\n  When pressed, displays a popup assumidly containing helpful information.\r\n  Primarily designed to be nestled against the label of an input field, explaining the purpose of that field.\r\n  Create a very small \\\"i\\\" icon via SVG\"\r\n  []\r\n  (let [showing? (reagent/atom false)]\r\n    (fn\r\n      [& {:keys [info position width class style attr] :as args}]\r\n      {:pre [(validate-args-macro info-button-args-desc args \"info-button\")]}\r\n      [popover-tooltip\r\n       :label     info\r\n       :status    :info\r\n       :position  (or position :right-below)\r\n       :width     (or width \"250px\")\r\n       :showing?  showing?\r\n       :on-cancel #(swap! showing? not)\r\n       :anchor    [:div\r\n                   (merge\r\n                     {:class    (str \"rc-info-button noselect \" class)\r\n                      :style    (merge {:cursor \"pointer\"} style)\r\n                      :on-click (handler-fn (swap! showing? not))}\r\n                     attr)\r\n                   [:svg {:width \"11\" :height \"11\"}\r\n                    [:circle {:cx \"5.5\" :cy \"5.5\" :r \"5.5\"}]\r\n                    [:circle {:cx \"5.5\" :cy \"2.5\" :r \"1.4\" :fill \"white\"}]\r\n                    [:line   {:x1 \"5.5\" :y1 \"5.2\" :x2 \"5.5\" :y2 \"9.7\" :stroke \"white\" :stroke-width \"2.5\"}]]]])))\r\n\r\n\r\n;;--------------------------------------------------------------------------------------------------\r\n;; Component: row-button\r\n;;--------------------------------------------------------------------------------------------------\r\n\r\n(def row-button-args-desc\r\n  [{:name :md-icon-name     :required true  :default \"zmdi-plus\"   :type \"string\"          :validate-fn string?           :description [:span \"the name of the icon.\" [:br] \"For example, \" [:code \"\\\"zmdi-plus\\\"\"] \" or \" [:code \"\\\"zmdi-undo\\\"\"]]}\r\n   {:name :on-click         :required false                        :type \"-> nil\"          :validate-fn fn?               :description \"a function which takes no params and returns nothing. Called when the button is clicked\"}\r\n   {:name :mouse-over-row?  :required false :default false         :type \"boolean\"                                        :description \"true if the mouse is hovering over the row\"}\r\n   {:name :tooltip          :required false                        :type \"string | hiccup\" :validate-fn string-or-hiccup? :description \"what to show in the tooltip\"}\r\n   {:name :tooltip-position :required false :default :below-center :type \"keyword\"         :validate-fn position?         :description [:span \"relative to this anchor. One of \" position-options-list]}\r\n   {:name :disabled?        :required false :default false         :type \"boolean\"                                        :description \"if true, the user can't click the button\"}\r\n   {:name :class            :required false                        :type \"string\"          :validate-fn string?           :description \"CSS class names, space separated\"}\r\n   {:name :style            :required false                        :type \"CSS style map\"   :validate-fn css-style?        :description \"CSS styles to add or override\"}\r\n   {:name :attr             :required false                        :type \"HTML attr map\"   :validate-fn html-attr?        :description [:span \"HTML attributes, like \" [:code \":on-mouse-move\"] [:br] \"No \" [:code \":class\"] \" or \" [:code \":style\"] \"allowed\"]}])\r\n\r\n(defn row-button\r\n  \"a small button containing a material design icon\"\r\n  []\r\n  (let [showing? (reagent/atom false)]\r\n    (fn\r\n      [& {:keys [md-icon-name on-click mouse-over-row? tooltip tooltip-position disabled? class style attr]\r\n          :or   {md-icon-name \"zmdi-plus\"}\r\n          :as   args}]\r\n      {:pre [(validate-args-macro row-button-args-desc args \"row-button\")]}\r\n      (when-not tooltip (reset! showing? false)) ;; To prevent tooltip from still showing after button drag/drop\r\n      (let [the-button [:div\r\n                        (merge\r\n                          {:class    (str\r\n                                       \"rc-row-button noselect \"\r\n                                       (when mouse-over-row? \"rc-row-mouse-over-row \")\r\n                                       (when disabled? \"rc-row-disabled \")\r\n                                       class)\r\n                           :style    style\r\n                           :on-click (handler-fn\r\n                                       (when (and on-click (not disabled?))\r\n                                         (on-click event)))}\r\n                          (when tooltip\r\n                            {:on-mouse-over (handler-fn (reset! showing? true))\r\n                             :on-mouse-out  (handler-fn (reset! showing? false))}) ;; Need to return true to ALLOW default events to be performed\r\n                          attr)\r\n                        [:i {:class (str \"zmdi zmdi-hc-fw-rc \" md-icon-name)}]]]\r\n        [box\r\n         :class \"display-inline-flex\"\r\n         :align :start\r\n         :child (if tooltip\r\n                  [popover-tooltip\r\n                   :label    tooltip\r\n                   :position (or tooltip-position :below-center)\r\n                   :showing? showing?\r\n                   :anchor   the-button]\r\n                  the-button)]))))\r\n\r\n\r\n;;--------------------------------------------------------------------------------------------------\r\n;; Component: hyperlink\r\n;;--------------------------------------------------------------------------------------------------\r\n\r\n(def hyperlink-args-desc\r\n  [{:name :label            :required true                         :type \"string | hiccup | atom\" :validate-fn string-or-hiccup? :description \"label/hiccup for the button\"}\r\n   {:name :on-click         :required false                        :type \"-> nil\"                 :validate-fn fn?               :description \"a function which takes no params and returns nothing. Called when the button is clicked\"}\r\n   {:name :tooltip          :required false                        :type \"string | hiccup\"        :validate-fn string-or-hiccup? :description \"what to show in the tooltip\"}\r\n   {:name :tooltip-position :required false :default :below-center :type \"keyword\"                :validate-fn position?         :description [:span \"relative to this anchor. One of \" position-options-list]}\r\n   {:name :disabled?        :required false :default false         :type \"boolean | atom\"                                        :description \"if true, the user can't click the button\"}\r\n   {:name :class            :required false                        :type \"string\"                 :validate-fn string?           :description \"CSS class names, space separated\"}\r\n   {:name :style            :required false                        :type \"CSS style map\"          :validate-fn css-style?        :description \"CSS styles to add or override\"}\r\n   {:name :attr             :required false                        :type \"HTML attr map\"          :validate-fn html-attr?        :description [:span \"HTML attributes, like \" [:code \":on-mouse-move\"] [:br] \"No \" [:code \":class\"] \" or \" [:code \":style\"] \"allowed\"]}])\r\n\r\n(defn hyperlink\r\n  \"Renders an underlined text hyperlink component.\r\n   This is very similar to the button component above but styled to looks like a hyperlink.\r\n   Useful for providing button functionality for less important functions, e.g. Cancel\"\r\n  []\r\n  (let [showing? (reagent/atom false)]\r\n    (fn\r\n      [& {:keys [label on-click tooltip tooltip-position disabled? class style attr] :as args}]\r\n      {:pre [(validate-args-macro hyperlink-args-desc args \"hyperlink\")]}\r\n      (when-not tooltip (reset! showing? false)) ;; To prevent tooltip from still showing after button drag/drop\r\n      (let [label      (deref-or-value label)\r\n            disabled?  (deref-or-value disabled?)\r\n            the-button [box\r\n                        :align :start\r\n                        :child [:a\r\n                                (merge\r\n                                  {:class    (str \"rc-hyperlink noselect \" class)\r\n                                   :style    (merge\r\n                                               (flex-child-style \"none\")\r\n                                               {:cursor (if disabled? \"not-allowed\" \"pointer\")\r\n                                                :color  (when disabled? \"grey\")}\r\n                                               style)\r\n                                   :on-click (handler-fn\r\n                                               (when (and on-click (not disabled?))\r\n                                                 (on-click event)))}\r\n                                  (when tooltip\r\n                                    {:on-mouse-over (handler-fn (reset! showing? true))\r\n                                     :on-mouse-out  (handler-fn (reset! showing? false))})\r\n                                  attr)\r\n                                label]]]\r\n        [box\r\n         :class \"display-inline-flex\"\r\n         :align :start\r\n         :child (if tooltip\r\n                  [popover-tooltip\r\n                   :label    tooltip\r\n                   :position (or tooltip-position :below-center)\r\n                   :showing? showing?\r\n                   :anchor   the-button]\r\n                  the-button)]))))\r\n\r\n\r\n;;--------------------------------------------------------------------------------------------------\r\n;; Component: hyperlink-href\r\n;;--------------------------------------------------------------------------------------------------\r\n\r\n(def hyperlink-href-args-desc\r\n  [{:name :label            :required true                         :type \"string | hiccup | atom\" :validate-fn string-or-hiccup? :description \"label/hiccup for the button\"}\r\n   {:name :href             :required true                         :type \"string | atom\"          :validate-fn string-or-atom?   :description \"if specified, the link target URL\"}\r\n   {:name :target           :required false :default \"_self\"       :type \"string | atom\"          :validate-fn string-or-atom?   :description \"one of \\\"_self\\\" or \\\"_blank\\\"\"}\r\n   {:name :tooltip          :required false                        :type \"string | hiccup\"        :validate-fn string-or-hiccup? :description \"what to show in the tooltip\"}\r\n   {:name :tooltip-position :required false :default :below-center :type \"keyword\"                :validate-fn position?         :description [:span \"relative to this anchor. One of \" position-options-list]}\r\n   {:name :class            :required false                        :type \"string\"                 :validate-fn string?           :description \"CSS class names, space separated\"}\r\n   {:name :style            :required false                        :type \"CSS style map\"          :validate-fn css-style?        :description \"CSS styles to add or override\"}\r\n   {:name :attr             :required false                        :type \"HTML attr map\"          :validate-fn html-attr?        :description [:span \"HTML attributes, like \" [:code \":on-mouse-move\"] [:br] \"No \" [:code \":class\"] \" or \" [:code \":style\"] \"allowed\"]}])\r\n\r\n(defn hyperlink-href\r\n  \"Renders an underlined text hyperlink component.\r\n   This is very similar to the button component above but styled to looks like a hyperlink.\r\n   Useful for providing button functionality for less important functions, e.g. Cancel\"\r\n  []\r\n  (let [showing? (reagent/atom false)]\r\n    (fn\r\n      [& {:keys [label href target tooltip tooltip-position class style attr] :as args}]\r\n      {:pre [(validate-args-macro hyperlink-href-args-desc args \"hyperlink-href\")]}\r\n      (when-not tooltip (reset! showing? false)) ;; To prevent tooltip from still showing after button drag/drop\r\n      (let [label      (deref-or-value label)\r\n            href       (deref-or-value href)\r\n            target     (deref-or-value target)\r\n            the-button [:a\r\n                        (merge {:class  (str \"rc-hyperlink-href noselect \" class)\r\n                                :style  (merge (flex-child-style \"none\")\r\n                                               style)\r\n                                :href   href\r\n                                :target target}\r\n                               (when tooltip\r\n                                 {:on-mouse-over (handler-fn (reset! showing? true))\r\n                                  :on-mouse-out  (handler-fn (reset! showing? false))})\r\n                               attr)\r\n                        label]]\r\n\r\n        [box\r\n         :class \"display-inline-flex\"\r\n         :align :start\r\n         :child (if tooltip\r\n                  [popover-tooltip\r\n                   :label    tooltip\r\n                   :position (or tooltip-position :below-center)\r\n                   :showing? showing?\r\n                   :anchor   the-button]\r\n                  the-button)]))))\r\n"]}