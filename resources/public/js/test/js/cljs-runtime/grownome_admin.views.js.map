{"version":3,"file":"grownome_admin.views.js","sources":["grownome_admin/views.cljs"],"mappings":"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","names":["grownome-admin.views/link-to-home-page","re-com.core/hyperlink-href","grownome-admin.views/link-to-devices-page","grownome-admin.views/link-to-customers-page","grownome-admin.views/home-panel","grownome-admin.views/device-row","device","edit-mode?","reagent.core.atom.cljs$core$IFn$_invoke$arity$1","owned-val","link-val","status","status-tooltip","re-com.core/h-box","p1__9818#","p1__9819#","cljs.core/deref","cljs.core/not","re-com.core/box","re-com.core/title","re-com.core/p","cljs.core.get.cljs$core$IFn$_invoke$arity$3","re-com.core/gap","re-com.buttons/md-icon-button","cljs.core/reset!","re-com.core/input-text","G__9827","re-frame.core/dispatch","cljs.core.println.cljs$core$IFn$_invoke$arity$variadic","G__9830","G__9832","G__9833","grownome-admin.views/devices-list","sorted?","sorted-field","inverted?","devices","G__9846","re-frame.core/subscribe","re-com.core/v-box","temp__5455__auto__","ds","cljs.core.into.cljs$core$IFn$_invoke$arity$2","iter__4324__auto__","s__9848","cljs.core/LazySeq","temp__5457__auto__","cljs.core/seq","cljs.core/chunked-seq?","c__4322__auto__","size__4323__auto__","cljs.core/count","b__9850","cljs.core/chunk-buffer","i__9849","cljs.core._nth.cljs$core$IFn$_invoke$arity$2","cljs.core/chunk-append","cljs.core/chunk-cons","cljs.core/chunk","iter__9847","cljs.core/chunk-rest","cljs.core/first","cljs.core/cons","cljs.core/rest","d","grownome-admin.views/devices-panel","re-com.core/button","G__9852","grownome-admin.views/customers-title","grownome-admin.views/customers-panel","grownome-admin.views/useful-hyperlinks","target","href?","grownome-admin.views/nav-panel","G__9858","grownome-admin.views/panels","panel-name","G__9873","cljs.core/Keyword","grownome-admin.views/show-panel","grownome-admin.views/main-panel","active-panel","G__9886","cljs.core/chunk-first"],"sourcesContent":["(ns grownome-admin.views\r\n  (:require\r\n   [re-frame.core :as re-frame]\r\n   [grownome-admin.events :as events]\r\n   [re-com.core :refer [p row-button h-box v-box box gap line scroller border label title button checkbox hyperlink-href slider horizontal-bar-tabs info-button input-text input-textarea popover-anchor-wrapper popover-content-wrapper popover-tooltip] :refer-macros [handler-fn]]\r\n   [re-com.buttons :refer [row-button-args-desc md-icon-button]]\r\n   [re-com.util :refer [enumerate]]\r\n   [re-com.modal-panel :refer [modal-panel]]\r\n   [grownome-admin.subs :as subs]\r\n   [reagent.core :as    reagent]\r\n   ))\r\n\r\n;; page links\r\n(defn link-to-home-page []\r\n  [hyperlink-href\r\n   :label \"Home Page\"\r\n   :href \"#/\"])\r\n\r\n(defn link-to-devices-page []\r\n  [hyperlink-href\r\n   :label \"Devices\"\r\n   :href \"#/devices\"])\r\n\r\n(defn link-to-customers-page []\r\n  [hyperlink-href\r\n   :label \"Customers\"\r\n   :href \"#/customers\"])\r\n\r\n\r\n\r\n;; home page\r\n(defn home-panel []\r\n  )\r\n\r\n\r\n\r\n\r\n;; devices page\r\n\r\n;; formats the individual rows in the table. Boxes are included to add custom\r\n;; alignment to match the table headers. Accesses firestore \"device-names\"\r\n;; database. For every entry in Firestore, a new row is created with\r\n;; the designated formatting.\r\n(defn device-row [device]\r\n  (let [edit-mode?      (reagent/atom false)\r\n        owned-val        (reagent/atom \"\")\r\n        link-val        (reagent/atom \"\")\r\n        status          (reagent/atom false)\r\n        status-tooltip  (reagent/atom \"\")]\r\n    (fn [device]\r\n      [h-box\r\n       :class \"rc-div-table-row\"\r\n       :width \"1060px\"\r\n       :gap \"15px\"\r\n       :children\r\n       (if (not @edit-mode?)\r\n         [              ;;use to bump columns to the right\r\n          [box :size \"initial\" :width \"1px\" :child [title :label \"\"]]\r\n          [box :size \"initial\" :width \"160px\"\r\n           :child [p (get device \"deviceName\" \"Default Value\")]]\r\n          [box :size \"initial\" :width \"100px\"\r\n           :child [p (get device \"owned\" \"Default Value\")]]\r\n          [gap :size \"17px\"] ;; required to accomodate Owned? sorting buttons\r\n          [box :size \"initial\" :width \"115px\"\r\n           :child [p (get device \"ownedBy\" \"Not Owned\")]]\r\n          [box :size \"initial\" :width \"185px\"\r\n           :child [p (get device \"initialStateLink\" \"Default Value\")]]\r\n          [box :size \"initial\" :width \"180px\"\r\n           :child [p (get device \"number\" \"Default Value\")]]\r\n          [box :size \"initial\" :width \"170px\"\r\n           :child [p (get device \"assignedDate\" \"Default Value\")]]\r\n          [md-icon-button :md-icon-name \"zmdi zmdi-edit\"\r\n           :on-click #(reset! edit-mode? true)]]\r\n         [[box :size \"initial\" :width \"1px\" :child [title :label \"\"]]\r\n          [box :size \"initial\" :width \"160px\"\r\n           :child [p (get device \"deviceName\" \"Default Value\")]]\r\n          [input-text\r\n           :model owned-val\r\n           :on-change #(do (re-frame/dispatch [::events/owned-updatedb owned-val])\r\n                           (println \"things are triggering\")\r\n                           (reset! owned-val %))\r\n           :width \"100px\"\r\n           :height \"20px\"]\r\n          [gap :size \"17px\"] ;; required to accomodate Owned? sorting buttons\r\n          [box :size \"initial\" :width \"115px\"\r\n           :child [p (get device \"ownedBy\" \"Not Owned\")]]\r\n          [input-text\r\n           :model link-val\r\n           :on-change #(do (re-frame/dispatch [::events/owned-updatedb owned-val])\r\n                           (reset! link-val %))\r\n           :width \"185px\"\r\n           :height \"20px\"]\r\n          [box :size \"initial\" :width \"180px\"\r\n           :child [p (get device \"number\" \"Default Value\")]]\r\n          [box :size \"initial\" :width \"170px\"\r\n           :child [p (get device \"assignedDate\" \"Default Value\")]]\r\n          [md-icon-button :md-icon-name \"zmdi zmdi-edit\"\r\n           :on-click #(do (re-frame/dispatch [::events/owned-updatedb owned-val])\r\n                          (re-frame/dispatch [::events/islink-updatedb link-val])\r\n                          (reset! edit-mode? false)\r\n                          )\r\n           ]]\r\n       )])))\r\n\r\n\r\n\r\n  ;; Creates the actual table, including the headers and the columns (that were\r\n  ;; formatted in device-row)\r\n  (defn devices-list []\r\n    (let [sorted? (reagent/atom false)\r\n          sorted-field (reagent/atom \"\")\r\n          inverted? (reagent/atom false)\r\n          devices (re-frame/subscribe [::subs/devices-sorted sorted? sorted-field inverted?])\r\n          ;; @ grabs these values from the atom, and keeps you safe from multiple\r\n          ;; concurrent changes\r\n          ]\r\n      (fn [] ;; needed when using multiple atoms so that things update properly\r\n        [v-box\r\n         :children [[h-box\r\n                     :max-width \"1060px\"\r\n                     :style {:margin \"0\"}\r\n                     :gap \"0px\"\r\n                     :children [[box :size \"initial\" :width \"160px\"\r\n                                 :child [title :level :level2 :label \"Device Name\"]]\r\n                                [gap :size \"15px\"]\r\n                                [box :size \"initial\" :width \"100px\"\r\n                                 :child [title :level :level2 :label \"Owned?\"]]\r\n                                [md-icon-button :size :smaller\r\n                                 :style {:padding-top \"20px\"}\r\n                                 :on-click #(do (reset! sorted? true)\r\n                                                (reset! sorted-field \"owned\")\r\n                                                (reset! inverted? false))\r\n                                 :md-icon-name \"zmdi zmdi-arrow-back zmdi-hc-rotate-90\"]\r\n                                [md-icon-button :size :smaller\r\n                                 :style {:padding-top \"20px\"}\r\n                                 :on-click #(do (reset! sorted? true)\r\n                                                (reset! sorted-field \"owned\")\r\n                                                (reset! inverted? true))\r\n                                 :md-icon-name \"zmdi zmdi-arrow-forward zmdi-hc-rotate-90\"]\r\n                                [gap :size \"15px\"]\r\n                                [box :size \"initial\" :width \"115px\"\r\n                                 :child [title :level :level2 :label \"Owned By\"]]\r\n                                [gap :size \"15px\"]\r\n                                [box :size \"initial\" :width \"185px\"\r\n                                 :child [title :level :level2 :label \"Initial State Link\"]]\r\n                                [gap :size \"15px\"]\r\n                                [box :size \"initial\" :width \"170px\"\r\n                                 :child [title :level :level2 :label \"Device Number\"]]\r\n                                [gap :size \"15px\"]\r\n                                [box :size \"initial\" :width \"170px\"\r\n                                 :child [title :level :level2 :label \"Assigned Date\"]]\r\n                                ]\r\n                     ]\r\n                    ;; code below pulls in the devices from device-row function\r\n                    (if-let [ds @devices]\r\n                      [h-box\r\n                       :children [[v-box ;; Device name\r\n                                   :children (into [] (for [d ds]\r\n                                                        (do [device-row (:data d)])))\r\n                                  ]]])]])))\r\n\r\n(defn devices-panel []\r\n  [v-box\r\n   :gap \"1em\"\r\n   :children [[button ;;use to refresh device listing\r\n               :label \"Refresh Device Listing\"\r\n               :on-click #(re-frame/dispatch [::events/device-get])]\r\n              [devices-list]]])\r\n\r\n;; customers page\r\n(defn customers-title []\r\n  [title\r\n   :label \"This is the Customers Page.\"\r\n   :level :level1])\r\n\r\n(defn customers-panel []\r\n  [v-box\r\n   :gap \"1em\"\r\n   :children [[customers-title]\r\n              [link-to-home-page]]])\r\n\r\n;; navigation\r\n(defn useful-hyperlinks []\r\n  (let [target (reagent/atom \"_blank\")\r\n        href? (reagent/atom true)]\r\n    (fn\r\n      []\r\n      [v-box\r\n       :size \"auto\"\r\n       :gap \"10px\"\r\n       :children [[hyperlink-href ;;Firebase console link\r\n                   :label \"Open Firebase\"\r\n                   :href (when href? \"https://console.firebase.google.com/u/0/project/grownome-app/overview\")\r\n                   :target (when href? target)\r\n                   ]\r\n                  [hyperlink-href\r\n                   :label \"Open Pivotal\" ;;Pivotal tracker link\r\n                   :href (when href? \"https://www.pivotaltracker.com/n/projects/2140870\")\r\n                   :target (when href? target)\r\n                   ]\r\n                  [hyperlink-href\r\n                   :label \"Open Google Cloud\" ;;Google Cloud Platform link\r\n                   :href (when href? \"https://console.cloud.google.com/home/dashboard?project=grownome&_ga=2.67711889.-1279443608.1514820147\")\r\n                   :target (when href? target)\r\n                   ]\r\n                  [hyperlink-href\r\n                   :label \"Open Google Drive\" ;;Pivotal tracker link\r\n                   :href (when href? \"https://drive.google.com/drive/u/0/my-drive\")\r\n                   :target (when href? target)\r\n                   ]\r\n                  [hyperlink-href\r\n                   :label \"Open Resin.io\" ;;Pivotal tracker link\r\n                   :href (when href? \"https://dashboard.resin.io/login\")\r\n                   :target (when href? target)\r\n                   ]]])))\r\n\r\n(defn nav-panel []\r\n  [v-box\r\n   :gap \"5px\"\r\n   :children [[title :label \"Pages\" :underline? true :level :level4]\r\n              [link-to-home-page]\r\n              [link-to-devices-page]\r\n              [link-to-customers-page]\r\n              [title :label \"Links\" :underline? true :level :level4]\r\n              [useful-hyperlinks]\r\n              [gap :size \"140px\"]\r\n              [button\r\n               :label \"Sign In\"\r\n               :on-click #(re-frame/dispatch [::events/sign-in])]\r\n              ]])\r\n\r\n(defn- panels [panel-name]\r\n  (case panel-name\r\n    :home-panel [home-panel]\r\n    :devices-panel [devices-panel]\r\n    :customers-panel [customers-panel]\r\n    :nav-panel [nav-panel]\r\n    [:div]))\r\n\r\n(defn show-panel [panel-name]\r\n  [panels panel-name])\r\n\r\n(defn main-panel []\r\n  (let [active-panel (re-frame/subscribe [::subs/active-panel])]\r\n    [v-box\r\n     :children [[h-box\r\n                 :size \"auto\"\r\n                 :children[[:img {:src \"img/Logo_full_green.png\"\r\n                                  :style {:max-width \"500px\"\r\n                                          :max-height \"100px\"\r\n                                          :width \"auto\"\r\n                                          :height \"auto\"\r\n                                          }}]\r\n                           [title :level :level1 :label (str \"Admin Panel\") :style {:margin-top \"30px\"\r\n                                                                                    :margin-left \"20px\"\r\n                                                                                    }]]]\r\n                [h-box\r\n                 :height \"100px\"\r\n                 :children [[box :size \"150px\"\r\n                             :style {:margin-left \"20px\" :margin-top \"40px\"}\r\n                             :child [panels :nav-panel]]\r\n                            [box\r\n                             :style {:margin-top \"40px\"}\r\n                             :child [panels @active-panel]]]]\r\n                ]]))\r\n"]}