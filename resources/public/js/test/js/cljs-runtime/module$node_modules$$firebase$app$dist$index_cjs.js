shadow$provide.module$node_modules$$firebase$app$dist$index_cjs=function(global,process,require,module,exports,shadow$shims){function createFirebaseNamespace(){function app(name){name=name||"[DEFAULT]";Object.prototype.hasOwnProperty.call(apps_,name)||error("no-app",{name:name});return apps_[name]}function getApps(){return Object.keys(apps_).map(function(name){return apps_[name]})}function callAppHooks(app,eventName){Object.keys(factories).forEach(function(serviceName){serviceName=useAsService(app,
serviceName);if(null!==serviceName&&appHooks[serviceName])appHooks[serviceName](eventName,app)})}function useAsService(app,name){return"serverAuth"===name?null:name}var apps_={},factories={},appHooks={},namespace={__esModule:!0,initializeApp:function(options,rawConfig){void 0===rawConfig&&(rawConfig={});if("object"!==typeof rawConfig||null===rawConfig)rawConfig={name:rawConfig};var config=rawConfig;void 0===config.name&&(config.name="[DEFAULT]");rawConfig=config.name;"string"===typeof rawConfig&&
rawConfig||error("bad-app-name",{name:rawConfig+""});Object.prototype.hasOwnProperty.call(apps_,rawConfig)&&error("duplicate-app",{name:rawConfig});options=new FirebaseAppImpl(options,config,namespace);apps_[rawConfig]=options;callAppHooks(options,"create");return options},app:app,apps:null,Promise:Promise,SDK_VERSION:"5.0.4",INTERNAL:{registerService:function(name,createService,serviceProperties,appHook,allowMultipleInstances){factories[name]&&error("duplicate-service",{name:name});factories[name]=
createService;appHook&&(appHooks[name]=appHook,getApps().forEach(function(app){appHook("create",app)}));createService=function(appArg){void 0===appArg&&(appArg=app());"function"!==typeof appArg[name]&&error("invalid-app-argument",{name:name});return appArg[name]()};void 0!==serviceProperties&&util.deepExtend(createService,serviceProperties);namespace[name]=createService;FirebaseAppImpl.prototype[name]=function(){for(var args=[],_i=0;_i<arguments.length;_i++)args[_i]=arguments[_i];return this._getService.bind(this,
name).apply(this,allowMultipleInstances?args:[])};return createService},createFirebaseNamespace:createFirebaseNamespace,extendNamespace:function(props){util.deepExtend(namespace,props)},createSubscribe:util.createSubscribe,ErrorFactory:util.ErrorFactory,removeApp:function(name){callAppHooks(apps_[name],"delete");delete apps_[name]},factories:factories,useAsService:useAsService,Promise:Promise,deepExtend:util.deepExtend}};util.patchProperty(namespace,"default",namespace);Object.defineProperty(namespace,
"apps",{get:getApps});util.patchProperty(app,"App",FirebaseAppImpl);return namespace}function error(code,args){throw appErrors.create(code,args);}Object.defineProperty(exports,"__esModule",{value:!0});var util=require("module$node_modules$$firebase$util$dist$index_cjs"),tokenListeners=[],FirebaseAppImpl=function(){function FirebaseAppImpl(options,config,firebase_){this.firebase_=firebase_;this.isDeleted_=!1;this.services_={};this.name_=config.name;this._automaticDataCollectionEnabled=config.automaticDataCollectionEnabled||
!1;this.options_=util.deepCopy(options);this.INTERNAL={getUid:function(){return null},getToken:function(){return Promise.resolve(null)},addAuthTokenListener:function(callback){tokenListeners.push(callback);setTimeout(function(){return callback(null)},0)},removeAuthTokenListener:function(callback){tokenListeners=tokenListeners.filter(function(listener){return listener!==callback})}}}Object.defineProperty(FirebaseAppImpl.prototype,"automaticDataCollectionEnabled",{get:function(){this.checkDestroyed_();
return this._automaticDataCollectionEnabled},set:function(val){this.checkDestroyed_();this._automaticDataCollectionEnabled=val},enumerable:!0,configurable:!0});Object.defineProperty(FirebaseAppImpl.prototype,"name",{get:function(){this.checkDestroyed_();return this.name_},enumerable:!0,configurable:!0});Object.defineProperty(FirebaseAppImpl.prototype,"options",{get:function(){this.checkDestroyed_();return this.options_},enumerable:!0,configurable:!0});FirebaseAppImpl.prototype.delete=function(){var _this=
this;return(new Promise(function(resolve){_this.checkDestroyed_();resolve()})).then(function(){_this.firebase_.INTERNAL.removeApp(_this.name_);var services=[];Object.keys(_this.services_).forEach(function(serviceKey){Object.keys(_this.services_[serviceKey]).forEach(function(instanceKey){services.push(_this.services_[serviceKey][instanceKey])})});return Promise.all(services.map(function(service){return service.INTERNAL.delete()}))}).then(function(){_this.isDeleted_=!0;_this.services_={}})};FirebaseAppImpl.prototype._getService=
function(name,instanceIdentifier){void 0===instanceIdentifier&&(instanceIdentifier="[DEFAULT]");this.checkDestroyed_();this.services_[name]||(this.services_[name]={});if(!this.services_[name][instanceIdentifier]){var instanceSpecifier="[DEFAULT]"!==instanceIdentifier?instanceIdentifier:void 0;instanceSpecifier=this.firebase_.INTERNAL.factories[name](this,this.extendApp.bind(this),instanceSpecifier);this.services_[name][instanceIdentifier]=instanceSpecifier}return this.services_[name][instanceIdentifier]};
FirebaseAppImpl.prototype.extendApp=function(props){var _this=this;util.deepExtend(this,props);props.INTERNAL&&props.INTERNAL.addAuthTokenListener&&(tokenListeners.forEach(function(listener){_this.INTERNAL.addAuthTokenListener(listener)}),tokenListeners=[])};FirebaseAppImpl.prototype.checkDestroyed_=function(){this.isDeleted_&&error("app-deleted",{name:this.name_})};return FirebaseAppImpl}();FirebaseAppImpl.prototype.name&&FirebaseAppImpl.prototype.options||FirebaseAppImpl.prototype.delete||console.log("dc");
var appErrors=new util.ErrorFactory("app","Firebase",{"no-app":"No Firebase App '{$name}' has been created - call Firebase App.initializeApp()","bad-app-name":"Illegal App name: '{$name}","duplicate-app":"Firebase App named '{$name}' already exists","app-deleted":"Firebase App named '{$name}' already deleted","duplicate-service":"Firebase service named '{$name}' already registered","sa-not-supported":"Initializing the Firebase SDK with a service account is only allowed in a Node.js environment. On client devices, you should instead initialize the SDK with an api key and auth domain",
"invalid-app-argument":"firebase.{$name}() takes either no argument or a Firebase App instance."});global=createFirebaseNamespace();exports.firebase=global;exports.default=global}
//# sourceMappingURL=module$node_modules$$firebase$app$dist$index_cjs.js.map
