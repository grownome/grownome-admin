{"version":3,"file":"re_com.alert.js","sources":["re_com/alert.cljs"],"mappings":"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","names":["re-com.alert/alert-box-args-desc","re-com.validate/alert-type?","re-com.validate/alert-types-list","re-com.validate/string-or-hiccup?","cljs.core/string?","cljs.core/fn?","re-com.validate/css-style?","re-com.validate/html-attr?","var_args","args__4534__auto__","len__4531__auto__","i__4532__auto__","argseq__4535__auto__","cljs.core/IndexedSeq","re-com.alert/alert-box","p__8054","map__8055","cljs.core/PROTOCOL_SENTINEL","cljs.core.apply.cljs$core$IFn$_invoke$arity$2","cljs.core/hash-map","cljs.core.get.cljs$core$IFn$_invoke$arity$2","cljs.core.get.cljs$core$IFn$_invoke$arity$3","js/Error","seq8051","self__4519__auto__","cljs.core/seq","id","alert-type","heading","body","padding","closeable?","on-close","class","style","attr","args","js/goog.DEBUG","re_com.validate.validate_args.cljs$core$IFn$_invoke$arity$variadic","re-com.validate/extract-arg-data","close-button","re-com.buttons/button","event","alert-class","G__8063","cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic","re-com.box/flex-child-style","re-com.box/h-box","and__3938__auto__","cljs.core/not","re-com.alert/alert-list-args-desc","re-com.validate/vector-of-maps?","re-com.alert/alert-list","p__8116","map__8117","seq8115","alerts","max-height","border-style","re-com.util/deref-or-value","re-com.box/box","re-com.box/border","re-com.box/scroller","re-com.box/v-box","iter__4324__auto__","s__8120","cljs.core/LazySeq","temp__5457__auto__","cljs.core/chunked-seq?","c__4322__auto__","size__4323__auto__","cljs.core/count","b__8122","cljs.core/chunk-buffer","i__8121","cljs.core._nth.cljs$core$IFn$_invoke$arity$2","cljs.core/chunk-append","cljs.core/chunk-cons","cljs.core/chunk","iter__8119","cljs.core/chunk-rest","cljs.core/first","cljs.core/cons","cljs.core/rest","alert","map__8124","map__8131","cljs.core/chunk-first"],"sourcesContent":["(ns re-com.alert\r\n  (:require-macros [re-com.core :refer [handler-fn]])\r\n  (:require [re-com.util     :refer [deref-or-value]]\r\n            [re-com.buttons  :refer [button]]\r\n            [re-com.box      :refer [h-box v-box box scroller border flex-child-style]]\r\n            [re-com.validate :refer [string-or-hiccup? alert-type? alert-types-list\r\n                                     vector-of-maps? css-style? html-attr?] :refer-macros [validate-args-macro]]))\r\n\r\n;;--------------------------------------------------------------------------------------------------\r\n;; Component: alert\r\n;;--------------------------------------------------------------------------------------------------\r\n\r\n(def alert-box-args-desc\r\n  [{:name :id         :required false                 :type \"anything\"                                       :description [:span \"a unique identifier, usually an integer or string.\"]}\r\n   {:name :alert-type :required false :default :info  :type \"keyword\"         :validate-fn alert-type?       :description [:span \"one of \" alert-types-list]}\r\n   {:name :heading    :required false                 :type \"string | hiccup\" :validate-fn string-or-hiccup? :description [:span \"displayed as a larger heading. One of \" [:code \":heading\"] \" or \" [:code \":body\"] \" should be provided\"]}\r\n   {:name :body       :required false                 :type \"string | hiccup\" :validate-fn string-or-hiccup? :description \"displayed within the body of the alert\"}\r\n   {:name :padding    :required false :default \"15px\" :type \"string\"          :validate-fn string?           :description \"padding surounding the alert\"}\r\n   {:name :closeable? :required false :default false  :type \"boolean\"                                        :description [:span \"if true, render a close button. \" [:code \":on-close\"] \" should be supplied\"]}\r\n   {:name :on-close   :required false                 :type \":id -> nil\"      :validate-fn fn?               :description [:span \"called when the user clicks the close 'X' button. Passed the \" [:code \":id\"] \" of the alert to close\"]}\r\n   {:name :class      :required false                 :type \"string\"          :validate-fn string?           :description \"CSS classes (whitespace separated). Applied to outer container\"}\r\n   {:name :style      :required false                 :type \"CSS style map\"   :validate-fn css-style?        :description \"CSS styles. Applied to outer container\"}\r\n   {:name :attr       :required false                 :type \"HTML attr map\"   :validate-fn html-attr?        :description [:span \"HTML attributes, like \" [:code \":on-mouse-move\"] [:br] \"No \" [:code \":class\"] \" or \" [:code \":style\"] \"allowed. Applied to outer container\"]}])\r\n\r\n(defn alert-box\r\n  \"Displays one alert box. A close button allows the message to be removed\"\r\n  [& {:keys [id alert-type heading body padding closeable? on-close class style attr]\r\n      :or   {alert-type :info}\r\n      :as   args}]\r\n  {:pre [(validate-args-macro alert-box-args-desc args \"alert-box\")]}\r\n  (let [close-button [button\r\n                      :label    [:i {:class \"zmdi created zmdi-hc-fw-rc zmdi-close\"\r\n                                     :style {:font-size \"20px\"}}]    ;\"\u00d7\"\r\n                      :on-click (handler-fn (on-close id))\r\n                      :class    \"close\"]\r\n        alert-class  (alert-type {:none           \"\"\r\n                                  :info           \"alert-success\"\r\n                                  :warning        \"alert-warning\"\r\n                                  :danger         \"alert-danger\"})]\r\n    [:div\r\n     (merge {:class (str \"rc-alert alert fade in \" alert-class \" \" class)\r\n             :style (merge (flex-child-style \"none\")\r\n                           {:padding (when padding padding)}\r\n                           style)}\r\n            attr)\r\n     (when heading\r\n       [h-box\r\n        :justify  :between\r\n        :align    :center\r\n        :style    {:margin-bottom (if body \"10px\" \"0px\")}\r\n        :children [[:h4\r\n                    {:style {:margin-bottom \"0px\"}} ;; Override h4\r\n                    heading]\r\n                   (when (and closeable? on-close)\r\n                     close-button)]])\r\n     (when body\r\n       [h-box\r\n        :justify  :between\r\n        :align    :center\r\n        :children [[:div body]\r\n                   (when (and (not heading) closeable? on-close)\r\n                     close-button)]])]))\r\n\r\n;;--------------------------------------------------------------------------------------------------\r\n;; Component: alert-list\r\n;;--------------------------------------------------------------------------------------------------\r\n\r\n(def alert-list-args-desc\r\n  [{:name :alerts       :required true                                 :type \"vector of maps | atom\" :validate-fn vector-of-maps? :description \"alerts to render (in the order supplied). Can also be a list of maps\"}\r\n   {:name :on-close     :required true                                 :type \":id -> nil\"            :validate-fn fn?             :description [:span \"called when the user clicks the close 'X' button. Passed the alert's \" [:code \":id\"]]}\r\n   {:name :max-height   :required false                                :type \"string\"                :validate-fn string?         :description \"CSS style for maximum list height. By default, it grows forever\"}\r\n   {:name :padding      :required false :default \"4px\"                 :type \"string\"                :validate-fn string?         :description \"CSS padding within the alert\"}\r\n   {:name :border-style :required false :default \"1px solid lightgrey\" :type \"string\"                :validate-fn string?         :description \"CSS border style surrounding the list\"}\r\n   {:name :class        :required false                                :type \"string\"                :validate-fn string?         :description \"CSS class names, space separated. Applied to outer container\"}\r\n   {:name :style        :required false                                :type \"CSS style map\"         :validate-fn css-style?      :description \"CSS styles. Applied to outer container\"}\r\n   {:name :attr         :required false                                :type \"HTML attr map\"         :validate-fn html-attr?      :description [:span \"HTML attributes, like \" [:code \":on-mouse-move\"] [:br] \"No \" [:code \":class\"] \" or \" [:code \":style\"] \"allowed. Applied to outer container\"]}])\r\n\r\n(defn alert-list\r\n  \"Displays a list of alert-box components in a v-box. Sample alerts object:\r\n     [{:id 2\r\n       :alert-type :warning\r\n       :heading \\\"Heading\\\"\r\n       :body \\\"Body\\\"\r\n       :padding \\\"8px\\\"\r\n       :closeable? true}\r\n      {:id 1\r\n       :alert-type :info\r\n       :heading \\\"Heading\\\"\r\n       :body \\\"Body\\\"}]\"\r\n  [& {:keys [alerts on-close max-height padding border-style class style attr]\r\n      :or   {padding \"4px\"}\r\n      :as   args}]\r\n  {:pre [(validate-args-macro alert-list-args-desc args \"alert-list\")]}\r\n  (let [alerts (deref-or-value alerts)]\r\n    [box\r\n     :child [border\r\n             :padding padding\r\n             :border border-style\r\n             :class class\r\n             :style style\r\n             :attr attr\r\n             :child [scroller\r\n                     :v-scroll :auto\r\n                     :style    {:max-height max-height}\r\n                     :child    [v-box\r\n                                :size     \"auto\"\r\n                                :children [(for [alert alerts]\r\n                                             (let [{:keys [id alert-type heading body padding closeable?]} alert]\r\n                                               ^{:key id} [alert-box\r\n                                                           :id id\r\n                                                           :alert-type alert-type\r\n                                                           :heading    heading\r\n                                                           :body       body\r\n                                                           :padding    padding\r\n                                                           :closeable? closeable?\r\n                                                           :on-close   on-close]))]]]]]))\r\n"]}