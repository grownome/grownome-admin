["^ ","~:resource-id",["~:shadow.build.npm/resource","node_modules/@firebase/app/dist/index.cjs.js"],"~:js","shadow$provide.module$node_modules$$firebase$app$dist$index_cjs=function(global,process,require,module,exports,shadow$shims){function createFirebaseNamespace(){function app(name){name=name||\"[DEFAULT]\";Object.prototype.hasOwnProperty.call(apps_,name)||error(\"no-app\",{name:name});return apps_[name]}function getApps(){return Object.keys(apps_).map(function(name){return apps_[name]})}function callAppHooks(app,eventName){Object.keys(factories).forEach(function(serviceName){serviceName=useAsService(app,\nserviceName);if(null!==serviceName&&appHooks[serviceName])appHooks[serviceName](eventName,app)})}function useAsService(app,name){return\"serverAuth\"===name?null:name}var apps_={},factories={},appHooks={},namespace={__esModule:!0,initializeApp:function(options,rawConfig){void 0===rawConfig&&(rawConfig={});if(\"object\"!==typeof rawConfig||null===rawConfig)rawConfig={name:rawConfig};var config=rawConfig;void 0===config.name&&(config.name=\"[DEFAULT]\");rawConfig=config.name;\"string\"===typeof rawConfig&&\nrawConfig||error(\"bad-app-name\",{name:rawConfig+\"\"});Object.prototype.hasOwnProperty.call(apps_,rawConfig)&&error(\"duplicate-app\",{name:rawConfig});options=new FirebaseAppImpl(options,config,namespace);apps_[rawConfig]=options;callAppHooks(options,\"create\");return options},app:app,apps:null,Promise:Promise,SDK_VERSION:\"5.0.4\",INTERNAL:{registerService:function(name,createService,serviceProperties,appHook,allowMultipleInstances){factories[name]&&error(\"duplicate-service\",{name:name});factories[name]=\ncreateService;appHook&&(appHooks[name]=appHook,getApps().forEach(function(app){appHook(\"create\",app)}));createService=function(appArg){void 0===appArg&&(appArg=app());\"function\"!==typeof appArg[name]&&error(\"invalid-app-argument\",{name:name});return appArg[name]()};void 0!==serviceProperties&&util.deepExtend(createService,serviceProperties);namespace[name]=createService;FirebaseAppImpl.prototype[name]=function(){for(var args=[],_i=0;_i<arguments.length;_i++)args[_i]=arguments[_i];return this._getService.bind(this,\nname).apply(this,allowMultipleInstances?args:[])};return createService},createFirebaseNamespace:createFirebaseNamespace,extendNamespace:function(props){util.deepExtend(namespace,props)},createSubscribe:util.createSubscribe,ErrorFactory:util.ErrorFactory,removeApp:function(name){callAppHooks(apps_[name],\"delete\");delete apps_[name]},factories:factories,useAsService:useAsService,Promise:Promise,deepExtend:util.deepExtend}};util.patchProperty(namespace,\"default\",namespace);Object.defineProperty(namespace,\n\"apps\",{get:getApps});util.patchProperty(app,\"App\",FirebaseAppImpl);return namespace}function error(code,args){throw appErrors.create(code,args);}Object.defineProperty(exports,\"__esModule\",{value:!0});var util=require(\"module$node_modules$$firebase$util$dist$index_cjs\"),tokenListeners=[],FirebaseAppImpl=function(){function FirebaseAppImpl(options,config,firebase_){this.firebase_=firebase_;this.isDeleted_=!1;this.services_={};this.name_=config.name;this._automaticDataCollectionEnabled=config.automaticDataCollectionEnabled||\n!1;this.options_=util.deepCopy(options);this.INTERNAL={getUid:function(){return null},getToken:function(){return Promise.resolve(null)},addAuthTokenListener:function(callback){tokenListeners.push(callback);setTimeout(function(){return callback(null)},0)},removeAuthTokenListener:function(callback){tokenListeners=tokenListeners.filter(function(listener){return listener!==callback})}}}Object.defineProperty(FirebaseAppImpl.prototype,\"automaticDataCollectionEnabled\",{get:function(){this.checkDestroyed_();\nreturn this._automaticDataCollectionEnabled},set:function(val){this.checkDestroyed_();this._automaticDataCollectionEnabled=val},enumerable:!0,configurable:!0});Object.defineProperty(FirebaseAppImpl.prototype,\"name\",{get:function(){this.checkDestroyed_();return this.name_},enumerable:!0,configurable:!0});Object.defineProperty(FirebaseAppImpl.prototype,\"options\",{get:function(){this.checkDestroyed_();return this.options_},enumerable:!0,configurable:!0});FirebaseAppImpl.prototype.delete=function(){var _this=\nthis;return(new Promise(function(resolve){_this.checkDestroyed_();resolve()})).then(function(){_this.firebase_.INTERNAL.removeApp(_this.name_);var services=[];Object.keys(_this.services_).forEach(function(serviceKey){Object.keys(_this.services_[serviceKey]).forEach(function(instanceKey){services.push(_this.services_[serviceKey][instanceKey])})});return Promise.all(services.map(function(service){return service.INTERNAL.delete()}))}).then(function(){_this.isDeleted_=!0;_this.services_={}})};FirebaseAppImpl.prototype._getService=\nfunction(name,instanceIdentifier){void 0===instanceIdentifier&&(instanceIdentifier=\"[DEFAULT]\");this.checkDestroyed_();this.services_[name]||(this.services_[name]={});if(!this.services_[name][instanceIdentifier]){var instanceSpecifier=\"[DEFAULT]\"!==instanceIdentifier?instanceIdentifier:void 0;instanceSpecifier=this.firebase_.INTERNAL.factories[name](this,this.extendApp.bind(this),instanceSpecifier);this.services_[name][instanceIdentifier]=instanceSpecifier}return this.services_[name][instanceIdentifier]};\nFirebaseAppImpl.prototype.extendApp=function(props){var _this=this;util.deepExtend(this,props);props.INTERNAL&&props.INTERNAL.addAuthTokenListener&&(tokenListeners.forEach(function(listener){_this.INTERNAL.addAuthTokenListener(listener)}),tokenListeners=[])};FirebaseAppImpl.prototype.checkDestroyed_=function(){this.isDeleted_&&error(\"app-deleted\",{name:this.name_})};return FirebaseAppImpl}();FirebaseAppImpl.prototype.name&&FirebaseAppImpl.prototype.options||FirebaseAppImpl.prototype.delete||console.log(\"dc\");\nvar appErrors=new util.ErrorFactory(\"app\",\"Firebase\",{\"no-app\":\"No Firebase App '{$name}' has been created - call Firebase App.initializeApp()\",\"bad-app-name\":\"Illegal App name: '{$name}\",\"duplicate-app\":\"Firebase App named '{$name}' already exists\",\"app-deleted\":\"Firebase App named '{$name}' already deleted\",\"duplicate-service\":\"Firebase service named '{$name}' already registered\",\"sa-not-supported\":\"Initializing the Firebase SDK with a service account is only allowed in a Node.js environment. On client devices, you should instead initialize the SDK with an api key and auth domain\",\n\"invalid-app-argument\":\"firebase.{$name}() takes either no argument or a Firebase App instance.\"});global=createFirebaseNamespace();exports.firebase=global;exports.default=global}","~:source","shadow$provide[\"module$node_modules$$firebase$app$dist$index_cjs\"] = function(global,process,require,module,exports,shadow$shims) {\n'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\nvar util = require('@firebase/util');\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar contains = function (obj, key) {\r\n    return Object.prototype.hasOwnProperty.call(obj, key);\r\n};\r\nvar DEFAULT_ENTRY_NAME = '[DEFAULT]';\r\n// An array to capture listeners before the true auth functions\r\n// exist\r\nvar tokenListeners = [];\r\n/**\r\n * Global context object for a collection of services using\r\n * a shared authentication state.\r\n */\r\nvar FirebaseAppImpl = /** @class */ (function () {\r\n    function FirebaseAppImpl(options, config, firebase_) {\r\n        this.firebase_ = firebase_;\r\n        this.isDeleted_ = false;\r\n        this.services_ = {};\r\n        this.name_ = config.name;\r\n        this._automaticDataCollectionEnabled =\r\n            config.automaticDataCollectionEnabled || false;\r\n        this.options_ = util.deepCopy(options);\r\n        this.INTERNAL = {\r\n            getUid: function () { return null; },\r\n            getToken: function () { return Promise.resolve(null); },\r\n            addAuthTokenListener: function (callback) {\r\n                tokenListeners.push(callback);\r\n                // Make sure callback is called, asynchronously, in the absence of the auth module\r\n                setTimeout(function () { return callback(null); }, 0);\r\n            },\r\n            removeAuthTokenListener: function (callback) {\r\n                tokenListeners = tokenListeners.filter(function (listener) { return listener !== callback; });\r\n            }\r\n        };\r\n    }\r\n    Object.defineProperty(FirebaseAppImpl.prototype, \"automaticDataCollectionEnabled\", {\r\n        get: function () {\r\n            this.checkDestroyed_();\r\n            return this._automaticDataCollectionEnabled;\r\n        },\r\n        set: function (val) {\r\n            this.checkDestroyed_();\r\n            this._automaticDataCollectionEnabled = val;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(FirebaseAppImpl.prototype, \"name\", {\r\n        get: function () {\r\n            this.checkDestroyed_();\r\n            return this.name_;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(FirebaseAppImpl.prototype, \"options\", {\r\n        get: function () {\r\n            this.checkDestroyed_();\r\n            return this.options_;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    FirebaseAppImpl.prototype.delete = function () {\r\n        var _this = this;\r\n        return new Promise(function (resolve) {\r\n            _this.checkDestroyed_();\r\n            resolve();\r\n        })\r\n            .then(function () {\r\n            _this.firebase_.INTERNAL.removeApp(_this.name_);\r\n            var services = [];\r\n            Object.keys(_this.services_).forEach(function (serviceKey) {\r\n                Object.keys(_this.services_[serviceKey]).forEach(function (instanceKey) {\r\n                    services.push(_this.services_[serviceKey][instanceKey]);\r\n                });\r\n            });\r\n            return Promise.all(services.map(function (service) {\r\n                return service.INTERNAL.delete();\r\n            }));\r\n        })\r\n            .then(function () {\r\n            _this.isDeleted_ = true;\r\n            _this.services_ = {};\r\n        });\r\n    };\r\n    /**\r\n     * Return a service instance associated with this app (creating it\r\n     * on demand), identified by the passed instanceIdentifier.\r\n     *\r\n     * NOTE: Currently storage is the only one that is leveraging this\r\n     * functionality. They invoke it by calling:\r\n     *\r\n     * ```javascript\r\n     * firebase.app().storage('STORAGE BUCKET ID')\r\n     * ```\r\n     *\r\n     * The service name is passed to this already\r\n     * @internal\r\n     */\r\n    FirebaseAppImpl.prototype._getService = function (name, instanceIdentifier) {\r\n        if (instanceIdentifier === void 0) { instanceIdentifier = DEFAULT_ENTRY_NAME; }\r\n        this.checkDestroyed_();\r\n        if (!this.services_[name]) {\r\n            this.services_[name] = {};\r\n        }\r\n        if (!this.services_[name][instanceIdentifier]) {\r\n            /**\r\n             * If a custom instance has been defined (i.e. not '[DEFAULT]')\r\n             * then we will pass that instance on, otherwise we pass `null`\r\n             */\r\n            var instanceSpecifier = instanceIdentifier !== DEFAULT_ENTRY_NAME\r\n                ? instanceIdentifier\r\n                : undefined;\r\n            var service = this.firebase_.INTERNAL.factories[name](this, this.extendApp.bind(this), instanceSpecifier);\r\n            this.services_[name][instanceIdentifier] = service;\r\n        }\r\n        return this.services_[name][instanceIdentifier];\r\n    };\r\n    /**\r\n     * Callback function used to extend an App instance at the time\r\n     * of service instance creation.\r\n     */\r\n    FirebaseAppImpl.prototype.extendApp = function (props) {\r\n        var _this = this;\r\n        // Copy the object onto the FirebaseAppImpl prototype\r\n        util.deepExtend(this, props);\r\n        /**\r\n         * If the app has overwritten the addAuthTokenListener stub, forward\r\n         * the active token listeners on to the true fxn.\r\n         *\r\n         * TODO: This function is required due to our current module\r\n         * structure. Once we are able to rely strictly upon a single module\r\n         * implementation, this code should be refactored and Auth should\r\n         * provide these stubs and the upgrade logic\r\n         */\r\n        if (props.INTERNAL && props.INTERNAL.addAuthTokenListener) {\r\n            tokenListeners.forEach(function (listener) {\r\n                _this.INTERNAL.addAuthTokenListener(listener);\r\n            });\r\n            tokenListeners = [];\r\n        }\r\n    };\r\n    /**\r\n     * This function will throw an Error if the App has already been deleted -\r\n     * use before performing API actions on the App.\r\n     */\r\n    FirebaseAppImpl.prototype.checkDestroyed_ = function () {\r\n        if (this.isDeleted_) {\r\n            error('app-deleted', { name: this.name_ });\r\n        }\r\n    };\r\n    return FirebaseAppImpl;\r\n}());\r\n// Prevent dead-code elimination of these methods w/o invalid property\r\n// copying.\r\n(FirebaseAppImpl.prototype.name && FirebaseAppImpl.prototype.options) ||\r\n    FirebaseAppImpl.prototype.delete ||\r\n    console.log('dc');\r\n/**\r\n * Return a firebase namespace object.\r\n *\r\n * In production, this will be called exactly once and the result\r\n * assigned to the 'firebase' global.  It may be called multiple times\r\n * in unit tests.\r\n */\r\nfunction createFirebaseNamespace() {\r\n    var apps_ = {};\r\n    var factories = {};\r\n    var appHooks = {};\r\n    // A namespace is a plain JavaScript Object.\r\n    var namespace = {\r\n        // Hack to prevent Babel from modifying the object returned\r\n        // as the firebase namespace.\r\n        __esModule: true,\r\n        initializeApp: initializeApp,\r\n        app: app,\r\n        apps: null,\r\n        Promise: Promise,\r\n        SDK_VERSION: '5.0.4',\r\n        INTERNAL: {\r\n            registerService: registerService,\r\n            createFirebaseNamespace: createFirebaseNamespace,\r\n            extendNamespace: extendNamespace,\r\n            createSubscribe: util.createSubscribe,\r\n            ErrorFactory: util.ErrorFactory,\r\n            removeApp: removeApp,\r\n            factories: factories,\r\n            useAsService: useAsService,\r\n            Promise: Promise,\r\n            deepExtend: util.deepExtend\r\n        }\r\n    };\r\n    // Inject a circular default export to allow Babel users who were previously\r\n    // using:\r\n    //\r\n    //   import firebase from 'firebase';\r\n    //   which becomes: var firebase = require('firebase').default;\r\n    //\r\n    // instead of\r\n    //\r\n    //   import * as firebase from 'firebase';\r\n    //   which becomes: var firebase = require('firebase');\r\n    util.patchProperty(namespace, 'default', namespace);\r\n    // firebase.apps is a read-only getter.\r\n    Object.defineProperty(namespace, 'apps', {\r\n        get: getApps\r\n    });\r\n    /**\r\n     * Called by App.delete() - but before any services associated with the App\r\n     * are deleted.\r\n     */\r\n    function removeApp(name) {\r\n        var app = apps_[name];\r\n        callAppHooks(app, 'delete');\r\n        delete apps_[name];\r\n    }\r\n    /**\r\n     * Get the App object for a given name (or DEFAULT).\r\n     */\r\n    function app(name) {\r\n        name = name || DEFAULT_ENTRY_NAME;\r\n        if (!contains(apps_, name)) {\r\n            error('no-app', { name: name });\r\n        }\r\n        return apps_[name];\r\n    }\r\n    util.patchProperty(app, 'App', FirebaseAppImpl);\r\n    function initializeApp(options, rawConfig) {\r\n        if (rawConfig === void 0) { rawConfig = {}; }\r\n        if (typeof rawConfig !== 'object' || rawConfig === null) {\r\n            var name_1 = rawConfig;\r\n            rawConfig = { name: name_1 };\r\n        }\r\n        var config = rawConfig;\r\n        if (config.name === undefined) {\r\n            config.name = DEFAULT_ENTRY_NAME;\r\n        }\r\n        var name = config.name;\r\n        if (typeof name !== 'string' || !name) {\r\n            error('bad-app-name', { name: name + '' });\r\n        }\r\n        if (contains(apps_, name)) {\r\n            error('duplicate-app', { name: name });\r\n        }\r\n        var app = new FirebaseAppImpl(options, config, namespace);\r\n        apps_[name] = app;\r\n        callAppHooks(app, 'create');\r\n        return app;\r\n    }\r\n    /*\r\n     * Return an array of all the non-deleted FirebaseApps.\r\n     */\r\n    function getApps() {\r\n        // Make a copy so caller cannot mutate the apps list.\r\n        return Object.keys(apps_).map(function (name) { return apps_[name]; });\r\n    }\r\n    /*\r\n     * Register a Firebase Service.\r\n     *\r\n     * firebase.INTERNAL.registerService()\r\n     *\r\n     * TODO: Implement serviceProperties.\r\n     */\r\n    function registerService(name, createService, serviceProperties, appHook, allowMultipleInstances) {\r\n        // Cannot re-register a service that already exists\r\n        if (factories[name]) {\r\n            error('duplicate-service', { name: name });\r\n        }\r\n        // Capture the service factory for later service instantiation\r\n        factories[name] = createService;\r\n        // Capture the appHook, if passed\r\n        if (appHook) {\r\n            appHooks[name] = appHook;\r\n            // Run the **new** app hook on all existing apps\r\n            getApps().forEach(function (app) {\r\n                appHook('create', app);\r\n            });\r\n        }\r\n        // The Service namespace is an accessor function ...\r\n        var serviceNamespace = function (appArg) {\r\n            if (appArg === void 0) { appArg = app(); }\r\n            if (typeof appArg[name] !== 'function') {\r\n                // Invalid argument.\r\n                // This happens in the following case: firebase.storage('gs:/')\r\n                error('invalid-app-argument', { name: name });\r\n            }\r\n            // Forward service instance lookup to the FirebaseApp.\r\n            return appArg[name]();\r\n        };\r\n        // ... and a container for service-level properties.\r\n        if (serviceProperties !== undefined) {\r\n            util.deepExtend(serviceNamespace, serviceProperties);\r\n        }\r\n        // Monkey-patch the serviceNamespace onto the firebase namespace\r\n        namespace[name] = serviceNamespace;\r\n        // Patch the FirebaseAppImpl prototype\r\n        FirebaseAppImpl.prototype[name] = function () {\r\n            var args = [];\r\n            for (var _i = 0; _i < arguments.length; _i++) {\r\n                args[_i] = arguments[_i];\r\n            }\r\n            var serviceFxn = this._getService.bind(this, name);\r\n            return serviceFxn.apply(this, allowMultipleInstances ? args : []);\r\n        };\r\n        return serviceNamespace;\r\n    }\r\n    /**\r\n     * Patch the top-level firebase namespace with additional properties.\r\n     *\r\n     * firebase.INTERNAL.extendNamespace()\r\n     */\r\n    function extendNamespace(props) {\r\n        util.deepExtend(namespace, props);\r\n    }\r\n    function callAppHooks(app, eventName) {\r\n        Object.keys(factories).forEach(function (serviceName) {\r\n            // Ignore virtual services\r\n            var factoryName = useAsService(app, serviceName);\r\n            if (factoryName === null) {\r\n                return;\r\n            }\r\n            if (appHooks[factoryName]) {\r\n                appHooks[factoryName](eventName, app);\r\n            }\r\n        });\r\n    }\r\n    // Map the requested service to a registered service name\r\n    // (used to map auth to serverAuth service when needed).\r\n    function useAsService(app, name) {\r\n        if (name === 'serverAuth') {\r\n            return null;\r\n        }\r\n        var useService = name;\r\n        var options = app.options;\r\n        return useService;\r\n    }\r\n    return namespace;\r\n}\r\nfunction error(code, args) {\r\n    throw appErrors.create(code, args);\r\n}\r\n// TypeScript does not support non-string indexes!\r\n// let errors: {[code: AppError: string} = {\r\nvar errors = {\r\n    'no-app': \"No Firebase App '{$name}' has been created - \" +\r\n        'call Firebase App.initializeApp()',\r\n    'bad-app-name': \"Illegal App name: '{$name}\",\r\n    'duplicate-app': \"Firebase App named '{$name}' already exists\",\r\n    'app-deleted': \"Firebase App named '{$name}' already deleted\",\r\n    'duplicate-service': \"Firebase service named '{$name}' already registered\",\r\n    'sa-not-supported': 'Initializing the Firebase SDK with a service ' +\r\n        'account is only allowed in a Node.js environment. On client ' +\r\n        'devices, you should instead initialize the SDK with an api key and ' +\r\n        'auth domain',\r\n    'invalid-app-argument': 'firebase.{$name}() takes either no argument or a ' +\r\n        'Firebase App instance.'\r\n};\r\nvar appErrors = new util.ErrorFactory('app', 'Firebase', errors);\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar firebase = createFirebaseNamespace();\n\nexports.firebase = firebase;\nexports.default = firebase;\n\n};","~:removed-requires",["~#set",[]],"~:actual-requires",["^5",["~$shadow.js","~$module$node_modules$$firebase$util$dist$index_cjs"]],"~:properties",["^5",["createSubscribe","isDeleted_","ErrorFactory","extendApp","options_","removeAuthTokenListener","deepExtend","createFirebaseNamespace","delete","_getService","automaticDataCollectionEnabled","services_","Promise","removeApp","SDK_VERSION","__esModule","firebase_","factories","name","configurable","value","addAuthTokenListener","enumerable","_automaticDataCollectionEnabled","name_","apps","extendNamespace","registerService","getToken","app","INTERNAL","set","useAsService","getUid","initializeApp","checkDestroyed_","options","get","default","firebase"]],"~:compiled-at",1533409586212,"~:source-map-json","{\n\"version\":3,\n\"file\":\"module$node_modules$$firebase$app$dist$index_cjs.js\",\n\"lineCount\":13,\n\"mappings\":\"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\",\n\"sources\":[\"node_modules/@firebase/app/dist/index.cjs.js\"],\n\"sourcesContent\":[\"shadow$provide[\\\"module$node_modules$$firebase$app$dist$index_cjs\\\"] = function(global,process,require,module,exports,shadow$shims) {\\n'use strict';\\n\\nObject.defineProperty(exports, '__esModule', { value: true });\\n\\nvar util = require('@firebase/util');\\n\\n/**\\r\\n * Copyright 2017 Google Inc.\\r\\n *\\r\\n * Licensed under the Apache License, Version 2.0 (the \\\"License\\\");\\r\\n * you may not use this file except in compliance with the License.\\r\\n * You may obtain a copy of the License at\\r\\n *\\r\\n *   http://www.apache.org/licenses/LICENSE-2.0\\r\\n *\\r\\n * Unless required by applicable law or agreed to in writing, software\\r\\n * distributed under the License is distributed on an \\\"AS IS\\\" BASIS,\\r\\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\\r\\n * See the License for the specific language governing permissions and\\r\\n * limitations under the License.\\r\\n */\\r\\nvar contains = function (obj, key) {\\r\\n    return Object.prototype.hasOwnProperty.call(obj, key);\\r\\n};\\r\\nvar DEFAULT_ENTRY_NAME = '[DEFAULT]';\\r\\n// An array to capture listeners before the true auth functions\\r\\n// exist\\r\\nvar tokenListeners = [];\\r\\n/**\\r\\n * Global context object for a collection of services using\\r\\n * a shared authentication state.\\r\\n */\\r\\nvar FirebaseAppImpl = /** @class */ (function () {\\r\\n    function FirebaseAppImpl(options, config, firebase_) {\\r\\n        this.firebase_ = firebase_;\\r\\n        this.isDeleted_ = false;\\r\\n        this.services_ = {};\\r\\n        this.name_ = config.name;\\r\\n        this._automaticDataCollectionEnabled =\\r\\n            config.automaticDataCollectionEnabled || false;\\r\\n        this.options_ = util.deepCopy(options);\\r\\n        this.INTERNAL = {\\r\\n            getUid: function () { return null; },\\r\\n            getToken: function () { return Promise.resolve(null); },\\r\\n            addAuthTokenListener: function (callback) {\\r\\n                tokenListeners.push(callback);\\r\\n                // Make sure callback is called, asynchronously, in the absence of the auth module\\r\\n                setTimeout(function () { return callback(null); }, 0);\\r\\n            },\\r\\n            removeAuthTokenListener: function (callback) {\\r\\n                tokenListeners = tokenListeners.filter(function (listener) { return listener !== callback; });\\r\\n            }\\r\\n        };\\r\\n    }\\r\\n    Object.defineProperty(FirebaseAppImpl.prototype, \\\"automaticDataCollectionEnabled\\\", {\\r\\n        get: function () {\\r\\n            this.checkDestroyed_();\\r\\n            return this._automaticDataCollectionEnabled;\\r\\n        },\\r\\n        set: function (val) {\\r\\n            this.checkDestroyed_();\\r\\n            this._automaticDataCollectionEnabled = val;\\r\\n        },\\r\\n        enumerable: true,\\r\\n        configurable: true\\r\\n    });\\r\\n    Object.defineProperty(FirebaseAppImpl.prototype, \\\"name\\\", {\\r\\n        get: function () {\\r\\n            this.checkDestroyed_();\\r\\n            return this.name_;\\r\\n        },\\r\\n        enumerable: true,\\r\\n        configurable: true\\r\\n    });\\r\\n    Object.defineProperty(FirebaseAppImpl.prototype, \\\"options\\\", {\\r\\n        get: function () {\\r\\n            this.checkDestroyed_();\\r\\n            return this.options_;\\r\\n        },\\r\\n        enumerable: true,\\r\\n        configurable: true\\r\\n    });\\r\\n    FirebaseAppImpl.prototype.delete = function () {\\r\\n        var _this = this;\\r\\n        return new Promise(function (resolve) {\\r\\n            _this.checkDestroyed_();\\r\\n            resolve();\\r\\n        })\\r\\n            .then(function () {\\r\\n            _this.firebase_.INTERNAL.removeApp(_this.name_);\\r\\n            var services = [];\\r\\n            Object.keys(_this.services_).forEach(function (serviceKey) {\\r\\n                Object.keys(_this.services_[serviceKey]).forEach(function (instanceKey) {\\r\\n                    services.push(_this.services_[serviceKey][instanceKey]);\\r\\n                });\\r\\n            });\\r\\n            return Promise.all(services.map(function (service) {\\r\\n                return service.INTERNAL.delete();\\r\\n            }));\\r\\n        })\\r\\n            .then(function () {\\r\\n            _this.isDeleted_ = true;\\r\\n            _this.services_ = {};\\r\\n        });\\r\\n    };\\r\\n    /**\\r\\n     * Return a service instance associated with this app (creating it\\r\\n     * on demand), identified by the passed instanceIdentifier.\\r\\n     *\\r\\n     * NOTE: Currently storage is the only one that is leveraging this\\r\\n     * functionality. They invoke it by calling:\\r\\n     *\\r\\n     * ```javascript\\r\\n     * firebase.app().storage('STORAGE BUCKET ID')\\r\\n     * ```\\r\\n     *\\r\\n     * The service name is passed to this already\\r\\n     * @internal\\r\\n     */\\r\\n    FirebaseAppImpl.prototype._getService = function (name, instanceIdentifier) {\\r\\n        if (instanceIdentifier === void 0) { instanceIdentifier = DEFAULT_ENTRY_NAME; }\\r\\n        this.checkDestroyed_();\\r\\n        if (!this.services_[name]) {\\r\\n            this.services_[name] = {};\\r\\n        }\\r\\n        if (!this.services_[name][instanceIdentifier]) {\\r\\n            /**\\r\\n             * If a custom instance has been defined (i.e. not '[DEFAULT]')\\r\\n             * then we will pass that instance on, otherwise we pass `null`\\r\\n             */\\r\\n            var instanceSpecifier = instanceIdentifier !== DEFAULT_ENTRY_NAME\\r\\n                ? instanceIdentifier\\r\\n                : undefined;\\r\\n            var service = this.firebase_.INTERNAL.factories[name](this, this.extendApp.bind(this), instanceSpecifier);\\r\\n            this.services_[name][instanceIdentifier] = service;\\r\\n        }\\r\\n        return this.services_[name][instanceIdentifier];\\r\\n    };\\r\\n    /**\\r\\n     * Callback function used to extend an App instance at the time\\r\\n     * of service instance creation.\\r\\n     */\\r\\n    FirebaseAppImpl.prototype.extendApp = function (props) {\\r\\n        var _this = this;\\r\\n        // Copy the object onto the FirebaseAppImpl prototype\\r\\n        util.deepExtend(this, props);\\r\\n        /**\\r\\n         * If the app has overwritten the addAuthTokenListener stub, forward\\r\\n         * the active token listeners on to the true fxn.\\r\\n         *\\r\\n         * TODO: This function is required due to our current module\\r\\n         * structure. Once we are able to rely strictly upon a single module\\r\\n         * implementation, this code should be refactored and Auth should\\r\\n         * provide these stubs and the upgrade logic\\r\\n         */\\r\\n        if (props.INTERNAL && props.INTERNAL.addAuthTokenListener) {\\r\\n            tokenListeners.forEach(function (listener) {\\r\\n                _this.INTERNAL.addAuthTokenListener(listener);\\r\\n            });\\r\\n            tokenListeners = [];\\r\\n        }\\r\\n    };\\r\\n    /**\\r\\n     * This function will throw an Error if the App has already been deleted -\\r\\n     * use before performing API actions on the App.\\r\\n     */\\r\\n    FirebaseAppImpl.prototype.checkDestroyed_ = function () {\\r\\n        if (this.isDeleted_) {\\r\\n            error('app-deleted', { name: this.name_ });\\r\\n        }\\r\\n    };\\r\\n    return FirebaseAppImpl;\\r\\n}());\\r\\n// Prevent dead-code elimination of these methods w/o invalid property\\r\\n// copying.\\r\\n(FirebaseAppImpl.prototype.name && FirebaseAppImpl.prototype.options) ||\\r\\n    FirebaseAppImpl.prototype.delete ||\\r\\n    console.log('dc');\\r\\n/**\\r\\n * Return a firebase namespace object.\\r\\n *\\r\\n * In production, this will be called exactly once and the result\\r\\n * assigned to the 'firebase' global.  It may be called multiple times\\r\\n * in unit tests.\\r\\n */\\r\\nfunction createFirebaseNamespace() {\\r\\n    var apps_ = {};\\r\\n    var factories = {};\\r\\n    var appHooks = {};\\r\\n    // A namespace is a plain JavaScript Object.\\r\\n    var namespace = {\\r\\n        // Hack to prevent Babel from modifying the object returned\\r\\n        // as the firebase namespace.\\r\\n        __esModule: true,\\r\\n        initializeApp: initializeApp,\\r\\n        app: app,\\r\\n        apps: null,\\r\\n        Promise: Promise,\\r\\n        SDK_VERSION: '5.0.4',\\r\\n        INTERNAL: {\\r\\n            registerService: registerService,\\r\\n            createFirebaseNamespace: createFirebaseNamespace,\\r\\n            extendNamespace: extendNamespace,\\r\\n            createSubscribe: util.createSubscribe,\\r\\n            ErrorFactory: util.ErrorFactory,\\r\\n            removeApp: removeApp,\\r\\n            factories: factories,\\r\\n            useAsService: useAsService,\\r\\n            Promise: Promise,\\r\\n            deepExtend: util.deepExtend\\r\\n        }\\r\\n    };\\r\\n    // Inject a circular default export to allow Babel users who were previously\\r\\n    // using:\\r\\n    //\\r\\n    //   import firebase from 'firebase';\\r\\n    //   which becomes: var firebase = require('firebase').default;\\r\\n    //\\r\\n    // instead of\\r\\n    //\\r\\n    //   import * as firebase from 'firebase';\\r\\n    //   which becomes: var firebase = require('firebase');\\r\\n    util.patchProperty(namespace, 'default', namespace);\\r\\n    // firebase.apps is a read-only getter.\\r\\n    Object.defineProperty(namespace, 'apps', {\\r\\n        get: getApps\\r\\n    });\\r\\n    /**\\r\\n     * Called by App.delete() - but before any services associated with the App\\r\\n     * are deleted.\\r\\n     */\\r\\n    function removeApp(name) {\\r\\n        var app = apps_[name];\\r\\n        callAppHooks(app, 'delete');\\r\\n        delete apps_[name];\\r\\n    }\\r\\n    /**\\r\\n     * Get the App object for a given name (or DEFAULT).\\r\\n     */\\r\\n    function app(name) {\\r\\n        name = name || DEFAULT_ENTRY_NAME;\\r\\n        if (!contains(apps_, name)) {\\r\\n            error('no-app', { name: name });\\r\\n        }\\r\\n        return apps_[name];\\r\\n    }\\r\\n    util.patchProperty(app, 'App', FirebaseAppImpl);\\r\\n    function initializeApp(options, rawConfig) {\\r\\n        if (rawConfig === void 0) { rawConfig = {}; }\\r\\n        if (typeof rawConfig !== 'object' || rawConfig === null) {\\r\\n            var name_1 = rawConfig;\\r\\n            rawConfig = { name: name_1 };\\r\\n        }\\r\\n        var config = rawConfig;\\r\\n        if (config.name === undefined) {\\r\\n            config.name = DEFAULT_ENTRY_NAME;\\r\\n        }\\r\\n        var name = config.name;\\r\\n        if (typeof name !== 'string' || !name) {\\r\\n            error('bad-app-name', { name: name + '' });\\r\\n        }\\r\\n        if (contains(apps_, name)) {\\r\\n            error('duplicate-app', { name: name });\\r\\n        }\\r\\n        var app = new FirebaseAppImpl(options, config, namespace);\\r\\n        apps_[name] = app;\\r\\n        callAppHooks(app, 'create');\\r\\n        return app;\\r\\n    }\\r\\n    /*\\r\\n     * Return an array of all the non-deleted FirebaseApps.\\r\\n     */\\r\\n    function getApps() {\\r\\n        // Make a copy so caller cannot mutate the apps list.\\r\\n        return Object.keys(apps_).map(function (name) { return apps_[name]; });\\r\\n    }\\r\\n    /*\\r\\n     * Register a Firebase Service.\\r\\n     *\\r\\n     * firebase.INTERNAL.registerService()\\r\\n     *\\r\\n     * TODO: Implement serviceProperties.\\r\\n     */\\r\\n    function registerService(name, createService, serviceProperties, appHook, allowMultipleInstances) {\\r\\n        // Cannot re-register a service that already exists\\r\\n        if (factories[name]) {\\r\\n            error('duplicate-service', { name: name });\\r\\n        }\\r\\n        // Capture the service factory for later service instantiation\\r\\n        factories[name] = createService;\\r\\n        // Capture the appHook, if passed\\r\\n        if (appHook) {\\r\\n            appHooks[name] = appHook;\\r\\n            // Run the **new** app hook on all existing apps\\r\\n            getApps().forEach(function (app) {\\r\\n                appHook('create', app);\\r\\n            });\\r\\n        }\\r\\n        // The Service namespace is an accessor function ...\\r\\n        var serviceNamespace = function (appArg) {\\r\\n            if (appArg === void 0) { appArg = app(); }\\r\\n            if (typeof appArg[name] !== 'function') {\\r\\n                // Invalid argument.\\r\\n                // This happens in the following case: firebase.storage('gs:/')\\r\\n                error('invalid-app-argument', { name: name });\\r\\n            }\\r\\n            // Forward service instance lookup to the FirebaseApp.\\r\\n            return appArg[name]();\\r\\n        };\\r\\n        // ... and a container for service-level properties.\\r\\n        if (serviceProperties !== undefined) {\\r\\n            util.deepExtend(serviceNamespace, serviceProperties);\\r\\n        }\\r\\n        // Monkey-patch the serviceNamespace onto the firebase namespace\\r\\n        namespace[name] = serviceNamespace;\\r\\n        // Patch the FirebaseAppImpl prototype\\r\\n        FirebaseAppImpl.prototype[name] = function () {\\r\\n            var args = [];\\r\\n            for (var _i = 0; _i < arguments.length; _i++) {\\r\\n                args[_i] = arguments[_i];\\r\\n            }\\r\\n            var serviceFxn = this._getService.bind(this, name);\\r\\n            return serviceFxn.apply(this, allowMultipleInstances ? args : []);\\r\\n        };\\r\\n        return serviceNamespace;\\r\\n    }\\r\\n    /**\\r\\n     * Patch the top-level firebase namespace with additional properties.\\r\\n     *\\r\\n     * firebase.INTERNAL.extendNamespace()\\r\\n     */\\r\\n    function extendNamespace(props) {\\r\\n        util.deepExtend(namespace, props);\\r\\n    }\\r\\n    function callAppHooks(app, eventName) {\\r\\n        Object.keys(factories).forEach(function (serviceName) {\\r\\n            // Ignore virtual services\\r\\n            var factoryName = useAsService(app, serviceName);\\r\\n            if (factoryName === null) {\\r\\n                return;\\r\\n            }\\r\\n            if (appHooks[factoryName]) {\\r\\n                appHooks[factoryName](eventName, app);\\r\\n            }\\r\\n        });\\r\\n    }\\r\\n    // Map the requested service to a registered service name\\r\\n    // (used to map auth to serverAuth service when needed).\\r\\n    function useAsService(app, name) {\\r\\n        if (name === 'serverAuth') {\\r\\n            return null;\\r\\n        }\\r\\n        var useService = name;\\r\\n        var options = app.options;\\r\\n        return useService;\\r\\n    }\\r\\n    return namespace;\\r\\n}\\r\\nfunction error(code, args) {\\r\\n    throw appErrors.create(code, args);\\r\\n}\\r\\n// TypeScript does not support non-string indexes!\\r\\n// let errors: {[code: AppError: string} = {\\r\\nvar errors = {\\r\\n    'no-app': \\\"No Firebase App '{$name}' has been created - \\\" +\\r\\n        'call Firebase App.initializeApp()',\\r\\n    'bad-app-name': \\\"Illegal App name: '{$name}\\\",\\r\\n    'duplicate-app': \\\"Firebase App named '{$name}' already exists\\\",\\r\\n    'app-deleted': \\\"Firebase App named '{$name}' already deleted\\\",\\r\\n    'duplicate-service': \\\"Firebase service named '{$name}' already registered\\\",\\r\\n    'sa-not-supported': 'Initializing the Firebase SDK with a service ' +\\r\\n        'account is only allowed in a Node.js environment. On client ' +\\r\\n        'devices, you should instead initialize the SDK with an api key and ' +\\r\\n        'auth domain',\\r\\n    'invalid-app-argument': 'firebase.{$name}() takes either no argument or a ' +\\r\\n        'Firebase App instance.'\\r\\n};\\r\\nvar appErrors = new util.ErrorFactory('app', 'Firebase', errors);\\n\\n/**\\r\\n * Copyright 2017 Google Inc.\\r\\n *\\r\\n * Licensed under the Apache License, Version 2.0 (the \\\"License\\\");\\r\\n * you may not use this file except in compliance with the License.\\r\\n * You may obtain a copy of the License at\\r\\n *\\r\\n *   http://www.apache.org/licenses/LICENSE-2.0\\r\\n *\\r\\n * Unless required by applicable law or agreed to in writing, software\\r\\n * distributed under the License is distributed on an \\\"AS IS\\\" BASIS,\\r\\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\\r\\n * See the License for the specific language governing permissions and\\r\\n * limitations under the License.\\r\\n */\\r\\nvar firebase = createFirebaseNamespace();\\n\\nexports.firebase = firebase;\\nexports.default = firebase;\\n\\n};\"],\n\"names\":[\"shadow$provide\",\"global\",\"process\",\"require\",\"module\",\"exports\",\"shadow$shims\",\"createFirebaseNamespace\",\"app\",\"name\",\"DEFAULT_ENTRY_NAME\",\"Object\",\"prototype\",\"hasOwnProperty\",\"call\",\"apps_\",\"error\",\"getApps\",\"keys\",\"map\",\"callAppHooks\",\"eventName\",\"factories\",\"forEach\",\"serviceName\",\"factoryName\",\"useAsService\",\"appHooks\",\"namespace\",\"__esModule\",\"initializeApp\",\"options\",\"rawConfig\",\"config\",\"undefined\",\"FirebaseAppImpl\",\"apps\",\"Promise\",\"SDK_VERSION\",\"INTERNAL\",\"registerService\",\"createService\",\"serviceProperties\",\"appHook\",\"allowMultipleInstances\",\"serviceNamespace\",\"appArg\",\"util\",\"deepExtend\",\"args\",\"_i\",\"arguments\",\"length\",\"_getService\",\"bind\",\"serviceFxn\",\"apply\",\"extendNamespace\",\"props\",\"createSubscribe\",\"ErrorFactory\",\"removeApp\",\"patchProperty\",\"defineProperty\",\"get\",\"code\",\"appErrors\",\"create\",\"value\",\"tokenListeners\",\"firebase_\",\"isDeleted_\",\"services_\",\"name_\",\"_automaticDataCollectionEnabled\",\"automaticDataCollectionEnabled\",\"options_\",\"deepCopy\",\"getUid\",\"getToken\",\"resolve\",\"addAuthTokenListener\",\"callback\",\"push\",\"setTimeout\",\"removeAuthTokenListener\",\"filter\",\"listener\",\"checkDestroyed_\",\"set\",\"val\",\"enumerable\",\"configurable\",\"delete\",\"FirebaseAppImpl.prototype.delete\",\"_this\",\"then\",\"services\",\"serviceKey\",\"instanceKey\",\"all\",\"service\",\"FirebaseAppImpl.prototype._getService\",\"instanceIdentifier\",\"instanceSpecifier\",\"extendApp\",\"FirebaseAppImpl.prototype.extendApp\",\"FirebaseAppImpl.prototype.checkDestroyed_\",\"console\",\"log\",\"errors\",\"firebase\",\"default\"]\n}\n"]