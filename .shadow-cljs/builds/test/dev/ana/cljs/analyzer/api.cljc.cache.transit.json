["^ ","~:output",["^ ","~:js","goog.provide('cljs.analyzer.api');\r\ngoog.require('cljs.core');\r\ngoog.require('cljs.env');\r\ngoog.require('cljs.analyzer');\r\n/**\r\n * Creates an empty compilation state Atom<Map>.\r\n */\r\ncljs.analyzer.api.empty_state = (function cljs$analyzer$api$empty_state(){\r\nreturn cljs.env.default_compiler_env.cljs$core$IFn$_invoke$arity$0();\r\n});\r\n/**\r\n * Creates an empty analysis environment.\r\n */\r\ncljs.analyzer.api.empty_env = (function cljs$analyzer$api$empty_env(){\r\nreturn cljs.analyzer.empty_env();\r\n});\r\n/**\r\n * Test if the given warning-type is enabled.\r\n */\r\ncljs.analyzer.api.warning_enabled_QMARK_ = (function cljs$analyzer$api$warning_enabled_QMARK_(warning_type){\r\nreturn (cljs.analyzer._STAR_cljs_warnings_STAR_.cljs$core$IFn$_invoke$arity$1 ? cljs.analyzer._STAR_cljs_warnings_STAR_.cljs$core$IFn$_invoke$arity$1(warning_type) : cljs.analyzer._STAR_cljs_warnings_STAR_.call(null,warning_type));\r\n});\r\n/**\r\n * The default warning handler.\r\n * \r\n * Outputs the warning messages to *err*.\r\n */\r\ncljs.analyzer.api.default_warning_handler = (function cljs$analyzer$api$default_warning_handler(warning_type,env,extra){\r\nreturn cljs.analyzer.default_warning_handler(warning_type,env,extra);\r\n});\r\n/**\r\n * Return the compiler options from compiler state.\r\n */\r\ncljs.analyzer.api.get_options = (function cljs$analyzer$api$get_options(var_args){\r\nvar G__9568 = arguments.length;\r\nswitch (G__9568) {\r\ncase 0:\r\nreturn cljs.analyzer.api.get_options.cljs$core$IFn$_invoke$arity$0();\r\n\r\nbreak;\r\ncase 1:\r\nreturn cljs.analyzer.api.get_options.cljs$core$IFn$_invoke$arity$1((arguments[(0)]));\r\n\r\nbreak;\r\ndefault:\r\nthrow (new Error([\"Invalid arity: \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join('')));\r\n\r\n}\r\n});\r\n\r\ncljs.analyzer.api.get_options.cljs$core$IFn$_invoke$arity$0 = (function (){\r\nreturn cljs.analyzer.api.get_options.cljs$core$IFn$_invoke$arity$1(cljs.env._STAR_compiler_STAR_);\r\n});\r\n\r\ncljs.analyzer.api.get_options.cljs$core$IFn$_invoke$arity$1 = (function (state){\r\nreturn cljs.core.get.cljs$core$IFn$_invoke$arity$2(cljs.core.deref(state),new cljs.core.Keyword(null,\"options\",\"options\",99638489));\r\n});\r\n\r\ncljs.analyzer.api.get_options.cljs$lang$maxFixedArity = 1;\r\n\r\n/**\r\n * Return the currently computed Google Closure js dependency index from the\r\n *   compiler state.\r\n */\r\ncljs.analyzer.api.get_js_index = (function cljs$analyzer$api$get_js_index(var_args){\r\nvar G__9574 = arguments.length;\r\nswitch (G__9574) {\r\ncase 0:\r\nreturn cljs.analyzer.api.get_js_index.cljs$core$IFn$_invoke$arity$0();\r\n\r\nbreak;\r\ncase 1:\r\nreturn cljs.analyzer.api.get_js_index.cljs$core$IFn$_invoke$arity$1((arguments[(0)]));\r\n\r\nbreak;\r\ndefault:\r\nthrow (new Error([\"Invalid arity: \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join('')));\r\n\r\n}\r\n});\r\n\r\ncljs.analyzer.api.get_js_index.cljs$core$IFn$_invoke$arity$0 = (function (){\r\nreturn cljs.analyzer.api.get_options.cljs$core$IFn$_invoke$arity$1(cljs.env._STAR_compiler_STAR_);\r\n});\r\n\r\ncljs.analyzer.api.get_js_index.cljs$core$IFn$_invoke$arity$1 = (function (state){\r\nreturn cljs.core.get.cljs$core$IFn$_invoke$arity$2(cljs.core.deref(state),new cljs.core.Keyword(null,\"js-dependency-index\",\"js-dependency-index\",-1887042131));\r\n});\r\n\r\ncljs.analyzer.api.get_js_index.cljs$lang$maxFixedArity = 1;\r\n\r\n/**\r\n * Given an analysis environment resolve a var. Analogous to\r\n * clojure.core/resolve\r\n */\r\ncljs.analyzer.api.resolve = (function cljs$analyzer$api$resolve(env,sym){\r\nif(cljs.core.map_QMARK_(env)){\r\n} else {\r\nthrow (new Error(\"Assert failed: (map? env)\"));\r\n}\r\n\r\nif((sym instanceof cljs.core.Symbol)){\r\n} else {\r\nthrow (new Error(\"Assert failed: (symbol? sym)\"));\r\n}\r\n\r\ntry{return cljs.analyzer.resolve_var.cljs$core$IFn$_invoke$arity$3(env,sym,cljs.analyzer.confirm_var_exists_throw());\r\n}catch (e9576){var e = e9576;\r\nreturn cljs.analyzer.resolve_macro_var(env,sym);\r\n}});\r\n/**\r\n * Return all namespaces. Analagous to clojure.core/all-ns but\r\n *   returns symbols identifying namespaces not Namespace instances.\r\n */\r\ncljs.analyzer.api.all_ns = (function cljs$analyzer$api$all_ns(var_args){\r\nvar G__9581 = arguments.length;\r\nswitch (G__9581) {\r\ncase 0:\r\nreturn cljs.analyzer.api.all_ns.cljs$core$IFn$_invoke$arity$0();\r\n\r\nbreak;\r\ncase 1:\r\nreturn cljs.analyzer.api.all_ns.cljs$core$IFn$_invoke$arity$1((arguments[(0)]));\r\n\r\nbreak;\r\ndefault:\r\nthrow (new Error([\"Invalid arity: \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join('')));\r\n\r\n}\r\n});\r\n\r\ncljs.analyzer.api.all_ns.cljs$core$IFn$_invoke$arity$0 = (function (){\r\nreturn cljs.analyzer.api.all_ns.cljs$core$IFn$_invoke$arity$1(cljs.env._STAR_compiler_STAR_);\r\n});\r\n\r\ncljs.analyzer.api.all_ns.cljs$core$IFn$_invoke$arity$1 = (function (state){\r\nreturn cljs.core.keys(cljs.core.get.cljs$core$IFn$_invoke$arity$2(cljs.core.deref(state),new cljs.core.Keyword(\"cljs.analyzer\",\"namespaces\",\"cljs.analyzer/namespaces\",-260788927)));\r\n});\r\n\r\ncljs.analyzer.api.all_ns.cljs$lang$maxFixedArity = 1;\r\n\r\n/**\r\n * Given a namespace return the corresponding namespace analysis map. Analagous\r\n *   to clojure.core/find-ns.\r\n */\r\ncljs.analyzer.api.find_ns = (function cljs$analyzer$api$find_ns(var_args){\r\nvar G__9585 = arguments.length;\r\nswitch (G__9585) {\r\ncase 1:\r\nreturn cljs.analyzer.api.find_ns.cljs$core$IFn$_invoke$arity$1((arguments[(0)]));\r\n\r\nbreak;\r\ncase 2:\r\nreturn cljs.analyzer.api.find_ns.cljs$core$IFn$_invoke$arity$2((arguments[(0)]),(arguments[(1)]));\r\n\r\nbreak;\r\ndefault:\r\nthrow (new Error([\"Invalid arity: \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join('')));\r\n\r\n}\r\n});\r\n\r\ncljs.analyzer.api.find_ns.cljs$core$IFn$_invoke$arity$1 = (function (sym){\r\nreturn cljs.analyzer.api.find_ns.cljs$core$IFn$_invoke$arity$2(cljs.env._STAR_compiler_STAR_,sym);\r\n});\r\n\r\ncljs.analyzer.api.find_ns.cljs$core$IFn$_invoke$arity$2 = (function (state,sym){\r\nif((sym instanceof cljs.core.Symbol)){\r\n} else {\r\nthrow (new Error(\"Assert failed: (symbol? sym)\"));\r\n}\r\n\r\nreturn cljs.core.get_in.cljs$core$IFn$_invoke$arity$2(cljs.core.deref(state),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(\"cljs.analyzer\",\"namespaces\",\"cljs.analyzer/namespaces\",-260788927),sym], null));\r\n});\r\n\r\ncljs.analyzer.api.find_ns.cljs$lang$maxFixedArity = 2;\r\n\r\n/**\r\n * Given a namespace return all the var analysis maps. Analagous to\r\n *   clojure.core/ns-interns but returns var analysis maps not vars.\r\n */\r\ncljs.analyzer.api.ns_interns = (function cljs$analyzer$api$ns_interns(var_args){\r\nvar G__9591 = arguments.length;\r\nswitch (G__9591) {\r\ncase 1:\r\nreturn cljs.analyzer.api.ns_interns.cljs$core$IFn$_invoke$arity$1((arguments[(0)]));\r\n\r\nbreak;\r\ncase 2:\r\nreturn cljs.analyzer.api.ns_interns.cljs$core$IFn$_invoke$arity$2((arguments[(0)]),(arguments[(1)]));\r\n\r\nbreak;\r\ndefault:\r\nthrow (new Error([\"Invalid arity: \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join('')));\r\n\r\n}\r\n});\r\n\r\ncljs.analyzer.api.ns_interns.cljs$core$IFn$_invoke$arity$1 = (function (ns){\r\nreturn cljs.analyzer.api.ns_interns.cljs$core$IFn$_invoke$arity$2(cljs.env._STAR_compiler_STAR_,ns);\r\n});\r\n\r\ncljs.analyzer.api.ns_interns.cljs$core$IFn$_invoke$arity$2 = (function (state,ns){\r\nif((ns instanceof cljs.core.Symbol)){\r\n} else {\r\nthrow (new Error(\"Assert failed: (symbol? ns)\"));\r\n}\r\n\r\nreturn cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([cljs.core.get_in.cljs$core$IFn$_invoke$arity$2(cljs.core.deref(state),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(\"cljs.analyzer\",\"namespaces\",\"cljs.analyzer/namespaces\",-260788927),ns,new cljs.core.Keyword(null,\"macros\",\"macros\",811339431)], null)),cljs.core.get_in.cljs$core$IFn$_invoke$arity$2(cljs.core.deref(state),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(\"cljs.analyzer\",\"namespaces\",\"cljs.analyzer/namespaces\",-260788927),ns,new cljs.core.Keyword(null,\"defs\",\"defs\",1398449717)], null))], 0));\r\n});\r\n\r\ncljs.analyzer.api.ns_interns.cljs$lang$maxFixedArity = 2;\r\n\r\n/**\r\n * Given a namespace return all the public var analysis maps. Analagous to\r\n *   clojure.core/ns-publics but returns var analysis maps not vars.\r\n */\r\ncljs.analyzer.api.ns_publics = (function cljs$analyzer$api$ns_publics(var_args){\r\nvar G__9594 = arguments.length;\r\nswitch (G__9594) {\r\ncase 1:\r\nreturn cljs.analyzer.api.ns_publics.cljs$core$IFn$_invoke$arity$1((arguments[(0)]));\r\n\r\nbreak;\r\ncase 2:\r\nreturn cljs.analyzer.api.ns_publics.cljs$core$IFn$_invoke$arity$2((arguments[(0)]),(arguments[(1)]));\r\n\r\nbreak;\r\ndefault:\r\nthrow (new Error([\"Invalid arity: \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join('')));\r\n\r\n}\r\n});\r\n\r\ncljs.analyzer.api.ns_publics.cljs$core$IFn$_invoke$arity$1 = (function (ns){\r\nreturn cljs.analyzer.api.ns_publics.cljs$core$IFn$_invoke$arity$2(cljs.env._STAR_compiler_STAR_,ns);\r\n});\r\n\r\ncljs.analyzer.api.ns_publics.cljs$core$IFn$_invoke$arity$2 = (function (state,ns){\r\nif((ns instanceof cljs.core.Symbol)){\r\n} else {\r\nthrow (new Error(\"Assert failed: (symbol? ns)\"));\r\n}\r\n\r\nreturn cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentArrayMap.EMPTY,cljs.core.remove.cljs$core$IFn$_invoke$arity$2((function (p__9595){\r\nvar vec__9596 = p__9595;\r\nvar k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__9596,(0),null);\r\nvar v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__9596,(1),null);\r\nreturn new cljs.core.Keyword(null,\"private\",\"private\",-558947994).cljs$core$IFn$_invoke$arity$1(v);\r\n}),cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([cljs.core.get_in.cljs$core$IFn$_invoke$arity$2(cljs.core.deref(state),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(\"cljs.analyzer\",\"namespaces\",\"cljs.analyzer/namespaces\",-260788927),ns,new cljs.core.Keyword(null,\"macros\",\"macros\",811339431)], null)),cljs.core.get_in.cljs$core$IFn$_invoke$arity$2(cljs.core.deref(state),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(\"cljs.analyzer\",\"namespaces\",\"cljs.analyzer/namespaces\",-260788927),ns,new cljs.core.Keyword(null,\"defs\",\"defs\",1398449717)], null))], 0))));\r\n});\r\n\r\ncljs.analyzer.api.ns_publics.cljs$lang$maxFixedArity = 2;\r\n\r\n/**\r\n * Given a namespace and a symbol return the corresponding var analysis map.\r\n *   Analagous to clojure.core/ns-resolve but returns var analysis map not Var.\r\n */\r\ncljs.analyzer.api.ns_resolve = (function cljs$analyzer$api$ns_resolve(var_args){\r\nvar G__9601 = arguments.length;\r\nswitch (G__9601) {\r\ncase 2:\r\nreturn cljs.analyzer.api.ns_resolve.cljs$core$IFn$_invoke$arity$2((arguments[(0)]),(arguments[(1)]));\r\n\r\nbreak;\r\ncase 3:\r\nreturn cljs.analyzer.api.ns_resolve.cljs$core$IFn$_invoke$arity$3((arguments[(0)]),(arguments[(1)]),(arguments[(2)]));\r\n\r\nbreak;\r\ndefault:\r\nthrow (new Error([\"Invalid arity: \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join('')));\r\n\r\n}\r\n});\r\n\r\ncljs.analyzer.api.ns_resolve.cljs$core$IFn$_invoke$arity$2 = (function (ns,sym){\r\nreturn cljs.analyzer.api.ns_resolve.cljs$core$IFn$_invoke$arity$3(cljs.env._STAR_compiler_STAR_,ns,sym);\r\n});\r\n\r\ncljs.analyzer.api.ns_resolve.cljs$core$IFn$_invoke$arity$3 = (function (state,ns,sym){\r\nif((ns instanceof cljs.core.Symbol)){\r\n} else {\r\nthrow (new Error(\"Assert failed: (symbol? ns)\"));\r\n}\r\n\r\nif((sym instanceof cljs.core.Symbol)){\r\n} else {\r\nthrow (new Error(\"Assert failed: (symbol? sym)\"));\r\n}\r\n\r\nreturn cljs.core.get_in.cljs$core$IFn$_invoke$arity$2(cljs.core.deref(state),new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(\"cljs.analyzer\",\"namespaces\",\"cljs.analyzer/namespaces\",-260788927),ns,new cljs.core.Keyword(null,\"defs\",\"defs\",1398449717),sym], null));\r\n});\r\n\r\ncljs.analyzer.api.ns_resolve.cljs$lang$maxFixedArity = 3;\r\n\r\n/**\r\n * Removes the namespace named by the symbol.\r\n */\r\ncljs.analyzer.api.remove_ns = (function cljs$analyzer$api$remove_ns(var_args){\r\nvar G__9606 = arguments.length;\r\nswitch (G__9606) {\r\ncase 1:\r\nreturn cljs.analyzer.api.remove_ns.cljs$core$IFn$_invoke$arity$1((arguments[(0)]));\r\n\r\nbreak;\r\ncase 2:\r\nreturn cljs.analyzer.api.remove_ns.cljs$core$IFn$_invoke$arity$2((arguments[(0)]),(arguments[(1)]));\r\n\r\nbreak;\r\ndefault:\r\nthrow (new Error([\"Invalid arity: \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join('')));\r\n\r\n}\r\n});\r\n\r\ncljs.analyzer.api.remove_ns.cljs$core$IFn$_invoke$arity$1 = (function (ns){\r\nreturn cljs.analyzer.api.remove_ns.cljs$core$IFn$_invoke$arity$2(cljs.env._STAR_compiler_STAR_,ns);\r\n});\r\n\r\ncljs.analyzer.api.remove_ns.cljs$core$IFn$_invoke$arity$2 = (function (state,ns){\r\nif((ns instanceof cljs.core.Symbol)){\r\n} else {\r\nthrow (new Error(\"Assert failed: (symbol? ns)\"));\r\n}\r\n\r\nreturn cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$variadic(state,cljs.core.update_in,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(\"cljs.analyzer\",\"namespaces\",\"cljs.analyzer/namespaces\",-260788927)], null),cljs.core.dissoc,cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([ns], 0));\r\n});\r\n\r\ncljs.analyzer.api.remove_ns.cljs$lang$maxFixedArity = 2;\r\n\r\n","~:ns-info",["^ ","~:rename-macros",null,"~:renames",["^ "],"~:meta",["^ ","~:doc","This is intended to be a stable api for those who need programmatic access\n  to the analyzer.","~:file","cljs/analyzer/api.cljc","~:line",9,"~:column",5,"~:end-line",9,"~:end-column",22],"~:ns-aliases",["^ ","~$clojure.pprint","~$cljs.pprint","~$clojure.repl","~$cljs.repl","~$clojure.spec.alpha","~$cljs.spec.alpha","~$clojure.spec.gen.alpha","~$cljs.spec.gen.alpha"],"~:use-macros",null,"~:excludes",["~#set",["~$find-ns","~$remove-ns","~$ns-publics","~$ns-resolve","~$ns-interns","~$all-ns","~$resolve"]],"~:name","~$cljs.analyzer.api","~:op","~:ns","~:imports",null,"~:requires",["^ ","~$cljs.env","^U","~$env","^U","~$cljs.analyzer","^W","~$ana","^W","~$cljs.core","^Y","~$goog","^Z"],"~:seen",["^G",["~:require"]],"~:uses",null,"~:require-macros",["^ ","^Y","^Y"],"~:form",["~#list",["~$ns","^P","This is intended to be a stable api for those who need programmatic access\n  to the analyzer.",["^14",["~:refer-clojure","~:exclude",["^M","^L","^K","^N","^H","^J","^I"]]],["^14",["^10",["^U","~:as","^V"],["^W","^18","^X"]]]]],"~:flags",["^ ","^10",["^G",[]]],"~:js-deps",["^ "],"~:deps",["^Z","^Y","^U","^W"]],"^R","^P","~:resource-id",["~:shadow.build.classpath/resource","cljs/analyzer/api.cljc"],"~:compiled-at",1533409591653,"~:resource-name","cljs/analyzer/api.cljc","~:warnings",[],"~:source",";   Copyright (c) Rich Hickey. All rights reserved.\n;   The use and distribution terms for this software are covered by the\n;   Eclipse Public License 1.0 (http://opensource.org/licenses/eclipse-1.0.php)\n;   which can be found in the file epl-v10.html at the root of this distribution.\n;   By using this software in any fashion, you are agreeing to be bound by\n;   the terms of this license.\n;   You must not remove this notice, or any other, from this software.\n\n(ns cljs.analyzer.api\n  \"This is intended to be a stable api for those who need programmatic access\n  to the analyzer.\"\n  (:refer-clojure :exclude [all-ns ns-interns ns-resolve resolve find-ns\n                            ns-publics remove-ns])\n  (:require [cljs.env :as env]\n            [cljs.analyzer :as ana]))\n\n;; =============================================================================\n;; Useful Utilities\n\n(defn empty-state\n  \"Creates an empty compilation state Atom<Map>.\"\n  []\n  (env/default-compiler-env))\n\n(defmacro with-state\n  \"Run the body with the given compilation state Atom<Map>.\"\n  [state body]\n  `(env/with-compiler-env ~state\n     ~@body))\n\n(defn empty-env\n  \"Creates an empty analysis environment.\"\n  []\n  (ana/empty-env))\n\n(defmacro no-warn\n  \"Disable analyzer warnings for any analysis executed in body.\"\n  [& body]\n  (let [no-warnings (zipmap (keys ana/*cljs-warnings*) (repeat false))]\n    `(binding [ana/*cljs-warnings* ~no-warnings]\n       ~@body)))\n\n(defn warning-enabled?\n  \"Test if the given warning-type is enabled.\"\n  [warning-type]\n  (ana/*cljs-warnings* warning-type))\n\n(defn default-warning-handler\n  \"The default warning handler.\n\n   Outputs the warning messages to *err*.\"\n  [warning-type env extra]\n  (ana/default-warning-handler warning-type env extra))\n\n(defn get-options\n  \"Return the compiler options from compiler state.\"\n  ([] (get-options env/*compiler*))\n  ([state]\n   (get @state :options)))\n\n(defn get-js-index\n  \"Return the currently computed Google Closure js dependency index from the\n  compiler state.\"\n  ([] (get-options env/*compiler*))\n  ([state]\n   (get @state :js-dependency-index)))\n\n#?(:clj\n   (defn analyze\n     \"Given an environment, a map containing {:locals (mapping of names to bindings), :context\n     (one of :statement, :expr, :return), :ns (a symbol naming the\n     compilation ns)}, and form, returns an expression object (a map\n     containing at least :form, :op and :env keys). If expr has any (immediately)\n     nested exprs, must have :children [exprs...] entry. This will\n     facilitate code walking without knowing the details of the op set.\"\n     ([env form] (analyze env form nil))\n     ([env form name] (analyze env form name nil))\n     ([env form name opts]\n      (analyze\n        (if-not (nil? env/*compiler*)\n          env/*compiler*\n          (env/default-compiler-env opts))\n        env form name opts))\n     ([state env form name opts]\n      (env/with-compiler-env state\n        (binding [ana/*cljs-warning-handlers* (:warning-handlers opts ana/*cljs-warning-handlers*)]\n          (ana/analyze env form name opts))))))\n\n#?(:clj\n   (defn forms-seq\n     \"Seq of Clojure/ClojureScript forms from rdr, a java.io.Reader. Optionally\n     accepts a filename argument which will be used in any emitted errors.\"\n     ([rdr] (ana/forms-seq* rdr nil))\n     ([rdr filename] (ana/forms-seq* rdr filename))))\n\n#?(:clj\n   (defn parse-ns\n     \"Helper for parsing only the essential namespace information from a\n      ClojureScript source file and returning a cljs.closure/IJavaScript compatible\n      map _not_ a namespace AST node.\n   \n      By default does not load macros or perform any analysis of dependencies. If\n      opts parameter provided :analyze-deps and :load-macros keys their values will\n      be used for *analyze-deps* and *load-macros* bindings respectively. This\n      function does _not_ side-effect the ambient compilation environment unless\n      requested via opts where :restore is false.\"\n     ([src] (parse-ns src nil nil))\n     ([src opts] (parse-ns src nil opts))\n     ([src dest opts]\n      (parse-ns\n        (if-not (nil? env/*compiler*)\n          env/*compiler*\n          (env/default-compiler-env opts))\n        src dest opts))\n     ([state src dest opts]\n      (env/with-compiler-env state\n        (binding [ana/*cljs-warning-handlers* (:warning-handlers opts ana/*cljs-warning-handlers*)]\n          (ana/parse-ns src dest opts))))))\n#?(:clj\n   (defn analyze-file\n     \"Given a java.io.File, java.net.URL or a string identifying a resource on the\n      classpath attempt to analyze it.\n   \n      This function side-effects the ambient compilation environment\n      `cljs.env/*compiler*` to aggregate analysis information. opts argument is\n      compiler options, if :cache-analysis true will cache analysis to\n      \\\":output-dir/some/ns/foo.cljs.cache.edn\\\". This function does not return a\n      meaningful value.\"\n     ([f] (analyze-file f nil))\n     ([f opts]\n      (analyze-file\n        (if-not (nil? env/*compiler*)\n          env/*compiler*\n          (env/default-compiler-env opts))\n        f opts))\n     ([state f opts]\n      (env/with-compiler-env state\n        (binding [ana/*cljs-warning-handlers* (:warning-handlers opts ana/*cljs-warning-handlers*)]\n          (ana/analyze-file f opts))))))\n\n;; =============================================================================\n;; Main API\n\n(defn resolve\n  \"Given an analysis environment resolve a var. Analogous to\n   clojure.core/resolve\"\n  [env sym]\n  {:pre [(map? env) (symbol? sym)]}\n  (try\n    (ana/resolve-var env sym\n      (ana/confirm-var-exists-throw))\n    (catch #?(:clj Exception :cljs :default) e\n      (ana/resolve-macro-var env sym))))\n\n(defn all-ns\n  \"Return all namespaces. Analagous to clojure.core/all-ns but\n  returns symbols identifying namespaces not Namespace instances.\"\n  ([]\n   (all-ns env/*compiler*))\n  ([state]\n   (keys (get @state ::ana/namespaces))))\n\n(defn find-ns\n  \"Given a namespace return the corresponding namespace analysis map. Analagous\n  to clojure.core/find-ns.\"\n  ([sym]\n   (find-ns env/*compiler* sym))\n  ([state sym]\n   {:pre [(symbol? sym)]}\n   (get-in @state [::ana/namespaces sym])))\n\n(defn ns-interns\n  \"Given a namespace return all the var analysis maps. Analagous to\n  clojure.core/ns-interns but returns var analysis maps not vars.\"\n  ([ns]\n   (ns-interns env/*compiler* ns))\n  ([state ns]\n   {:pre [(symbol? ns)]}\n   (merge\n     (get-in @state [::ana/namespaces ns :macros])\n     (get-in @state [::ana/namespaces ns :defs]))))\n\n(defn ns-publics\n  \"Given a namespace return all the public var analysis maps. Analagous to\n  clojure.core/ns-publics but returns var analysis maps not vars.\"\n  ([ns]\n   (ns-publics env/*compiler* ns))\n  ([state ns]\n   {:pre [(symbol? ns)]}\n   (->> (merge\n          (get-in @state [::ana/namespaces ns :macros])\n          (get-in @state [::ana/namespaces ns :defs]))\n        (remove (fn [[k v]] (:private v)))\n        (into {}))))\n\n(defn ns-resolve\n  \"Given a namespace and a symbol return the corresponding var analysis map.\n  Analagous to clojure.core/ns-resolve but returns var analysis map not Var.\"\n  ([ns sym]\n   (ns-resolve env/*compiler* ns sym))\n  ([state ns sym]\n   {:pre [(symbol? ns) (symbol? sym)]}\n   (get-in @state [::ana/namespaces ns :defs sym])))\n\n(defn remove-ns\n  \"Removes the namespace named by the symbol.\"\n  ([ns]\n   (remove-ns env/*compiler* ns))\n  ([state ns]\n   {:pre [(symbol? ns)]}\n   (swap! state update-in [::ana/namespaces] dissoc ns)))\n\n(defmacro in-cljs-user\n  \"Binds cljs.analyzer/*cljs-ns* to 'cljs.user and uses the given compilation\n  environment atom and runs body.\"\n  [env & body]\n  `(binding [cljs.analyzer/*cljs-ns* 'cljs.user]\n     (cljs.env/with-compiler-env ~env\n       ~@body)))\n","~:reader-features",["^G",["~:cljs"]],"~:source-map",["^ ","~i19",["^ ","~i0",[["^ ","~:gcol",0,"~:gline",4],["^ ","^1F",32,"^1G",7],["^ ","^1F",0,"^1G",8]],"~i6",[["^ ","^1F",0,"^1G",7,"^O","cljs.analyzer.api/empty-state"]]],"~i22",["^ ","~i2",[["^ ","^1F",0,"^1G",8]],"~i3",[["^ ","^1F",7,"^1G",8,"^O","cljs.env.default_compiler_env.cljs$core$IFn$_invoke$arity$0"]]],"~i30",["^ ","~i0",[["^ ","^1F",0,"^1G",10],["^ ","^1F",30,"^1G",13],["^ ","^1F",0,"^1G",14]],"~i6",[["^ ","^1F",0,"^1G",13,"^O","cljs.analyzer.api/empty-env"]]],"~i33",["^ ","~i2",[["^ ","^1F",0,"^1G",14]],"~i3",[["^ ","^1F",7,"^1G",14,"^O","cljs.analyzer/empty-env"]]],"~i42",["^ ","~i0",[["^ ","^1F",0,"^1G",16],["^ ","^1F",43,"^1G",19],["^ ","^1F",0,"^1G",20]],"~i6",[["^ ","^1F",0,"^1G",19,"^O","cljs.analyzer.api/warning-enabled?"]]],"~i44",["^ ","~i3",[["^ ","^1F",94,"^1G",19,"^O","warning-type"]]],"~i45",["^ ","~i2",[["^ ","^1F",0,"^1G",20]],"~i3",[["^ ","^1F",8,"^1G",20,"^O","cljs.analyzer/*cljs-warnings*"],["^ ","^1F",80,"^1G",20,"^O","cljs.analyzer/*cljs-warnings*"],["^ ","^1F",166,"^1G",20,"^O","cljs.analyzer/*cljs-warnings*"]],"~i23",[["^ ","^1F",150,"^1G",20,"^O","warning-type"],["^ ","^1F",216,"^1G",20,"^O","warning-type"]]],"~i47",["^ ","~i0",[["^ ","^1F",0,"^1G",22],["^ ","^1F",44,"^1G",27],["^ ","^1F",0,"^1G",28]],"~i6",[["^ ","^1F",0,"^1G",27,"^O","cljs.analyzer.api/default-warning-handler"]]],"~i51",["^ ","~i3",[["^ ","^1F",96,"^1G",27,"^O","warning-type"]],"~i16",[["^ ","^1F",109,"^1G",27,"^O","env"]],"~i20",[["^ ","^1F",113,"^1G",27,"^O","extra"]]],"~i52",["^ ","~i2",[["^ ","^1F",0,"^1G",28]],"~i3",[["^ ","^1F",7,"^1G",28,"^O","cljs.analyzer/default-warning-handler"]],"~i31",[["^ ","^1F",45,"^1G",28,"^O","warning-type"]],"^1L",[["^ ","^1F",58,"^1G",28,"^O","env"]],"~i48",[["^ ","^1F",62,"^1G",28,"^O","extra"]]],"~i54",["^ ","~i0",[["^ ","^1F",0,"^1G",30],["^ ","^1F",0,"^1G",30],["^ ","^1F",32,"^1G",33],["^ ","^1F",72,"^1G",33,"^O","var_args"],["^ ","^1F",0,"^1G",34],["^ ","^1F",0,"^1G",34],["^ ","^1F",4,"^1G",34,"^O","G__9568"],["^ ","^1F",14,"^1G",34],["^ ","^1F",14,"^1G",34],["^ ","^1F",0,"^1G",35],["^ ","^1F",0,"^1G",35],["^ ","^1F",8,"^1G",35,"^O","G__9568"],["^ ","^1F",5,"^1G",36],["^ ","^1F",0,"^1G",37],["^ ","^1F",7,"^1G",37,"^O","cljs.analyzer.api/get-options"],["^ ","^1F",5,"^1G",40],["^ ","^1F",0,"^1G",41],["^ ","^1F",7,"^1G",41,"^O","cljs.analyzer.api/get-options"],["^ ","^1F",67,"^1G",41],["^ ","^1F",68,"^1G",41],["^ ","^1F",78,"^1G",41],["^ ","^1F",0,"^1G",45],["^ ","^1F",6,"^1G",45],["^ ","^1F",11,"^1G",45,"^O","js/Error"],["^ ","^1F",17,"^1G",45],["^ ","^1F",18,"^1G",45],["^ ","^1F",80,"^1G",45],["^ ","^1F",80,"^1G",45],["^ ","^1F",0,"^1G",50],["^ ","^1F",0,"^1G",50],["^ ","^1F",62,"^1G",50],["^ ","^1F",0,"^1G",51],["^ ","^1F",0,"^1G",54],["^ ","^1F",0,"^1G",54],["^ ","^1F",62,"^1G",54],["^ ","^1F",0,"^1G",55],["^ ","^1F",0,"^1G",58],["^ ","^1F",0,"^1G",58],["^ ","^1F",56,"^1G",58],["^ ","^1F",0,"^1G",60]],"~i6",[["^ ","^1F",0,"^1G",33,"^O","cljs.analyzer.api/get-options"],["^ ","^1F",0,"^1G",50,"^O","cljs.analyzer.api/get-options"],["^ ","^1F",0,"^1G",54,"^O","cljs.analyzer.api/get-options"],["^ ","^1F",0,"^1G",58,"^O","cljs.analyzer.api/get-options"]]],"~i56",["^ ","~i6",[["^ ","^1F",0,"^1G",51]],"~i7",[["^ ","^1F",7,"^1G",51,"^O","cljs.analyzer.api.get_options.cljs$core$IFn$_invoke$arity$1"]],"^1E",[["^ ","^1F",67,"^1G",51,"^O","cljs.env/*compiler*"]]],"~i57",["^ ","~i4",[["^ ","^1F",73,"^1G",54,"^O","state"]]],"~i58",["^ ","~i3",[["^ ","^1F",0,"^1G",55],["^ ","^1F",51,"^1G",55],["^ ","^1F",51,"^1G",55,"^O","cljs.core/deref"],["^ ","^1F",74,"^1G",55]],"~i4",[["^ ","^1F",7,"^1G",55,"^O","cljs.core.get.cljs$core$IFn$_invoke$arity$2"]],"~i9",[["^ ","^1F",67,"^1G",55,"^O","state"]]],"~i60",["^ ","~i0",[["^ ","^1F",0,"^1G",60],["^ ","^1F",0,"^1G",60],["^ ","^1F",33,"^1G",64],["^ ","^1F",74,"^1G",64,"^O","var_args"],["^ ","^1F",0,"^1G",65],["^ ","^1F",0,"^1G",65],["^ ","^1F",4,"^1G",65,"^O","G__9574"],["^ ","^1F",14,"^1G",65],["^ ","^1F",14,"^1G",65],["^ ","^1F",0,"^1G",66],["^ ","^1F",0,"^1G",66],["^ ","^1F",8,"^1G",66,"^O","G__9574"],["^ ","^1F",5,"^1G",67],["^ ","^1F",0,"^1G",68],["^ ","^1F",7,"^1G",68,"^O","cljs.analyzer.api/get-js-index"],["^ ","^1F",5,"^1G",71],["^ ","^1F",0,"^1G",72],["^ ","^1F",7,"^1G",72,"^O","cljs.analyzer.api/get-js-index"],["^ ","^1F",68,"^1G",72],["^ ","^1F",69,"^1G",72],["^ ","^1F",79,"^1G",72],["^ ","^1F",0,"^1G",76],["^ ","^1F",6,"^1G",76],["^ ","^1F",11,"^1G",76,"^O","js/Error"],["^ ","^1F",17,"^1G",76],["^ ","^1F",18,"^1G",76],["^ ","^1F",80,"^1G",76],["^ ","^1F",80,"^1G",76],["^ ","^1F",0,"^1G",81],["^ ","^1F",0,"^1G",81],["^ ","^1F",63,"^1G",81],["^ ","^1F",0,"^1G",82],["^ ","^1F",0,"^1G",85],["^ ","^1F",0,"^1G",85],["^ ","^1F",63,"^1G",85],["^ ","^1F",0,"^1G",86],["^ ","^1F",0,"^1G",89],["^ ","^1F",0,"^1G",89],["^ ","^1F",57,"^1G",89],["^ ","^1F",0,"^1G",91]],"~i6",[["^ ","^1F",0,"^1G",64,"^O","cljs.analyzer.api/get-js-index"],["^ ","^1F",0,"^1G",81,"^O","cljs.analyzer.api/get-js-index"],["^ ","^1F",0,"^1G",85,"^O","cljs.analyzer.api/get-js-index"],["^ ","^1F",0,"^1G",89,"^O","cljs.analyzer.api/get-js-index"]]],"~i63",["^ ","~i6",[["^ ","^1F",0,"^1G",82]],"~i7",[["^ ","^1F",7,"^1G",82,"^O","cljs.analyzer.api.get_options.cljs$core$IFn$_invoke$arity$1"]],"^1E",[["^ ","^1F",67,"^1G",82,"^O","cljs.env/*compiler*"]]],"~i64",["^ ","~i4",[["^ ","^1F",74,"^1G",85,"^O","state"]]],"~i65",["^ ","~i3",[["^ ","^1F",0,"^1G",86],["^ ","^1F",51,"^1G",86],["^ ","^1F",51,"^1G",86,"^O","cljs.core/deref"],["^ ","^1F",74,"^1G",86]],"~i4",[["^ ","^1F",7,"^1G",86,"^O","cljs.core.get.cljs$core$IFn$_invoke$arity$2"]],"~i9",[["^ ","^1F",67,"^1G",86,"^O","state"]]],"~i143",["^ ","~i0",[["^ ","^1F",0,"^1G",91],["^ ","^1F",28,"^1G",95],["^ ","^1F",0,"^1G",96],["^ ","^1F",0,"^1G",96],["^ ","^1F",0,"^1G",97],["^ ","^1F",0,"^1G",98],["^ ","^1F",0,"^1G",98],["^ ","^1F",6,"^1G",98],["^ ","^1F",11,"^1G",98,"^O","js/Error"],["^ ","^1F",17,"^1G",98],["^ ","^1F",0,"^1G",101],["^ ","^1F",0,"^1G",102],["^ ","^1F",0,"^1G",103],["^ ","^1F",0,"^1G",103],["^ ","^1F",6,"^1G",103],["^ ","^1F",11,"^1G",103,"^O","js/Error"],["^ ","^1F",17,"^1G",103]],"~i6",[["^ ","^1F",0,"^1G",95,"^O","cljs.analyzer.api/resolve"]]],"~i146",["^ ","~i3",[["^ ","^1F",64,"^1G",95,"^O","env"]],"~i7",[["^ ","^1F",68,"^1G",95,"^O","sym"]]],"~i147",["^ ","~i9",[["^ ","^1F",3,"^1G",96]],"~i10",[["^ ","^1F",3,"^1G",96,"^O","cljs.core/map?"]],"~i15",[["^ ","^1F",24,"^1G",96,"^O","env"]],"^1R",[["^ ","^1F",3,"^1G",101],["^ ","^1F",19,"^1G",101,"^O","cljs.core/Symbol"]],"~i29",[["^ ","^1F",4,"^1G",101,"^O","sym"]]],"~i148",["^ ","~i2",[["^ ","^1F",0,"^1G",106],["^ ","^1F",4,"^1G",106],["^ ","^1F",15,"^1G",107],["^ ","^1F",23,"^1G",107,"^O","e9576"],["^ ","^1F",0,"^1G",108]]],"~i149",["^ ","~i4",[["^ ","^1F",4,"^1G",106]],"~i5",[["^ ","^1F",11,"^1G",106,"^O","cljs.analyzer.resolve_var.cljs$core$IFn$_invoke$arity$3"]],"~i21",[["^ ","^1F",67,"^1G",106,"^O","env"]],"~i25",[["^ ","^1F",71,"^1G",106,"^O","sym"]]],"~i150",["^ ","~i6",[["^ ","^1F",75,"^1G",106]],"~i7",[["^ ","^1F",75,"^1G",106,"^O","cljs.analyzer/confirm-var-exists-throw"]]],"~i151",["^ ","^1M",[["^ ","^1F",19,"^1G",107,"^O","e"]]],"~i152",["^ ","~i6",[["^ ","^1F",0,"^1G",108]],"~i7",[["^ ","^1F",7,"^1G",108,"^O","cljs.analyzer/resolve-macro-var"]],"^27",[["^ ","^1F",39,"^1G",108,"^O","env"]],"^1J",[["^ ","^1F",43,"^1G",108,"^O","sym"]]],"~i154",["^ ","~i0",[["^ ","^1F",0,"^1G",110],["^ ","^1F",0,"^1G",110],["^ ","^1F",27,"^1G",114],["^ ","^1F",62,"^1G",114,"^O","var_args"],["^ ","^1F",0,"^1G",115],["^ ","^1F",0,"^1G",115],["^ ","^1F",4,"^1G",115,"^O","G__9581"],["^ ","^1F",14,"^1G",115],["^ ","^1F",14,"^1G",115],["^ ","^1F",0,"^1G",116],["^ ","^1F",0,"^1G",116],["^ ","^1F",8,"^1G",116,"^O","G__9581"],["^ ","^1F",5,"^1G",117],["^ ","^1F",0,"^1G",118],["^ ","^1F",7,"^1G",118,"^O","cljs.analyzer.api/all-ns"],["^ ","^1F",5,"^1G",121],["^ ","^1F",0,"^1G",122],["^ ","^1F",7,"^1G",122,"^O","cljs.analyzer.api/all-ns"],["^ ","^1F",62,"^1G",122],["^ ","^1F",63,"^1G",122],["^ ","^1F",73,"^1G",122],["^ ","^1F",0,"^1G",126],["^ ","^1F",6,"^1G",126],["^ ","^1F",11,"^1G",126,"^O","js/Error"],["^ ","^1F",17,"^1G",126],["^ ","^1F",18,"^1G",126],["^ ","^1F",80,"^1G",126],["^ ","^1F",80,"^1G",126],["^ ","^1F",0,"^1G",131],["^ ","^1F",0,"^1G",131],["^ ","^1F",57,"^1G",131],["^ ","^1F",0,"^1G",132],["^ ","^1F",0,"^1G",135],["^ ","^1F",0,"^1G",135],["^ ","^1F",57,"^1G",135],["^ ","^1F",0,"^1G",136],["^ ","^1F",0,"^1G",139],["^ ","^1F",0,"^1G",139],["^ ","^1F",51,"^1G",139],["^ ","^1F",0,"^1G",141]],"~i6",[["^ ","^1F",0,"^1G",114,"^O","cljs.analyzer.api/all-ns"],["^ ","^1F",0,"^1G",131,"^O","cljs.analyzer.api/all-ns"],["^ ","^1F",0,"^1G",135,"^O","cljs.analyzer.api/all-ns"],["^ ","^1F",0,"^1G",139,"^O","cljs.analyzer.api/all-ns"]]],"~i158",["^ ","~i3",[["^ ","^1F",0,"^1G",132]],"~i4",[["^ ","^1F",7,"^1G",132,"^O","cljs.analyzer.api.all_ns.cljs$core$IFn$_invoke$arity$1"]],"~i11",[["^ ","^1F",62,"^1G",132,"^O","cljs.env/*compiler*"]]],"~i159",["^ ","~i4",[["^ ","^1F",68,"^1G",135,"^O","state"]]],"~i160",["^ ","~i3",[["^ ","^1F",0,"^1G",136]],"~i4",[["^ ","^1F",7,"^1G",136,"^O","cljs.core/keys"]],"~i9",[["^ ","^1F",22,"^1G",136],["^ ","^1F",66,"^1G",136],["^ ","^1F",66,"^1G",136,"^O","cljs.core/deref"],["^ ","^1F",89,"^1G",136]],"^25",[["^ ","^1F",22,"^1G",136,"^O","cljs.core.get.cljs$core$IFn$_invoke$arity$2"]],"^26",[["^ ","^1F",82,"^1G",136,"^O","state"]]],"~i162",["^ ","~i0",[["^ ","^1F",0,"^1G",141],["^ ","^1F",0,"^1G",141],["^ ","^1F",28,"^1G",145],["^ ","^1F",64,"^1G",145,"^O","var_args"],["^ ","^1F",0,"^1G",146],["^ ","^1F",0,"^1G",146],["^ ","^1F",4,"^1G",146,"^O","G__9585"],["^ ","^1F",14,"^1G",146],["^ ","^1F",14,"^1G",146],["^ ","^1F",0,"^1G",147],["^ ","^1F",0,"^1G",147],["^ ","^1F",8,"^1G",147,"^O","G__9585"],["^ ","^1F",5,"^1G",148],["^ ","^1F",0,"^1G",149],["^ ","^1F",7,"^1G",149,"^O","cljs.analyzer.api/find-ns"],["^ ","^1F",63,"^1G",149],["^ ","^1F",64,"^1G",149],["^ ","^1F",74,"^1G",149],["^ ","^1F",5,"^1G",152],["^ ","^1F",0,"^1G",153],["^ ","^1F",7,"^1G",153,"^O","cljs.analyzer.api/find-ns"],["^ ","^1F",63,"^1G",153],["^ ","^1F",64,"^1G",153],["^ ","^1F",74,"^1G",153],["^ ","^1F",80,"^1G",153],["^ ","^1F",81,"^1G",153],["^ ","^1F",91,"^1G",153],["^ ","^1F",0,"^1G",157],["^ ","^1F",6,"^1G",157],["^ ","^1F",11,"^1G",157,"^O","js/Error"],["^ ","^1F",17,"^1G",157],["^ ","^1F",18,"^1G",157],["^ ","^1F",80,"^1G",157],["^ ","^1F",80,"^1G",157],["^ ","^1F",0,"^1G",162],["^ ","^1F",0,"^1G",162],["^ ","^1F",58,"^1G",162],["^ ","^1F",0,"^1G",163],["^ ","^1F",0,"^1G",166],["^ ","^1F",0,"^1G",166],["^ ","^1F",58,"^1G",166],["^ ","^1F",0,"^1G",167],["^ ","^1F",0,"^1G",167],["^ ","^1F",0,"^1G",168],["^ ","^1F",0,"^1G",169],["^ ","^1F",0,"^1G",169],["^ ","^1F",6,"^1G",169],["^ ","^1F",11,"^1G",169,"^O","js/Error"],["^ ","^1F",17,"^1G",169],["^ ","^1F",0,"^1G",175],["^ ","^1F",0,"^1G",175],["^ ","^1F",52,"^1G",175],["^ ","^1F",0,"^1G",177]],"~i6",[["^ ","^1F",0,"^1G",145,"^O","cljs.analyzer.api/find-ns"],["^ ","^1F",0,"^1G",162,"^O","cljs.analyzer.api/find-ns"],["^ ","^1F",0,"^1G",166,"^O","cljs.analyzer.api/find-ns"],["^ ","^1F",0,"^1G",175,"^O","cljs.analyzer.api/find-ns"]]],"~i165",["^ ","~i4",[["^ ","^1F",69,"^1G",162,"^O","sym"]]],"~i166",["^ ","~i3",[["^ ","^1F",0,"^1G",163]],"~i4",[["^ ","^1F",7,"^1G",163,"^O","cljs.analyzer.api.find_ns.cljs$core$IFn$_invoke$arity$2"]],"~i12",[["^ ","^1F",63,"^1G",163,"^O","cljs.env/*compiler*"]],"~i27",[["^ ","^1F",93,"^1G",163,"^O","sym"]]],"~i167",["^ ","~i4",[["^ ","^1F",69,"^1G",166,"^O","state"]],"^25",[["^ ","^1F",75,"^1G",166,"^O","sym"]]],"~i168",["^ ","^25",[["^ ","^1F",3,"^1G",167],["^ ","^1F",19,"^1G",167,"^O","cljs.core/Symbol"]],"^1E",[["^ ","^1F",4,"^1G",167,"^O","sym"]]],"~i169",["^ ","~i3",[["^ ","^1F",0,"^1G",172],["^ ","^1F",54,"^1G",172],["^ ","^1F",54,"^1G",172,"^O","cljs.core/deref"],["^ ","^1F",77,"^1G",172],["^ ","^1F",160,"^1G",172]],"~i4",[["^ ","^1F",7,"^1G",172,"^O","cljs.core.get_in.cljs$core$IFn$_invoke$arity$2"]],"^2G",[["^ ","^1F",70,"^1G",172,"^O","state"]],"~i36",[["^ ","^1F",250,"^1G",172,"^O","sym"]]],"~i171",["^ ","~i0",[["^ ","^1F",0,"^1G",177],["^ ","^1F",0,"^1G",177],["^ ","^1F",31,"^1G",181],["^ ","^1F",70,"^1G",181,"^O","var_args"],["^ ","^1F",0,"^1G",182],["^ ","^1F",0,"^1G",182],["^ ","^1F",4,"^1G",182,"^O","G__9591"],["^ ","^1F",14,"^1G",182],["^ ","^1F",14,"^1G",182],["^ ","^1F",0,"^1G",183],["^ ","^1F",0,"^1G",183],["^ ","^1F",8,"^1G",183,"^O","G__9591"],["^ ","^1F",5,"^1G",184],["^ ","^1F",0,"^1G",185],["^ ","^1F",7,"^1G",185,"^O","cljs.analyzer.api/ns-interns"],["^ ","^1F",66,"^1G",185],["^ ","^1F",67,"^1G",185],["^ ","^1F",77,"^1G",185],["^ ","^1F",5,"^1G",188],["^ ","^1F",0,"^1G",189],["^ ","^1F",7,"^1G",189,"^O","cljs.analyzer.api/ns-interns"],["^ ","^1F",66,"^1G",189],["^ ","^1F",67,"^1G",189],["^ ","^1F",77,"^1G",189],["^ ","^1F",83,"^1G",189],["^ ","^1F",84,"^1G",189],["^ ","^1F",94,"^1G",189],["^ ","^1F",0,"^1G",193],["^ ","^1F",6,"^1G",193],["^ ","^1F",11,"^1G",193,"^O","js/Error"],["^ ","^1F",17,"^1G",193],["^ ","^1F",18,"^1G",193],["^ ","^1F",80,"^1G",193],["^ ","^1F",80,"^1G",193],["^ ","^1F",0,"^1G",198],["^ ","^1F",0,"^1G",198],["^ ","^1F",61,"^1G",198],["^ ","^1F",0,"^1G",199],["^ ","^1F",0,"^1G",202],["^ ","^1F",0,"^1G",202],["^ ","^1F",61,"^1G",202],["^ ","^1F",0,"^1G",203],["^ ","^1F",0,"^1G",203],["^ ","^1F",0,"^1G",204],["^ ","^1F",0,"^1G",205],["^ ","^1F",0,"^1G",205],["^ ","^1F",6,"^1G",205],["^ ","^1F",11,"^1G",205,"^O","js/Error"],["^ ","^1F",17,"^1G",205],["^ ","^1F",0,"^1G",211],["^ ","^1F",0,"^1G",211],["^ ","^1F",55,"^1G",211],["^ ","^1F",0,"^1G",213]],"~i6",[["^ ","^1F",0,"^1G",181,"^O","cljs.analyzer.api/ns-interns"],["^ ","^1F",0,"^1G",198,"^O","cljs.analyzer.api/ns-interns"],["^ ","^1F",0,"^1G",202,"^O","cljs.analyzer.api/ns-interns"],["^ ","^1F",0,"^1G",211,"^O","cljs.analyzer.api/ns-interns"]]],"~i174",["^ ","~i4",[["^ ","^1F",72,"^1G",198,"^O","ns"]]],"~i175",["^ ","~i3",[["^ ","^1F",0,"^1G",199]],"~i4",[["^ ","^1F",7,"^1G",199,"^O","cljs.analyzer.api.ns_interns.cljs$core$IFn$_invoke$arity$2"]],"^26",[["^ ","^1F",66,"^1G",199,"^O","cljs.env/*compiler*"]],"^1I",[["^ ","^1F",96,"^1G",199,"^O","ns"]]],"~i176",["^ ","~i4",[["^ ","^1F",72,"^1G",202,"^O","state"]],"^25",[["^ ","^1F",78,"^1G",202,"^O","ns"]]],"~i177",["^ ","^25",[["^ ","^1F",3,"^1G",203],["^ ","^1F",18,"^1G",203,"^O","cljs.core/Symbol"]],"^1E",[["^ ","^1F",4,"^1G",203,"^O","ns"]]],"~i178",["^ ","~i3",[["^ ","^1F",0,"^1G",208]],"~i4",[["^ ","^1F",7,"^1G",208,"^O","cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic"]]],"~i179",["^ ","~i5",[["^ ","^1F",110,"^1G",208],["^ ","^1F",157,"^1G",208],["^ ","^1F",157,"^1G",208,"^O","cljs.core/deref"],["^ ","^1F",180,"^1G",208],["^ ","^1F",263,"^1G",208],["^ ","^1F",356,"^1G",208]],"~i6",[["^ ","^1F",110,"^1G",208,"^O","cljs.core.get_in.cljs$core$IFn$_invoke$arity$2"]],"~i14",[["^ ","^1F",173,"^1G",208,"^O","state"]],"~i38",[["^ ","^1F",353,"^1G",208,"^O","ns"]]],"~i180",["^ ","~i5",[["^ ","^1F",421,"^1G",208],["^ ","^1F",468,"^1G",208],["^ ","^1F",468,"^1G",208,"^O","cljs.core/deref"],["^ ","^1F",491,"^1G",208],["^ ","^1F",574,"^1G",208],["^ ","^1F",667,"^1G",208]],"~i6",[["^ ","^1F",421,"^1G",208,"^O","cljs.core.get_in.cljs$core$IFn$_invoke$arity$2"]],"^2T",[["^ ","^1F",484,"^1G",208,"^O","state"]],"^2U",[["^ ","^1F",664,"^1G",208,"^O","ns"]]],"~i182",["^ ","~i0",[["^ ","^1F",0,"^1G",213],["^ ","^1F",0,"^1G",213],["^ ","^1F",31,"^1G",217],["^ ","^1F",70,"^1G",217,"^O","var_args"],["^ ","^1F",0,"^1G",218],["^ ","^1F",0,"^1G",218],["^ ","^1F",4,"^1G",218,"^O","G__9594"],["^ ","^1F",14,"^1G",218],["^ ","^1F",14,"^1G",218],["^ ","^1F",0,"^1G",219],["^ ","^1F",0,"^1G",219],["^ ","^1F",8,"^1G",219,"^O","G__9594"],["^ ","^1F",5,"^1G",220],["^ ","^1F",0,"^1G",221],["^ ","^1F",7,"^1G",221,"^O","cljs.analyzer.api/ns-publics"],["^ ","^1F",66,"^1G",221],["^ ","^1F",67,"^1G",221],["^ ","^1F",77,"^1G",221],["^ ","^1F",5,"^1G",224],["^ ","^1F",0,"^1G",225],["^ ","^1F",7,"^1G",225,"^O","cljs.analyzer.api/ns-publics"],["^ ","^1F",66,"^1G",225],["^ ","^1F",67,"^1G",225],["^ ","^1F",77,"^1G",225],["^ ","^1F",83,"^1G",225],["^ ","^1F",84,"^1G",225],["^ ","^1F",94,"^1G",225],["^ ","^1F",0,"^1G",229],["^ ","^1F",6,"^1G",229],["^ ","^1F",11,"^1G",229,"^O","js/Error"],["^ ","^1F",17,"^1G",229],["^ ","^1F",18,"^1G",229],["^ ","^1F",80,"^1G",229],["^ ","^1F",80,"^1G",229],["^ ","^1F",0,"^1G",234],["^ ","^1F",0,"^1G",234],["^ ","^1F",61,"^1G",234],["^ ","^1F",0,"^1G",235],["^ ","^1F",0,"^1G",238],["^ ","^1F",0,"^1G",238],["^ ","^1F",61,"^1G",238],["^ ","^1F",0,"^1G",239],["^ ","^1F",0,"^1G",239],["^ ","^1F",0,"^1G",240],["^ ","^1F",0,"^1G",241],["^ ","^1F",0,"^1G",241],["^ ","^1F",6,"^1G",241],["^ ","^1F",11,"^1G",241,"^O","js/Error"],["^ ","^1F",17,"^1G",241],["^ ","^1F",0,"^1G",252],["^ ","^1F",0,"^1G",252],["^ ","^1F",55,"^1G",252],["^ ","^1F",0,"^1G",254]],"~i6",[["^ ","^1F",0,"^1G",217,"^O","cljs.analyzer.api/ns-publics"],["^ ","^1F",0,"^1G",234,"^O","cljs.analyzer.api/ns-publics"],["^ ","^1F",0,"^1G",238,"^O","cljs.analyzer.api/ns-publics"],["^ ","^1F",0,"^1G",252,"^O","cljs.analyzer.api/ns-publics"]]],"~i185",["^ ","~i4",[["^ ","^1F",72,"^1G",234,"^O","ns"]]],"~i186",["^ ","~i3",[["^ ","^1F",0,"^1G",235]],"~i4",[["^ ","^1F",7,"^1G",235,"^O","cljs.analyzer.api.ns_publics.cljs$core$IFn$_invoke$arity$2"]],"^26",[["^ ","^1F",66,"^1G",235,"^O","cljs.env/*compiler*"]],"^1I",[["^ ","^1F",96,"^1G",235,"^O","ns"]]],"~i187",["^ ","~i4",[["^ ","^1F",72,"^1G",238,"^O","state"]],"^25",[["^ ","^1F",78,"^1G",238,"^O","ns"]]],"~i188",["^ ","^25",[["^ ","^1F",3,"^1G",239],["^ ","^1F",18,"^1G",239,"^O","cljs.core/Symbol"]],"^1E",[["^ ","^1F",4,"^1G",239,"^O","ns"]]],"~i189",["^ ","~i8",[["^ ","^1F",3,"^1G",249]],"~i9",[["^ ","^1F",3,"^1G",249,"^O","cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic"]]],"~i190",["^ ","^25",[["^ ","^1F",106,"^1G",249],["^ ","^1F",153,"^1G",249],["^ ","^1F",153,"^1G",249,"^O","cljs.core/deref"],["^ ","^1F",176,"^1G",249],["^ ","^1F",259,"^1G",249],["^ ","^1F",352,"^1G",249]],"^2A",[["^ ","^1F",106,"^1G",249,"^O","cljs.core.get_in.cljs$core$IFn$_invoke$arity$2"]],"^1E",[["^ ","^1F",169,"^1G",249,"^O","state"]],"~i43",[["^ ","^1F",349,"^1G",249,"^O","ns"]]],"~i191",["^ ","^25",[["^ ","^1F",417,"^1G",249],["^ ","^1F",464,"^1G",249],["^ ","^1F",464,"^1G",249,"^O","cljs.core/deref"],["^ ","^1F",487,"^1G",249],["^ ","^1F",570,"^1G",249],["^ ","^1F",663,"^1G",249]],"^2A",[["^ ","^1F",417,"^1G",249,"^O","cljs.core.get_in.cljs$core$IFn$_invoke$arity$2"]],"^1E",[["^ ","^1F",480,"^1G",249,"^O","state"]],"^32",[["^ ","^1F",660,"^1G",249,"^O","ns"]]],"~i192",["^ ","~i8",[["^ ","^1F",87,"^1G",244]],"~i9",[["^ ","^1F",87,"^1G",244,"^O","cljs.core.remove.cljs$core$IFn$_invoke$arity$2"]],"^1Q",[["^ ","^1F",134,"^1G",244],["^ ","^1F",145,"^1G",244,"^O","p__9595"],["^ ","^1F",0,"^1G",245],["^ ","^1F",0,"^1G",245],["^ ","^1F",4,"^1G",245,"^O","vec__9596"],["^ ","^1F",16,"^1G",245,"^O","p__9595"],["^ ","^1F",8,"^1G",246],["^ ","^1F",8,"^1G",246,"^O","cljs.core.nth.cljs$core$IFn$_invoke$arity$3"],["^ ","^1F",52,"^1G",246,"^O","vec__9596"],["^ ","^1F",62,"^1G",246],["^ ","^1F",66,"^1G",246],["^ ","^1F",8,"^1G",247],["^ ","^1F",8,"^1G",247,"^O","cljs.core.nth.cljs$core$IFn$_invoke$arity$3"],["^ ","^1F",52,"^1G",247,"^O","vec__9596"],["^ ","^1F",62,"^1G",247],["^ ","^1F",66,"^1G",247],["^ ","^1F",0,"^1G",248]],"^1H",[["^ ","^1F",4,"^1G",246,"^O","k"]],"~i24",[["^ ","^1F",4,"^1G",247,"^O","v"]],"~i28",[["^ ","^1F",0,"^1G",248],["^ ","^1F",7,"^1G",248]],"^2U",[["^ ","^1F",96,"^1G",248,"^O","v"]]],"~i193",["^ ","~i8",[["^ ","^1F",0,"^1G",244],["^ ","^1F",52,"^1G",244]],"~i9",[["^ ","^1F",7,"^1G",244,"^O","cljs.core.into.cljs$core$IFn$_invoke$arity$2"]]],"~i195",["^ ","~i0",[["^ ","^1F",0,"^1G",254],["^ ","^1F",0,"^1G",254],["^ ","^1F",31,"^1G",258],["^ ","^1F",70,"^1G",258,"^O","var_args"],["^ ","^1F",0,"^1G",259],["^ ","^1F",0,"^1G",259],["^ ","^1F",4,"^1G",259,"^O","G__9601"],["^ ","^1F",14,"^1G",259],["^ ","^1F",14,"^1G",259],["^ ","^1F",0,"^1G",260],["^ ","^1F",0,"^1G",260],["^ ","^1F",8,"^1G",260,"^O","G__9601"],["^ ","^1F",5,"^1G",261],["^ ","^1F",0,"^1G",262],["^ ","^1F",7,"^1G",262,"^O","cljs.analyzer.api/ns-resolve"],["^ ","^1F",66,"^1G",262],["^ ","^1F",67,"^1G",262],["^ ","^1F",77,"^1G",262],["^ ","^1F",83,"^1G",262],["^ ","^1F",84,"^1G",262],["^ ","^1F",94,"^1G",262],["^ ","^1F",5,"^1G",265],["^ ","^1F",0,"^1G",266],["^ ","^1F",7,"^1G",266,"^O","cljs.analyzer.api/ns-resolve"],["^ ","^1F",66,"^1G",266],["^ ","^1F",67,"^1G",266],["^ ","^1F",77,"^1G",266],["^ ","^1F",83,"^1G",266],["^ ","^1F",84,"^1G",266],["^ ","^1F",94,"^1G",266],["^ ","^1F",100,"^1G",266],["^ ","^1F",101,"^1G",266],["^ ","^1F",111,"^1G",266],["^ ","^1F",0,"^1G",270],["^ ","^1F",6,"^1G",270],["^ ","^1F",11,"^1G",270,"^O","js/Error"],["^ ","^1F",17,"^1G",270],["^ ","^1F",18,"^1G",270],["^ ","^1F",80,"^1G",270],["^ ","^1F",80,"^1G",270],["^ ","^1F",0,"^1G",275],["^ ","^1F",0,"^1G",275],["^ ","^1F",61,"^1G",275],["^ ","^1F",0,"^1G",276],["^ ","^1F",0,"^1G",279],["^ ","^1F",0,"^1G",279],["^ ","^1F",61,"^1G",279],["^ ","^1F",0,"^1G",280],["^ ","^1F",0,"^1G",280],["^ ","^1F",0,"^1G",281],["^ ","^1F",0,"^1G",282],["^ ","^1F",0,"^1G",282],["^ ","^1F",6,"^1G",282],["^ ","^1F",11,"^1G",282,"^O","js/Error"],["^ ","^1F",17,"^1G",282],["^ ","^1F",0,"^1G",285],["^ ","^1F",0,"^1G",286],["^ ","^1F",0,"^1G",287],["^ ","^1F",0,"^1G",287],["^ ","^1F",6,"^1G",287],["^ ","^1F",11,"^1G",287,"^O","js/Error"],["^ ","^1F",17,"^1G",287],["^ ","^1F",0,"^1G",293],["^ ","^1F",0,"^1G",293],["^ ","^1F",55,"^1G",293],["^ ","^1F",0,"^1G",295]],"~i6",[["^ ","^1F",0,"^1G",258,"^O","cljs.analyzer.api/ns-resolve"],["^ ","^1F",0,"^1G",275,"^O","cljs.analyzer.api/ns-resolve"],["^ ","^1F",0,"^1G",279,"^O","cljs.analyzer.api/ns-resolve"],["^ ","^1F",0,"^1G",293,"^O","cljs.analyzer.api/ns-resolve"]]],"~i198",["^ ","~i4",[["^ ","^1F",72,"^1G",275,"^O","ns"]],"~i7",[["^ ","^1F",75,"^1G",275,"^O","sym"]]],"~i199",["^ ","~i3",[["^ ","^1F",0,"^1G",276]],"~i4",[["^ ","^1F",7,"^1G",276,"^O","cljs.analyzer.api.ns_resolve.cljs$core$IFn$_invoke$arity$3"]],"^26",[["^ ","^1F",66,"^1G",276,"^O","cljs.env/*compiler*"]],"^1I",[["^ ","^1F",96,"^1G",276,"^O","ns"]],"^1J",[["^ ","^1F",99,"^1G",276,"^O","sym"]]],"~i200",["^ ","~i4",[["^ ","^1F",72,"^1G",279,"^O","state"]],"^25",[["^ ","^1F",78,"^1G",279,"^O","ns"]],"~i13",[["^ ","^1F",81,"^1G",279,"^O","sym"]]],"~i201",["^ ","^25",[["^ ","^1F",3,"^1G",280],["^ ","^1F",18,"^1G",280,"^O","cljs.core/Symbol"]],"^1E",[["^ ","^1F",4,"^1G",280,"^O","ns"]],"^1N",[["^ ","^1F",3,"^1G",285],["^ ","^1F",19,"^1G",285,"^O","cljs.core/Symbol"]],"~i32",[["^ ","^1F",4,"^1G",285,"^O","sym"]]],"~i202",["^ ","~i3",[["^ ","^1F",0,"^1G",290],["^ ","^1F",54,"^1G",290],["^ ","^1F",54,"^1G",290,"^O","cljs.core/deref"],["^ ","^1F",77,"^1G",290],["^ ","^1F",160,"^1G",290],["^ ","^1F",253,"^1G",290]],"~i4",[["^ ","^1F",7,"^1G",290,"^O","cljs.core.get_in.cljs$core$IFn$_invoke$arity$2"]],"^2G",[["^ ","^1F",70,"^1G",290,"^O","state"]],"^2L",[["^ ","^1F",250,"^1G",290,"^O","ns"]],"^1M",[["^ ","^1F",306,"^1G",290,"^O","sym"]]],"~i204",["^ ","~i0",[["^ ","^1F",0,"^1G",295],["^ ","^1F",0,"^1G",295],["^ ","^1F",30,"^1G",298],["^ ","^1F",68,"^1G",298,"^O","var_args"],["^ ","^1F",0,"^1G",299],["^ ","^1F",0,"^1G",299],["^ ","^1F",4,"^1G",299,"^O","G__9606"],["^ ","^1F",14,"^1G",299],["^ ","^1F",14,"^1G",299],["^ ","^1F",0,"^1G",300],["^ ","^1F",0,"^1G",300],["^ ","^1F",8,"^1G",300,"^O","G__9606"],["^ ","^1F",5,"^1G",301],["^ ","^1F",0,"^1G",302],["^ ","^1F",7,"^1G",302,"^O","cljs.analyzer.api/remove-ns"],["^ ","^1F",65,"^1G",302],["^ ","^1F",66,"^1G",302],["^ ","^1F",76,"^1G",302],["^ ","^1F",5,"^1G",305],["^ ","^1F",0,"^1G",306],["^ ","^1F",7,"^1G",306,"^O","cljs.analyzer.api/remove-ns"],["^ ","^1F",65,"^1G",306],["^ ","^1F",66,"^1G",306],["^ ","^1F",76,"^1G",306],["^ ","^1F",82,"^1G",306],["^ ","^1F",83,"^1G",306],["^ ","^1F",93,"^1G",306],["^ ","^1F",0,"^1G",310],["^ ","^1F",6,"^1G",310],["^ ","^1F",11,"^1G",310,"^O","js/Error"],["^ ","^1F",17,"^1G",310],["^ ","^1F",18,"^1G",310],["^ ","^1F",80,"^1G",310],["^ ","^1F",80,"^1G",310],["^ ","^1F",0,"^1G",315],["^ ","^1F",0,"^1G",315],["^ ","^1F",60,"^1G",315],["^ ","^1F",0,"^1G",316],["^ ","^1F",0,"^1G",319],["^ ","^1F",0,"^1G",319],["^ ","^1F",60,"^1G",319],["^ ","^1F",0,"^1G",320],["^ ","^1F",0,"^1G",320],["^ ","^1F",0,"^1G",321],["^ ","^1F",0,"^1G",322],["^ ","^1F",0,"^1G",322],["^ ","^1F",6,"^1G",322],["^ ","^1F",11,"^1G",322,"^O","js/Error"],["^ ","^1F",17,"^1G",322],["^ ","^1F",0,"^1G",328],["^ ","^1F",0,"^1G",328],["^ ","^1F",54,"^1G",328],["^ ","^1F",0,"^1G",330]],"~i6",[["^ ","^1F",0,"^1G",298,"^O","cljs.analyzer.api/remove-ns"],["^ ","^1F",0,"^1G",315,"^O","cljs.analyzer.api/remove-ns"],["^ ","^1F",0,"^1G",319,"^O","cljs.analyzer.api/remove-ns"],["^ ","^1F",0,"^1G",328,"^O","cljs.analyzer.api/remove-ns"]]],"~i206",["^ ","~i4",[["^ ","^1F",71,"^1G",315,"^O","ns"]]],"~i207",["^ ","~i3",[["^ ","^1F",0,"^1G",316]],"~i4",[["^ ","^1F",7,"^1G",316,"^O","cljs.analyzer.api.remove_ns.cljs$core$IFn$_invoke$arity$2"]],"^2T",[["^ ","^1F",65,"^1G",316,"^O","cljs.env/*compiler*"]],"^27",[["^ ","^1F",95,"^1G",316,"^O","ns"]]],"~i208",["^ ","~i4",[["^ ","^1F",71,"^1G",319,"^O","state"]],"^25",[["^ ","^1F",77,"^1G",319,"^O","ns"]]],"~i209",["^ ","^25",[["^ ","^1F",3,"^1G",320],["^ ","^1F",18,"^1G",320,"^O","cljs.core/Symbol"]],"^1E",[["^ ","^1F",4,"^1G",320,"^O","ns"]]],"~i210",["^ ","~i3",[["^ ","^1F",0,"^1G",325],["^ ","^1F",91,"^1G",325],["^ ","^1F",174,"^1G",325]],"~i4",[["^ ","^1F",7,"^1G",325,"^O","cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$variadic"]],"^25",[["^ ","^1F",65,"^1G",325,"^O","state"]],"^1Q",[["^ ","^1F",71,"^1G",325,"^O","cljs.core/update-in"]],"^1M",[["^ ","^1F",272,"^1G",325,"^O","cljs.core/dissoc"]],"^1S",[["^ ","^1F",339,"^1G",325,"^O","ns"]]]],"~:cljc",true],"~:cache-keys",["~#cmap",[["~:macro","^Y"],[1532292597000],["^1=","cljs/tools/reader/impl/utils.cljs"],[1533404976116,"^Z","^Y","~$clojure.string","~$goog.string"],["^1=","goog/math/math.js"],[1531925801810,"^Z","~$goog.array","~$goog.asserts"],["^1=","cljs/env.cljc"],[1532292597383,"^Z","^Y"],["^1=","goog/array/array.js"],[1531925801810,"^Z","^3M"],["^3I","~$cljs.tools.reader.reader-types"],[1533404976000],["^1=","goog/debug/error.js"],[1531925801810,"^Z"],["^1=","cljs/tools/reader/edn.cljs"],[1533404976116,"^Z","^Y","~$cljs.tools.reader.impl.errors","^3N","~$cljs.tools.reader.impl.utils","~$cljs.tools.reader.impl.commons","~$cljs.tools.reader","^3K","~$goog.string.StringBuffer"],["^1=","goog/dom/nodetype.js"],[1531925801810,"^Z"],["^1=","cljs/tools/reader/impl/inspect.cljs"],[1533404976116,"^Z","^Y"],["^1=","cljs/tools/reader.cljs"],[1533404976116,"^Z","^Y","^3N","^3P","^3Q","^3O","^3L","^3K","^3S"],["^1=","goog/object/object.js"],[1531925801810,"^Z"],"~:SHADOW-TIMESTAMP",[1533404981000,1532292597000],["^1=","goog/math/long.js"],[1531925801810,"^Z","^3M","~$goog.reflect"],["^1=","goog/functions/functions.js"],[1531925801810,"^Z"],["^1=","goog/structs/map.js"],[1531925801810,"^Z","~$goog.iter.Iterator","~$goog.iter.StopIteration","~$goog.object"],["^1=","cljs/reader.cljs"],[1532292597383,"^Z","^Y","^3X","^3R","~$cljs.tools.reader.edn","^3S"],["^1=","goog/asserts/asserts.js"],[1531925801810,"^Z","~$goog.debug.Error","~$goog.dom.NodeType","^3K"],["^1=","cljs/tagged_literals.cljc"],[1532292597383,"^Z","^Y","~$cljs.reader"],["^1=","goog/uri/uri.js"],[1531925801810,"^Z","^3L","^3M","^3K","~$goog.structs","~$goog.structs.Map","~$goog.uri.utils","~$goog.uri.utils.ComponentIndex","~$goog.uri.utils.StandardQueryParam"],["^3I","~$cljs.analyzer.macros"],[1532292597000],["^1=","goog/base.js"],[1531925801810],["^1=","goog/structs/structs.js"],[1531925801810,"^Z","^3L","^3X"],["^1=","cljs/tools/reader/impl/errors.cljs"],[1533404976116,"^Z","^Y","^3N","^3J","~$cljs.tools.reader.impl.inspect"],["^1=","clojure/string.cljs"],[1532292597383,"^Z","^Y","^3K","^3S"],["^1=","goog/string/string.js"],[1531925801810,"^Z"],["^1=","goog/reflect/reflect.js"],[1531925801810,"^Z"],["^1=","goog/string/stringbuffer.js"],[1531925801810,"^Z"],["^1=","cljs/tools/reader/reader_types.cljs"],[1533404976116,"^Z","^Y","^3P","^3K","^3S"],["^1=","goog/iter/iter.js"],[1531925801810,"^Z","^3L","^3M","~$goog.functions","~$goog.math"],["^1=","cljs/tools/reader/impl/commons.cljs"],[1533404976116,"^Z","^Y","^3O","^3N","^3P"],["^1=","cljs/core.cljs"],[1532292597383,"~$goog.math.Long","~$goog.math.Integer","^3K","^3X","^3L","~$goog.Uri","^3S"],["^1=","cljs/analyzer/api.cljc"],[1532292597383,"^Z","^Y","^U","^W"],["^1=","goog/math/integer.js"],[1531925801810,"^Z"],["^3I","~$cljs.env.macros"],[1532292597000],["^1=","clojure/set.cljs"],[1532292597383,"^Z","^Y"],["^1=","goog/uri/utils.js"],[1531925801810,"^Z","^3L","^3M","^3K"],["^1=","cljs/analyzer.cljc"],[1532292597383,"^Z","^Y","^3K","^3J","~$clojure.set","^U","~$cljs.tagged-literals","^3R","^3N","^40"],["^3I","^40"],[1532292597000]]],"~:analyzer",["^ ","^3",null,"^4",["^ "],"^5",["^ ","^6","This is intended to be a stable api for those who need programmatic access\n  to the analyzer.","^7","cljs/analyzer/api.cljc","^8",9,"^9",5,"^:",9,"^;",22],"^<",["^ ","^=","^>","^?","^@","^A","^B","^C","^D"],"^E",null,"^F",["^G",["^H","^I","^J","^K","^L","^M","^N"]],"^O","^P","^S",null,"^T",["^ ","^U","^U","^V","^U","^W","^W","^X","^W","^Y","^Y","^Z","^Z"],"^[",["^G",["^10"]],"~:shadow/js-access-global",["^G",["Error"]],"^11",null,"~:defs",["^ ","^H",["^ ","~:protocol-inline",null,"^5",["^ ","^7","cljs/analyzer/api.cljc","^8",163,"^9",7,"^:",163,"^;",14,"~:arglists",["^14",["~$quote",["^14",[["~$sym"],["~$state","^4F"]]]]],"^6","Given a namespace return the corresponding namespace analysis map. Analagous\n  to clojure.core/find-ns.","~:top-fn",["^ ","~:variadic",false,"~:max-fixed-arity",2,"~:method-params",["^14",[["^4F"],["^4G","^4F"]]],"^4D",["^14",[["^4F"],["^4G","^4F"]]],"~:arglists-meta",["^14",[null,null]]]],"^O","~$cljs.analyzer.api/find-ns","^4I",false,"^7","cljs/analyzer/api.cljc","^;",14,"^4H",["^ ","^4I",false,"^4J",2,"^4K",["^14",[["^4F"],["^4G","^4F"]]],"^4D",["^14",[["^4F"],["^4G","^4F"]]],"^4L",["^14",[null,null]]],"^4K",["^14",[["^4F"],["^4G","^4F"]]],"~:protocol-impl",null,"^4L",["^14",[null,null]],"^9",1,"^8",163,"^:",163,"^4J",2,"~:fn-var",true,"^4D",["^14",[["^4F"],["^4G","^4F"]]],"^6","Given a namespace return the corresponding namespace analysis map. Analagous\n  to clojure.core/find-ns."],"^I",["^ ","^4C",null,"^5",["^ ","^7","cljs/analyzer/api.cljc","^8",205,"^9",7,"^:",205,"^;",16,"^4D",["^14",["^4E",["^14",[["^15"],["^4G","^15"]]]]],"^6","Removes the namespace named by the symbol.","^4H",["^ ","^4I",false,"^4J",2,"^4K",["^14",[["^15"],["^4G","^15"]]],"^4D",["^14",[["^15"],["^4G","^15"]]],"^4L",["^14",[null,null]]]],"^O","~$cljs.analyzer.api/remove-ns","^4I",false,"^7","cljs/analyzer/api.cljc","^;",16,"^4H",["^ ","^4I",false,"^4J",2,"^4K",["^14",[["^15"],["^4G","^15"]]],"^4D",["^14",[["^15"],["^4G","^15"]]],"^4L",["^14",[null,null]]],"^4K",["^14",[["^15"],["^4G","^15"]]],"^4N",null,"^4L",["^14",[null,null]],"^9",1,"^8",205,"^:",205,"^4J",2,"^4O",true,"^4D",["^14",[["^15"],["^4G","^15"]]],"^6","Removes the namespace named by the symbol."],"^J",["^ ","^4C",null,"^5",["^ ","^7","cljs/analyzer/api.cljc","^8",183,"^9",7,"^:",183,"^;",17,"^4D",["^14",["^4E",["^14",[["^15"],["^4G","^15"]]]]],"^6","Given a namespace return all the public var analysis maps. Analagous to\n  clojure.core/ns-publics but returns var analysis maps not vars.","^4H",["^ ","^4I",false,"^4J",2,"^4K",["^14",[["^15"],["^4G","^15"]]],"^4D",["^14",[["^15"],["^4G","^15"]]],"^4L",["^14",[null,null]]]],"^O","~$cljs.analyzer.api/ns-publics","^4I",false,"^7","cljs/analyzer/api.cljc","^;",17,"^4H",["^ ","^4I",false,"^4J",2,"^4K",["^14",[["^15"],["^4G","^15"]]],"^4D",["^14",[["^15"],["^4G","^15"]]],"^4L",["^14",[null,null]]],"^4K",["^14",[["^15"],["^4G","^15"]]],"^4N",null,"^4L",["^14",[null,null]],"^9",1,"^8",183,"^:",183,"^4J",2,"^4O",true,"^4D",["^14",[["^15"],["^4G","^15"]]],"^6","Given a namespace return all the public var analysis maps. Analagous to\n  clojure.core/ns-publics but returns var analysis maps not vars."],"~$get-options",["^ ","^4C",null,"^5",["^ ","^7","cljs/analyzer/api.cljc","^8",55,"^9",7,"^:",55,"^;",18,"^4D",["^14",["^4E",["^14",[[],["^4G"]]]]],"^6","Return the compiler options from compiler state.","^4H",["^ ","^4I",false,"^4J",1,"^4K",["^14",[[],["^4G"]]],"^4D",["^14",[[],["^4G"]]],"^4L",["^14",[null,null]]]],"^O","~$cljs.analyzer.api/get-options","^4I",false,"^7","cljs/analyzer/api.cljc","^;",18,"^4H",["^ ","^4I",false,"^4J",1,"^4K",["^14",[[],["^4G"]]],"^4D",["^14",[[],["^4G"]]],"^4L",["^14",[null,null]]],"^4K",["^14",[[],["^4G"]]],"^4N",null,"^4L",["^14",[null,null]],"^9",1,"^8",55,"^:",55,"^4J",1,"^4O",true,"^4D",["^14",[[],["^4G"]]],"^6","Return the compiler options from compiler state."],"~$warning-enabled?",["^ ","^4C",null,"^5",["^ ","^7","cljs/analyzer/api.cljc","^8",43,"^9",7,"^:",43,"^;",23,"^4D",["^14",["^4E",["^14",[["~$warning-type"]]]]],"^6","Test if the given warning-type is enabled."],"^O","~$cljs.analyzer.api/warning-enabled?","^4I",false,"^7","cljs/analyzer/api.cljc","^;",23,"^4K",["^14",[["^4U"]]],"^4N",null,"^4L",["^14",[null,null]],"^9",1,"^8",43,"^:",43,"^4J",1,"^4O",true,"^4D",["^14",["^4E",["^14",[["^4U"]]]]],"^6","Test if the given warning-type is enabled."],"^K",["^ ","^4C",null,"^5",["^ ","^7","cljs/analyzer/api.cljc","^8",196,"^9",7,"^:",196,"^;",17,"^4D",["^14",["^4E",["^14",[["^15","^4F"],["^4G","^15","^4F"]]]]],"^6","Given a namespace and a symbol return the corresponding var analysis map.\n  Analagous to clojure.core/ns-resolve but returns var analysis map not Var.","^4H",["^ ","^4I",false,"^4J",3,"^4K",["^14",[["^15","^4F"],["^4G","^15","^4F"]]],"^4D",["^14",[["^15","^4F"],["^4G","^15","^4F"]]],"^4L",["^14",[null,null]]]],"^O","~$cljs.analyzer.api/ns-resolve","^4I",false,"^7","cljs/analyzer/api.cljc","^;",17,"^4H",["^ ","^4I",false,"^4J",3,"^4K",["^14",[["^15","^4F"],["^4G","^15","^4F"]]],"^4D",["^14",[["^15","^4F"],["^4G","^15","^4F"]]],"^4L",["^14",[null,null]]],"^4K",["^14",[["^15","^4F"],["^4G","^15","^4F"]]],"^4N",null,"^4L",["^14",[null,null]],"^9",1,"^8",196,"^:",196,"^4J",3,"^4O",true,"^4D",["^14",[["^15","^4F"],["^4G","^15","^4F"]]],"^6","Given a namespace and a symbol return the corresponding var analysis map.\n  Analagous to clojure.core/ns-resolve but returns var analysis map not Var."],"~$empty-state",["^ ","^4C",null,"^5",["^ ","^7","cljs/analyzer/api.cljc","^8",20,"^9",7,"^:",20,"^;",18,"^4D",["^14",["^4E",["^14",[[]]]]],"^6","Creates an empty compilation state Atom<Map>."],"^O","~$cljs.analyzer.api/empty-state","^4I",false,"^7","cljs/analyzer/api.cljc","^;",18,"^4K",["^14",[[]]],"^4N",null,"^4L",["^14",[null,null]],"^9",1,"^8",20,"^:",20,"^4J",0,"^4O",true,"^4D",["^14",["^4E",["^14",[[]]]]],"^6","Creates an empty compilation state Atom<Map>."],"~$empty-env",["^ ","^4C",null,"^5",["^ ","^7","cljs/analyzer/api.cljc","^8",31,"^9",7,"^:",31,"^;",16,"^4D",["^14",["^4E",["^14",[[]]]]],"^6","Creates an empty analysis environment."],"^O","~$cljs.analyzer.api/empty-env","^4I",false,"^7","cljs/analyzer/api.cljc","^;",16,"^4K",["^14",[[]]],"^4N",null,"^4L",["^14",[null,null]],"^9",1,"^8",31,"^:",31,"^4J",0,"^4O",true,"^4D",["^14",["^4E",["^14",[[]]]]],"^6","Creates an empty analysis environment."],"~$default-warning-handler",["^ ","^4C",null,"^5",["^ ","^7","cljs/analyzer/api.cljc","^8",48,"^9",7,"^:",48,"^;",30,"^4D",["^14",["^4E",["^14",[["^4U","^V","~$extra"]]]]],"^6","The default warning handler.\n\n   Outputs the warning messages to *err*."],"^O","~$cljs.analyzer.api/default-warning-handler","^4I",false,"^7","cljs/analyzer/api.cljc","^;",30,"^4K",["^14",[["^4U","^V","^51"]]],"^4N",null,"^4L",["^14",[null,null]],"^9",1,"^8",48,"^:",48,"^4J",3,"^4O",true,"^4D",["^14",["^4E",["^14",[["^4U","^V","^51"]]]]],"^6","The default warning handler.\n\n   Outputs the warning messages to *err*."],"^L",["^ ","^4C",null,"^5",["^ ","^7","cljs/analyzer/api.cljc","^8",172,"^9",7,"^:",172,"^;",17,"^4D",["^14",["^4E",["^14",[["^15"],["^4G","^15"]]]]],"^6","Given a namespace return all the var analysis maps. Analagous to\n  clojure.core/ns-interns but returns var analysis maps not vars.","^4H",["^ ","^4I",false,"^4J",2,"^4K",["^14",[["^15"],["^4G","^15"]]],"^4D",["^14",[["^15"],["^4G","^15"]]],"^4L",["^14",[null,null]]]],"^O","~$cljs.analyzer.api/ns-interns","^4I",false,"^7","cljs/analyzer/api.cljc","^;",17,"^4H",["^ ","^4I",false,"^4J",2,"^4K",["^14",[["^15"],["^4G","^15"]]],"^4D",["^14",[["^15"],["^4G","^15"]]],"^4L",["^14",[null,null]]],"^4K",["^14",[["^15"],["^4G","^15"]]],"^4N",null,"^4L",["^14",[null,null]],"^9",1,"^8",172,"^:",172,"^4J",2,"^4O",true,"^4D",["^14",[["^15"],["^4G","^15"]]],"^6","Given a namespace return all the var analysis maps. Analagous to\n  clojure.core/ns-interns but returns var analysis maps not vars."],"^M",["^ ","^4C",null,"^5",["^ ","^7","cljs/analyzer/api.cljc","^8",155,"^9",7,"^:",155,"^;",13,"^4D",["^14",["^4E",["^14",[[],["^4G"]]]]],"^6","Return all namespaces. Analagous to clojure.core/all-ns but\n  returns symbols identifying namespaces not Namespace instances.","^4H",["^ ","^4I",false,"^4J",1,"^4K",["^14",[[],["^4G"]]],"^4D",["^14",[[],["^4G"]]],"^4L",["^14",[null,null]]]],"^O","~$cljs.analyzer.api/all-ns","^4I",false,"^7","cljs/analyzer/api.cljc","^;",13,"^4H",["^ ","^4I",false,"^4J",1,"^4K",["^14",[[],["^4G"]]],"^4D",["^14",[[],["^4G"]]],"^4L",["^14",[null,null]]],"^4K",["^14",[[],["^4G"]]],"^4N",null,"^4L",["^14",[null,null]],"^9",1,"^8",155,"^:",155,"^4J",1,"^4O",true,"^4D",["^14",[[],["^4G"]]],"^6","Return all namespaces. Analagous to clojure.core/all-ns but\n  returns symbols identifying namespaces not Namespace instances."],"^N",["^ ","^4C",null,"^5",["^ ","^7","cljs/analyzer/api.cljc","^8",144,"^9",7,"^:",144,"^;",14,"^4D",["^14",["^4E",["^14",[["^V","^4F"]]]]],"^6","Given an analysis environment resolve a var. Analogous to\n   clojure.core/resolve"],"^O","~$cljs.analyzer.api/resolve","^4I",false,"^7","cljs/analyzer/api.cljc","^;",14,"^4K",["^14",[["^V","^4F"]]],"^4N",null,"^4L",["^14",[null,null]],"^9",1,"^8",144,"^:",144,"^4J",2,"^4O",true,"^4D",["^14",["^4E",["^14",[["^V","^4F"]]]]],"^6","Given an analysis environment resolve a var. Analogous to\n   clojure.core/resolve"],"~$get-js-index",["^ ","^4C",null,"^5",["^ ","^7","cljs/analyzer/api.cljc","^8",61,"^9",7,"^:",61,"^;",19,"^4D",["^14",["^4E",["^14",[[],["^4G"]]]]],"^6","Return the currently computed Google Closure js dependency index from the\n  compiler state.","^4H",["^ ","^4I",false,"^4J",1,"^4K",["^14",[[],["^4G"]]],"^4D",["^14",[[],["^4G"]]],"^4L",["^14",[null,null]]]],"^O","~$cljs.analyzer.api/get-js-index","^4I",false,"^7","cljs/analyzer/api.cljc","^;",19,"^4H",["^ ","^4I",false,"^4J",1,"^4K",["^14",[[],["^4G"]]],"^4D",["^14",[[],["^4G"]]],"^4L",["^14",[null,null]]],"^4K",["^14",[[],["^4G"]]],"^4N",null,"^4L",["^14",[null,null]],"^9",1,"^8",61,"^:",61,"^4J",1,"^4O",true,"^4D",["^14",[[],["^4G"]]],"^6","Return the currently computed Google Closure js dependency index from the\n  compiler state."]],"^12",["^ ","^Y","^Y"],"~:cljs.analyzer/constants",["^ ","^[",["^G",["~:cljs.analyzer/namespaces","~:private","~:macros","~:js-dependency-index","^4B","~:options"]],"~:order",["^5=","^5<","^59","^5;","^4B","^5:"]],"^19",["^ ","^10",["^G",[]]],"^1:",["^ "],"^1;",["^Z","^Y","^U","^W"]],"^R","^P","~:ns-specs",["^ "],"~:ns-speced-vars",[],"~:compiler-options",["^3H",[["^5A","~:static-fns"],true,["^5A","~:elide-asserts"],false,["^5A","~:optimize-constants"],null,["^5A","~:external-config"],null,["^5A","~:tooling-config"],null,["^5A","~:emit-constants"],null,["^5A","~:infer-externs"],true,["^5A","^1B"],null,["~:js-options","~:js-provider"],"~:shadow",["~:mode"],"~:dev",["^5A","~:fn-invoke-direct"],null,["^5A","^1D"],"/dev/null"]]]