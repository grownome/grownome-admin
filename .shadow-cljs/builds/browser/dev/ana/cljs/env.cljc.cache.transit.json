["^ ","~:output",["^ ","~:js","goog.provide('cljs.env');\r\ngoog.require('cljs.core');\r\ncljs.env._STAR_compiler_STAR_ = null;\r\ncljs.env.default_compiler_env_STAR_ = (function cljs$env$default_compiler_env_STAR_(options){\r\nreturn cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(\"cljs.analyzer\",\"namespaces\",\"cljs.analyzer/namespaces\",-260788927),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Symbol(null,\"cljs.user\",\"cljs.user\",877795071,null),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"name\",\"name\",1843675177),new cljs.core.Symbol(null,\"cljs.user\",\"cljs.user\",877795071,null)], null)], null),new cljs.core.Keyword(\"cljs.analyzer\",\"constant-table\",\"cljs.analyzer/constant-table\",-114131889),cljs.core.PersistentArrayMap.EMPTY,new cljs.core.Keyword(\"cljs.analyzer\",\"data-readers\",\"cljs.analyzer/data-readers\",1778544933),cljs.core.PersistentArrayMap.EMPTY,new cljs.core.Keyword(\"cljs.analyzer\",\"externs\",\"cljs.analyzer/externs\",893359239),null,new cljs.core.Keyword(null,\"options\",\"options\",99638489),options], null)], 0));\r\n});\r\ncljs.env.default_compiler_env = (function cljs$env$default_compiler_env(var_args){\r\nvar G__22176 = arguments.length;\r\nswitch (G__22176) {\r\ncase 0:\r\nreturn cljs.env.default_compiler_env.cljs$core$IFn$_invoke$arity$0();\r\n\r\nbreak;\r\ncase 1:\r\nreturn cljs.env.default_compiler_env.cljs$core$IFn$_invoke$arity$1((arguments[(0)]));\r\n\r\nbreak;\r\ndefault:\r\nthrow (new Error([\"Invalid arity: \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join('')));\r\n\r\n}\r\n});\r\n\r\ncljs.env.default_compiler_env.cljs$core$IFn$_invoke$arity$0 = (function (){\r\nreturn cljs.env.default_compiler_env.cljs$core$IFn$_invoke$arity$1(cljs.core.PersistentArrayMap.EMPTY);\r\n});\r\n\r\ncljs.env.default_compiler_env.cljs$core$IFn$_invoke$arity$1 = (function (options){\r\nreturn cljs.core.atom.cljs$core$IFn$_invoke$arity$1(cljs.env.default_compiler_env_STAR_(options));\r\n});\r\n\r\ncljs.env.default_compiler_env.cljs$lang$maxFixedArity = 1;\r\n\r\n","~:ns-info",["^ ","~:rename-macros",null,"~:renames",["^ "],"~:meta",["^ ","~:file","cljs/env.cljc","~:line",11,"~:column",3,"~:end-line",11,"~:end-column",11,"~:doc","A namespace that exists solely to provide a place for \"compiler\"\nstate that is accessed/maintained by many different components."],"~:ns-aliases",["^ ","~$clojure.pprint","~$cljs.pprint","~$clojure.repl","~$cljs.repl","~$clojure.spec.alpha","~$cljs.spec.alpha","~$clojure.spec.gen.alpha","~$cljs.spec.gen.alpha"],"~:use-macros",null,"~:excludes",["~#set",["~$ensure"]],"~:name","~$cljs.env","~:op","~:ns","~:imports",null,"~:requires",["^ ","~$cljs.core","^O","~$goog","^P"],"~:seen",["^G",[]],"~:uses",null,"~:require-macros",["^ ","^O","^O"],"~:form",["~#list",["~$ns","^J",["^U",["~:refer-clojure","~:exclude",["^H"]]]]],"~:js-deps",["^ "],"~:deps",["^P","^O"]],"^L","^J","~:resource-id",["~:shadow.build.classpath/resource","cljs/env.cljc"],"~:compiled-at",1533407590720,"~:resource-name","cljs/env.cljc","~:warnings",[],"~:source",";   Copyright (c) Rich Hickey. All rights reserved.\n;   The use and distribution terms for this software are covered by the\n;   Eclipse Public License 1.0 (http://opensource.org/licenses/eclipse-1.0.php)\n;   which can be found in the file epl-v10.html at the root of this distribution.\n;   By using this software in any fashion, you are agreeing to be bound by\n;   the terms of this license.\n;   You must not remove this notice, or any other, from this software.\n\n(ns ^{:doc \"A namespace that exists solely to provide a place for \\\"compiler\\\"\nstate that is accessed/maintained by many different components.\"}\n  cljs.env\n  #?(:clj (:require [cljs.js-deps :as deps]\n                    [cljs.externs :as externs]))\n  (:refer-clojure :exclude [ensure]))\n\n;; bit of a misnomer, but: an atom containing a map that serves as the bag of\n;; state for the compiler, writ large (including analyzer, emitter, and\n;; optimization stages). Each namespace has its own local var, to accommodate\n;; multiple (lower-level) entry points.  Any state needed by the compiler across\n;; multiple applications should be put into this map/atom.  Aside from\n;; unfortunate current implementation details (e.g. depending on filesystem\n;; state for certain things), the compiler should be idempotent with regard to\n;; the environment passed to any entry point.\n;;\n;; Known slots in the compiler-env map:\n;;\n;; * :options - the [options] map argument, provided to this fn (defaults to {})\n;; * :js-dependency-index - result from calling cljs.js-deps/js-dependency-index\n;;   with [options]\n;; * :cljs.analyzer/constant-table - map of (currently only keyword) constant\n;;   values to fixed ids\n;; * :cljs.analyzer/namespaces - map of symbols to \"namespace\" maps\n;; * :cljs.analyzer/data-readers - literal map of symbols, where the first\n;;   symbol in each pair is a tag that will be recognized by the reader. The\n;;   second symbol in the pair is the fully-qualified name of a Var which will\n;;   be invoked by the reader to parse the form following the tag.\n;; * :cljs.compiler/compiled-cljs - cache of intermediate compilation results\n;;   that speeds incremental builds in conjunction with source map generation\n;; * :cljs.closure/compiled-cljs - cache from js file path to map of\n;;   {:file .. :provides .. :requires ..}\n;;\n;; Note that this var is functionally private to the compiler, and contains\n;; implementation-dependent data.\n(def ^:dynamic *compiler* nil)\n\n(defn default-compiler-env* [options]\n  (merge\n    {:cljs.analyzer/namespaces {'cljs.user {:name 'cljs.user}}\n     :cljs.analyzer/constant-table {}\n     :cljs.analyzer/data-readers {}\n     :cljs.analyzer/externs #?(:clj  (when (:infer-externs options)\n                                       (externs/externs-map (:externs-sources options)))\n                               :cljs nil)\n     :options options}\n    #?@(:clj [(when (= (:target options) :nodejs)\n                {:node-module-index deps/native-node-modules})\n              {:js-dependency-index (deps/js-dependency-index options)}])))\n\n(defn default-compiler-env\n  ([] (default-compiler-env {}))\n  ([options]\n   (atom (default-compiler-env* options))))\n\n#?(:clj\n   (defmacro with-compiler-env\n     \"Evaluates [body] with [env] bound as the value of the `*compiler*` var in\n   this namespace.\"\n     [env & body]\n     `(let [env# ~env\n            env# (cond\n                   (map? env#) (atom env#)\n                   (and (instance? clojure.lang.Atom env#)\n                        (map? @env#)) env#\n                   :default (throw (IllegalArgumentException.\n                                     (str \"Compiler environment must be a map or atom containing a map, not \"\n                                       (class env#)))))]\n        (binding [*compiler* env#] ~@body))))\n\n#?(:clj\n   (defmacro ensure\n     [& body]\n     `(let [val# *compiler*]\n        (if (nil? val#)\n          (push-thread-bindings\n            (hash-map (var *compiler*) (default-compiler-env))))\n        (try\n          ~@body\n          (finally\n            (if (nil? val#)\n              (pop-thread-bindings)))))))\n","~:reader-features",["^G",["~:cljs"]],"~:source-map",["^ ","~i43",["^ ","~i0",[["^ ","~:gcol",0,"~:gline",2],["^ ","^19",32,"^1:",2]],"~i15",[["^ ","^19",0,"^1:",2,"^I","cljs.env/*compiler*"]]],"~i45",["^ ","~i0",[["^ ","^19",0,"^1:",3],["^ ","^19",38,"^1:",3],["^ ","^19",0,"^1:",4]],"~i6",[["^ ","^19",0,"^1:",3,"^I","cljs.env/default-compiler-env*"]],"~i29",[["^ ","^19",84,"^1:",3,"^I","options"]]],"~i46",["^ ","~i2",[["^ ","^19",0,"^1:",4],["^ ","^19",110,"^1:",4],["^ ","^19",153,"^1:",4],["^ ","^19",243,"^1:",4],["^ ","^19",286,"^1:",4],["^ ","^19",352,"^1:",4],["^ ","^19",395,"^1:",4],["^ ","^19",448,"^1:",4],["^ ","^19",530,"^1:",4],["^ ","^19",628,"^1:",4],["^ ","^19",663,"^1:",4],["^ ","^19",757,"^1:",4],["^ ","^19",792,"^1:",4],["^ ","^19",875,"^1:",4],["^ ","^19",880,"^1:",4]],"~i3",[["^ ","^19",7,"^1:",4,"^I","cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic"]]],"~i53",["^ ","~i14",[["^ ","^19",937,"^1:",4,"^I","options"]]],"~i58",["^ ","~i0",[["^ ","^19",0,"^1:",6],["^ ","^19",0,"^1:",6],["^ ","^19",32,"^1:",6],["^ ","^19",72,"^1:",6,"^I","var_args"],["^ ","^19",0,"^1:",7],["^ ","^19",0,"^1:",7],["^ ","^19",4,"^1:",7,"^I","G__22176"],["^ ","^19",15,"^1:",7],["^ ","^19",15,"^1:",7],["^ ","^19",0,"^1:",8],["^ ","^19",0,"^1:",8],["^ ","^19",8,"^1:",8,"^I","G__22176"],["^ ","^19",5,"^1:",9],["^ ","^19",0,"^1:",10],["^ ","^19",7,"^1:",10,"^I","cljs.env/default-compiler-env"],["^ ","^19",5,"^1:",13],["^ ","^19",0,"^1:",14],["^ ","^19",7,"^1:",14,"^I","cljs.env/default-compiler-env"],["^ ","^19",67,"^1:",14],["^ ","^19",68,"^1:",14],["^ ","^19",78,"^1:",14],["^ ","^19",0,"^1:",18],["^ ","^19",6,"^1:",18],["^ ","^19",11,"^1:",18,"^I","js/Error"],["^ ","^19",17,"^1:",18],["^ ","^19",18,"^1:",18],["^ ","^19",80,"^1:",18],["^ ","^19",80,"^1:",18],["^ ","^19",0,"^1:",23],["^ ","^19",0,"^1:",23],["^ ","^19",62,"^1:",23],["^ ","^19",0,"^1:",24],["^ ","^19",0,"^1:",27],["^ ","^19",0,"^1:",27],["^ ","^19",62,"^1:",27],["^ ","^19",0,"^1:",28],["^ ","^19",0,"^1:",31],["^ ","^19",0,"^1:",31],["^ ","^19",56,"^1:",31],["^ ","^19",0,"^1:",33]],"~i6",[["^ ","^19",0,"^1:",6,"^I","cljs.env/default-compiler-env"],["^ ","^19",0,"^1:",23,"^I","cljs.env/default-compiler-env"],["^ ","^19",0,"^1:",27,"^I","cljs.env/default-compiler-env"],["^ ","^19",0,"^1:",31,"^I","cljs.env/default-compiler-env"]]],"~i59",["^ ","~i6",[["^ ","^19",0,"^1:",24],["^ ","^19",67,"^1:",24]],"~i7",[["^ ","^19",7,"^1:",24,"^I","cljs.env.default_compiler_env.cljs$core$IFn$_invoke$arity$1"]]],"~i60",["^ ","~i4",[["^ ","^19",73,"^1:",27,"^I","options"]]],"~i61",["^ ","~i3",[["^ ","^19",0,"^1:",28]],"~i4",[["^ ","^19",7,"^1:",28,"^I","cljs.core.atom.cljs$core$IFn$_invoke$arity$1"]],"~i9",[["^ ","^19",52,"^1:",28]],"~i10",[["^ ","^19",52,"^1:",28,"^I","cljs.env/default-compiler-env*"]],"~i32",[["^ ","^19",88,"^1:",28,"^I","options"]]]],"~:cljc",true],"~:cache-keys",["~#cmap",[["~:macro","^O"],[1532292597000],["^10","goog/math/math.js"],[1531925801810,"^P","~$goog.array","~$goog.asserts"],["^10","cljs/env.cljc"],[1532292597383,"^P","^O"],["^10","goog/array/array.js"],[1531925801810,"^P","^1L"],["^10","goog/debug/error.js"],[1531925801810,"^P"],["^10","goog/dom/nodetype.js"],[1531925801810,"^P"],["^10","goog/object/object.js"],[1531925801810,"^P"],"~:SHADOW-TIMESTAMP",[1533404981000,1532292597000],["^10","goog/math/long.js"],[1531925801810,"^P","^1L","~$goog.reflect"],["^10","goog/functions/functions.js"],[1531925801810,"^P"],["^10","goog/structs/map.js"],[1531925801810,"^P","~$goog.iter.Iterator","~$goog.iter.StopIteration","~$goog.object"],["^10","goog/asserts/asserts.js"],[1531925801810,"^P","~$goog.debug.Error","~$goog.dom.NodeType","~$goog.string"],["^10","goog/uri/uri.js"],[1531925801810,"^P","^1K","^1L","^1T","~$goog.structs","~$goog.structs.Map","~$goog.uri.utils","~$goog.uri.utils.ComponentIndex","~$goog.uri.utils.StandardQueryParam"],["^10","goog/base.js"],[1531925801810],["^10","goog/structs/structs.js"],[1531925801810,"^P","^1K","^1Q"],["^10","goog/string/string.js"],[1531925801810,"^P"],["^10","goog/reflect/reflect.js"],[1531925801810,"^P"],["^10","goog/string/stringbuffer.js"],[1531925801810,"^P"],["^10","goog/iter/iter.js"],[1531925801810,"^P","^1K","^1L","~$goog.functions","~$goog.math"],["^10","cljs/core.cljs"],[1532292597383,"~$goog.math.Long","~$goog.math.Integer","^1T","^1Q","^1K","~$goog.Uri","~$goog.string.StringBuffer"],["^10","goog/math/integer.js"],[1531925801810,"^P"],["^10","goog/uri/utils.js"],[1531925801810,"^P","^1K","^1L","^1T"]]],"~:analyzer",["^ ","^3",null,"^4",["^ "],"^5",["^ ","^6","cljs/env.cljc","^7",11,"^8",3,"^9",11,"^:",11,"^;","A namespace that exists solely to provide a place for \"compiler\"\nstate that is accessed/maintained by many different components."],"^<",["^ ","^=","^>","^?","^@","^A","^B","^C","^D"],"^E",null,"^F",["^G",["^H"]],"^I","^J","^M",null,"^N",["^ ","^O","^O","^P","^P"],"^Q",["^G",[]],"~:shadow/js-access-global",["^G",["Error"]],"^R",null,"~:defs",["^ ","~$*compiler*",["^ ","^I","~$cljs.env/*compiler*","^6","cljs/env.cljc","^7",44,"^8",1,"^9",44,"^:",26,"~:dynamic",true,"^5",["^ ","^6","cljs/env.cljc","^7",44,"^8",16,"^9",44,"^:",26,"^29",true],"~:tag","~$clj-nil"],"~$default-compiler-env*",["^ ","~:protocol-inline",null,"^5",["^ ","^6","cljs/env.cljc","^7",46,"^8",7,"^9",46,"^:",28,"~:arglists",["^U",["~$quote",["^U",[["~$options"]]]]]],"^I","~$cljs.env/default-compiler-env*","~:variadic",false,"^6","cljs/env.cljc","^:",28,"~:method-params",["^U",[["^2@"]]],"~:protocol-impl",null,"~:arglists-meta",["^U",[null,null]],"^8",1,"^7",46,"^9",46,"~:max-fixed-arity",1,"~:fn-var",true,"^2>",["^U",["^2?",["^U",[["^2@"]]]]]],"~$default-compiler-env",["^ ","^2=",null,"^5",["^ ","^6","cljs/env.cljc","^7",59,"^8",7,"^9",59,"^:",27,"^2>",["^U",["^2?",["^U",[[],["^2@"]]]]],"~:top-fn",["^ ","^2B",false,"^2F",1,"^2C",["^U",[[],["^2@"]]],"^2>",["^U",[[],["^2@"]]],"^2E",["^U",[null,null]]]],"^I","~$cljs.env/default-compiler-env","^2B",false,"^6","cljs/env.cljc","^:",27,"^2I",["^ ","^2B",false,"^2F",1,"^2C",["^U",[[],["^2@"]]],"^2>",["^U",[[],["^2@"]]],"^2E",["^U",[null,null]]],"^2C",["^U",[[],["^2@"]]],"^2D",null,"^2E",["^U",[null,null]],"^8",1,"^7",59,"^9",59,"^2F",1,"^2G",true,"^2>",["^U",[[],["^2@"]]]]],"^S",["^ ","^O","^O"],"~:cljs.analyzer/constants",["^ ","^Q",["^G",["~:cljs.analyzer/namespaces","~:cljs.analyzer/data-readers","~:cljs.analyzer/externs","^I","~:cljs.analyzer/constant-table","~:options","~$cljs.user"]],"~:order",["^2L","^2O","^2M","^2N","^2P","^2Q","^I"]],"^Y",["^ "],"^Z",["^P","^O"]],"^L","^J","~:ns-specs",["^ "],"~:ns-speced-vars",[],"~:compiler-options",["^1I",[["^2U","~:static-fns"],true,["^2U","~:elide-asserts"],false,["^2U","~:optimize-constants"],null,["^2U","~:external-config"],null,["^2U","~:tooling-config"],null,["^2U","~:emit-constants"],null,["^2U","~:infer-externs"],true,["^2U","^15"],null,["~:js-options","~:js-provider"],"~:shadow",["~:mode"],"~:dev",["^2U","~:fn-invoke-direct"],null,["^2U","^17"],"/dev/null"]]]