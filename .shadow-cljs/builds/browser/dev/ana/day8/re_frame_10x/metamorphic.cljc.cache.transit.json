["^ ","~:output",["^ ","~:js","goog.provide('day8.re_frame_10x.metamorphic');\r\ngoog.require('cljs.core');\r\n/**\r\n * Returns a transducer that filters for :id between beginning and ending. Inclusive on both ends.\r\n */\r\nday8.re_frame_10x.metamorphic.id_between_xf = (function day8$re_frame_10x$metamorphic$id_between_xf(beginning,ending){\r\nreturn cljs.core.filter.cljs$core$IFn$_invoke$arity$1((function (p1__13930_SHARP_){\r\nreturn (((beginning <= new cljs.core.Keyword(null,\"id\",\"id\",-1388402092).cljs$core$IFn$_invoke$arity$1(p1__13930_SHARP_))) && ((new cljs.core.Keyword(null,\"id\",\"id\",-1388402092).cljs$core$IFn$_invoke$arity$1(p1__13930_SHARP_) <= ending)));\r\n}));\r\n});\r\nday8.re_frame_10x.metamorphic.fsm_trigger_QMARK_ = (function day8$re_frame_10x$metamorphic$fsm_trigger_QMARK_(event){\r\nreturn cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(\"re-frame.router\",\"fsm-trigger\",\"re-frame.router/fsm-trigger\",1379787274),new cljs.core.Keyword(null,\"op-type\",\"op-type\",-1636141668).cljs$core$IFn$_invoke$arity$1(event));\r\n});\r\nday8.re_frame_10x.metamorphic.elapsed_time = (function day8$re_frame_10x$metamorphic$elapsed_time(ev1,ev2){\r\nvar start_of_epoch = new cljs.core.Keyword(null,\"start\",\"start\",-355208981).cljs$core$IFn$_invoke$arity$1(ev1);\r\nvar end_of_epoch = new cljs.core.Keyword(null,\"end\",\"end\",-268185958).cljs$core$IFn$_invoke$arity$1(ev2);\r\nif(((!((start_of_epoch == null))) && (!((end_of_epoch == null))))){\r\nreturn (end_of_epoch - start_of_epoch);\r\n} else {\r\nreturn null;\r\n}\r\n});\r\nday8.re_frame_10x.metamorphic.run_queue_QMARK_ = (function day8$re_frame_10x$metamorphic$run_queue_QMARK_(event){\r\nvar and__3938__auto__ = day8.re_frame_10x.metamorphic.fsm_trigger_QMARK_(event);\r\nif(cljs.core.truth_(and__3938__auto__)){\r\nreturn cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,\"operation\",\"operation\",-1267664310).cljs$core$IFn$_invoke$arity$1(event),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"scheduled\",\"scheduled\",553898551),new cljs.core.Keyword(null,\"run-queue\",\"run-queue\",-1701798027)], null));\r\n} else {\r\nreturn and__3938__auto__;\r\n}\r\n});\r\nday8.re_frame_10x.metamorphic.request_animation_frame_QMARK_ = (function day8$re_frame_10x$metamorphic$request_animation_frame_QMARK_(event){\r\nreturn cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,\"raf\",\"raf\",-1295410152),new cljs.core.Keyword(null,\"op-type\",\"op-type\",-1636141668).cljs$core$IFn$_invoke$arity$1(event));\r\n});\r\nday8.re_frame_10x.metamorphic.request_animation_frame_end_QMARK_ = (function day8$re_frame_10x$metamorphic$request_animation_frame_end_QMARK_(event){\r\nreturn cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,\"raf-end\",\"raf-end\",-220596864),new cljs.core.Keyword(null,\"op-type\",\"op-type\",-1636141668).cljs$core$IFn$_invoke$arity$1(event));\r\n});\r\nday8.re_frame_10x.metamorphic.summarise_event = (function day8$re_frame_10x$metamorphic$summarise_event(ev){\r\nreturn cljs.core.update.cljs$core$IFn$_invoke$arity$variadic(cljs.core.dissoc.cljs$core$IFn$_invoke$arity$variadic(ev,new cljs.core.Keyword(null,\"start\",\"start\",-355208981),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([new cljs.core.Keyword(null,\"duration\",\"duration\",1444101068),new cljs.core.Keyword(null,\"end\",\"end\",-268185958),new cljs.core.Keyword(null,\"child-of\",\"child-of\",-903376662)], 0)),new cljs.core.Keyword(null,\"tags\",\"tags\",1771418977),cljs.core.dissoc,new cljs.core.Keyword(null,\"app-db-before\",\"app-db-before\",-1442902645),new cljs.core.Keyword(null,\"app-db-after\",\"app-db-after\",1477492964),new cljs.core.Keyword(null,\"effects\",\"effects\",-282369292),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([new cljs.core.Keyword(null,\"coeffects\",\"coeffects\",497912985),new cljs.core.Keyword(null,\"interceptors\",\"interceptors\",-1546782951)], 0));\r\n});\r\nday8.re_frame_10x.metamorphic.summarise_match = (function day8$re_frame_10x$metamorphic$summarise_match(match){\r\nreturn cljs.core.map.cljs$core$IFn$_invoke$arity$2(day8.re_frame_10x.metamorphic.summarise_event,match);\r\n});\r\nday8.re_frame_10x.metamorphic.beginning_id = (function day8$re_frame_10x$metamorphic$beginning_id(match){\r\nreturn new cljs.core.Keyword(null,\"id\",\"id\",-1388402092).cljs$core$IFn$_invoke$arity$1(cljs.core.first(match));\r\n});\r\nday8.re_frame_10x.metamorphic.ending_id = (function day8$re_frame_10x$metamorphic$ending_id(match){\r\nreturn new cljs.core.Keyword(null,\"id\",\"id\",-1388402092).cljs$core$IFn$_invoke$arity$1(cljs.core.last(match));\r\n});\r\nday8.re_frame_10x.metamorphic.add_event_from_idle_QMARK_ = (function day8$re_frame_10x$metamorphic$add_event_from_idle_QMARK_(event){\r\nreturn ((cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(\"re-frame.router\",\"fsm-trigger\",\"re-frame.router/fsm-trigger\",1379787274),new cljs.core.Keyword(null,\"op-type\",\"op-type\",-1636141668).cljs$core$IFn$_invoke$arity$1(event))) && (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,\"operation\",\"operation\",-1267664310).cljs$core$IFn$_invoke$arity$1(event),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"idle\",\"idle\",-2007156861),new cljs.core.Keyword(null,\"add-event\",\"add-event\",938429088)], null))));\r\n});\r\nday8.re_frame_10x.metamorphic.subscription_QMARK_ = (function day8$re_frame_10x$metamorphic$subscription_QMARK_(trace){\r\nreturn ((cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(\"sub\",cljs.core.namespace(new cljs.core.Keyword(null,\"op-type\",\"op-type\",-1636141668).cljs$core$IFn$_invoke$arity$1(trace)))) && (cljs.core.not(cljs.core.get_in.cljs$core$IFn$_invoke$arity$2(trace,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"tags\",\"tags\",1771418977),new cljs.core.Keyword(null,\"cached?\",\"cached?\",86081880)], null)))));\r\n});\r\nday8.re_frame_10x.metamorphic.subscription_created_QMARK_ = (function day8$re_frame_10x$metamorphic$subscription_created_QMARK_(trace){\r\nreturn ((cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(\"sub\",\"create\",\"sub/create\",-1301317560),new cljs.core.Keyword(null,\"op-type\",\"op-type\",-1636141668).cljs$core$IFn$_invoke$arity$1(trace))) && (cljs.core.not(cljs.core.get_in.cljs$core$IFn$_invoke$arity$2(trace,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"tags\",\"tags\",1771418977),new cljs.core.Keyword(null,\"cached?\",\"cached?\",86081880)], null)))));\r\n});\r\nday8.re_frame_10x.metamorphic.subscription_re_run_QMARK_ = (function day8$re_frame_10x$metamorphic$subscription_re_run_QMARK_(trace){\r\nreturn cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(\"sub\",\"run\",\"sub/run\",-1821315581),new cljs.core.Keyword(null,\"op-type\",\"op-type\",-1636141668).cljs$core$IFn$_invoke$arity$1(trace));\r\n});\r\nday8.re_frame_10x.metamorphic.subscription_destroyed_QMARK_ = (function day8$re_frame_10x$metamorphic$subscription_destroyed_QMARK_(trace){\r\nreturn cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(\"sub\",\"dispose\",\"sub/dispose\",365440536),new cljs.core.Keyword(null,\"op-type\",\"op-type\",-1636141668).cljs$core$IFn$_invoke$arity$1(trace));\r\n});\r\nday8.re_frame_10x.metamorphic.subscription_not_run_QMARK_ = (function day8$re_frame_10x$metamorphic$subscription_not_run_QMARK_(trace){\r\nreturn false;\r\n});\r\n/**\r\n * Is this part of re-frame internals?\r\n */\r\nday8.re_frame_10x.metamorphic.low_level_re_frame_trace_QMARK_ = (function day8$re_frame_10x$metamorphic$low_level_re_frame_trace_QMARK_(trace){\r\nvar G__13972 = new cljs.core.Keyword(null,\"op-type\",\"op-type\",-1636141668).cljs$core$IFn$_invoke$arity$1(trace);\r\nvar G__13972__$1 = (((G__13972 instanceof cljs.core.Keyword))?G__13972.fqn:null);\r\nswitch (G__13972__$1) {\r\ncase \"re-frame.router/fsm-trigger\":\r\nreturn true;\r\n\r\nbreak;\r\ndefault:\r\nreturn false;\r\n\r\n}\r\n});\r\n/**\r\n * Is this part of reagent internals?\r\n */\r\nday8.re_frame_10x.metamorphic.low_level_reagent_trace_QMARK_ = (function day8$re_frame_10x$metamorphic$low_level_reagent_trace_QMARK_(trace){\r\nreturn cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,\"componentWillUnmount\",\"componentWillUnmount\",1573788814),new cljs.core.Keyword(null,\"op-type\",\"op-type\",-1636141668).cljs$core$IFn$_invoke$arity$1(trace));\r\n});\r\nday8.re_frame_10x.metamorphic.render_QMARK_ = (function day8$re_frame_10x$metamorphic$render_QMARK_(trace){\r\nreturn cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,\"render\",\"render\",-1408033454),new cljs.core.Keyword(null,\"op-type\",\"op-type\",-1636141668).cljs$core$IFn$_invoke$arity$1(trace));\r\n});\r\nday8.re_frame_10x.metamorphic.unchanged_l2_subscription_QMARK_ = (function day8$re_frame_10x$metamorphic$unchanged_l2_subscription_QMARK_(sub){\r\nvar and__3938__auto__ = cljs.core.get_in.cljs$core$IFn$_invoke$arity$2(sub,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(\"sub\",\"traits\",\"sub/traits\",1778340671),new cljs.core.Keyword(null,\"unchanged?\",\"unchanged?\",1212001763)], null));\r\nif(cljs.core.truth_(and__3938__auto__)){\r\nreturn ((cljs.core.not_any_QMARK_(((function (and__3938__auto__){\r\nreturn (function (p1__13980_SHARP_){\r\nreturn cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(\"sub\",\"dispose\",\"sub/dispose\",365440536),p1__13980_SHARP_);\r\n});})(and__3938__auto__))\r\n,new cljs.core.Keyword(null,\"order\",\"order\",-1254677256).cljs$core$IFn$_invoke$arity$1(sub))) && (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2((2),cljs.core.get.cljs$core$IFn$_invoke$arity$2(sub,new cljs.core.Keyword(null,\"layer\",\"layer\",-1601820589)))));\r\n} else {\r\nreturn and__3938__auto__;\r\n}\r\n});\r\n/**\r\n * Marks the end of event processing running.\r\n */\r\nday8.re_frame_10x.metamorphic.finish_run_QMARK_ = (function day8$re_frame_10x$metamorphic$finish_run_QMARK_(event){\r\nvar and__3938__auto__ = day8.re_frame_10x.metamorphic.fsm_trigger_QMARK_(event);\r\nif(cljs.core.truth_(and__3938__auto__)){\r\nreturn cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,\"operation\",\"operation\",-1267664310).cljs$core$IFn$_invoke$arity$1(event),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"running\",\"running\",1554969103),new cljs.core.Keyword(null,\"finish-run\",\"finish-run\",753148477)], null));\r\n} else {\r\nreturn and__3938__auto__;\r\n}\r\n});\r\nday8.re_frame_10x.metamorphic.event_run_QMARK_ = (function day8$re_frame_10x$metamorphic$event_run_QMARK_(event){\r\nreturn cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,\"event\",\"event\",301435442),new cljs.core.Keyword(null,\"op-type\",\"op-type\",-1636141668).cljs$core$IFn$_invoke$arity$1(event));\r\n});\r\nday8.re_frame_10x.metamorphic.event_handler_QMARK_ = (function day8$re_frame_10x$metamorphic$event_handler_QMARK_(trace){\r\nreturn cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(\"event\",\"handler\",\"event/handler\",-295903150),new cljs.core.Keyword(null,\"op-type\",\"op-type\",-1636141668).cljs$core$IFn$_invoke$arity$1(trace));\r\n});\r\nday8.re_frame_10x.metamorphic.event_dofx_QMARK_ = (function day8$re_frame_10x$metamorphic$event_dofx_QMARK_(trace){\r\nreturn cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(\"event\",\"do-fx\",\"event/do-fx\",1357330452),new cljs.core.Keyword(null,\"op-type\",\"op-type\",-1636141668).cljs$core$IFn$_invoke$arity$1(trace));\r\n});\r\n/**\r\n * Detects the start of a re-frame epoch\r\n * \r\n *   Normally an epoch would always start with the queue being run, but with a dispatch-sync, the event is run directly.\r\n */\r\nday8.re_frame_10x.metamorphic.start_of_epoch_QMARK_ = (function day8$re_frame_10x$metamorphic$start_of_epoch_QMARK_(event){\r\nvar or__3949__auto__ = day8.re_frame_10x.metamorphic.run_queue_QMARK_(event);\r\nif(cljs.core.truth_(or__3949__auto__)){\r\nreturn or__3949__auto__;\r\n} else {\r\nreturn day8.re_frame_10x.metamorphic.event_run_QMARK_(event);\r\n}\r\n});\r\n/**\r\n * Detects that a new epoch has started and that the previous one ended on the previous event.\r\n * \r\n *   If multiple events are dispatched while processing the first event, each one is considered its\r\n *   own epoch.\r\n */\r\nday8.re_frame_10x.metamorphic.start_of_epoch_and_prev_end_QMARK_ = (function day8$re_frame_10x$metamorphic$start_of_epoch_and_prev_end_QMARK_(event,state){\r\nvar or__3949__auto__ = day8.re_frame_10x.metamorphic.run_queue_QMARK_(event);\r\nif(cljs.core.truth_(or__3949__auto__)){\r\nreturn or__3949__auto__;\r\n} else {\r\nvar and__3938__auto__ = day8.re_frame_10x.metamorphic.event_run_QMARK_(event);\r\nif(cljs.core.truth_(and__3938__auto__)){\r\nreturn cljs.core.not(day8.re_frame_10x.metamorphic.run_queue_QMARK_(new cljs.core.Keyword(null,\"previous-event\",\"previous-event\",-726928509).cljs$core$IFn$_invoke$arity$1(state)));\r\n} else {\r\nreturn and__3938__auto__;\r\n}\r\n}\r\n});\r\nday8.re_frame_10x.metamorphic.quiescent_QMARK_ = (function day8$re_frame_10x$metamorphic$quiescent_QMARK_(event){\r\nreturn cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(\"reagent\",\"quiescent\",\"reagent/quiescent\",-16138681),new cljs.core.Keyword(null,\"op-type\",\"op-type\",-1636141668).cljs$core$IFn$_invoke$arity$1(event));\r\n});\r\nday8.re_frame_10x.metamorphic.initial_parse_state = new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null,\"current-match\",\"current-match\",-551498177),null,new cljs.core.Keyword(null,\"previous-event\",\"previous-event\",-726928509),null,new cljs.core.Keyword(null,\"partitions\",\"partitions\",602979514),cljs.core.PersistentVector.EMPTY], null);\r\nday8.re_frame_10x.metamorphic.initial_sub_state = new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null,\"last-matched-id\",\"last-matched-id\",1192489515),(0),new cljs.core.Keyword(null,\"pre-epoch-state\",\"pre-epoch-state\",834094164),cljs.core.PersistentArrayMap.EMPTY,new cljs.core.Keyword(null,\"reaction-state\",\"reaction-state\",958292039),cljs.core.PersistentArrayMap.EMPTY], null);\r\nday8.re_frame_10x.metamorphic.parse_traces = (function day8$re_frame_10x$metamorphic$parse_traces(parse_state,traces){\r\nreturn cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (state,event){\r\nvar current_match = new cljs.core.Keyword(null,\"current-match\",\"current-match\",-551498177).cljs$core$IFn$_invoke$arity$1(state);\r\nvar previous_event = new cljs.core.Keyword(null,\"previous-event\",\"previous-event\",-726928509).cljs$core$IFn$_invoke$arity$1(state);\r\nvar no_match_QMARK_ = (current_match == null);\r\nreturn cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(((no_match_QMARK_)?(cljs.core.truth_(day8.re_frame_10x.metamorphic.start_of_epoch_QMARK_(event))?cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(state,new cljs.core.Keyword(null,\"current-match\",\"current-match\",-551498177),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [event], null)):state):(cljs.core.truth_(day8.re_frame_10x.metamorphic.quiescent_QMARK_(event))?cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(cljs.core.update.cljs$core$IFn$_invoke$arity$4(state,new cljs.core.Keyword(null,\"partitions\",\"partitions\",602979514),cljs.core.conj,cljs.core.conj.cljs$core$IFn$_invoke$arity$2(current_match,event)),new cljs.core.Keyword(null,\"current-match\",\"current-match\",-551498177),null):(cljs.core.truth_(day8.re_frame_10x.metamorphic.start_of_epoch_and_prev_end_QMARK_(event,state))?cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(cljs.core.update.cljs$core$IFn$_invoke$arity$4(state,new cljs.core.Keyword(null,\"partitions\",\"partitions\",602979514),cljs.core.conj,cljs.core.conj.cljs$core$IFn$_invoke$arity$2(current_match,previous_event)),new cljs.core.Keyword(null,\"current-match\",\"current-match\",-551498177),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [event], null)):(cljs.core.truth_(day8.re_frame_10x.metamorphic.event_run_QMARK_(event))?cljs.core.update.cljs$core$IFn$_invoke$arity$4(state,new cljs.core.Keyword(null,\"current-match\",\"current-match\",-551498177),cljs.core.conj,event):state\r\n)))),new cljs.core.Keyword(null,\"previous-event\",\"previous-event\",-726928509),event);\r\n}),parse_state,traces);\r\n});\r\nday8.re_frame_10x.metamorphic.matched_event = (function day8$re_frame_10x$metamorphic$matched_event(match){\r\nreturn cljs.core.first(cljs.core.filter.cljs$core$IFn$_invoke$arity$2(day8.re_frame_10x.metamorphic.event_run_QMARK_,match));\r\n});\r\nday8.re_frame_10x.metamorphic.app_db_after = (function day8$re_frame_10x$metamorphic$app_db_after(event_trace){\r\nreturn cljs.core.get_in.cljs$core$IFn$_invoke$arity$2(event_trace,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"tags\",\"tags\",1771418977),new cljs.core.Keyword(null,\"app-db-after\",\"app-db-after\",1477492964)], null));\r\n});\r\nday8.re_frame_10x.metamorphic.app_db_before = (function day8$re_frame_10x$metamorphic$app_db_before(event_trace){\r\nreturn cljs.core.get_in.cljs$core$IFn$_invoke$arity$2(event_trace,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"tags\",\"tags\",1771418977),new cljs.core.Keyword(null,\"app-db-before\",\"app-db-before\",-1442902645)], null));\r\n});\r\n/**\r\n * Collect information about the subscription that we'd like\r\n *   to know, like its layer.\r\n */\r\nday8.re_frame_10x.metamorphic.subscription_info = (function day8$re_frame_10x$metamorphic$subscription_info(initial_state,filtered_traces,app_db_id){\r\nreturn cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (state,trace){\r\nreturn cljs.core.assoc_in(state,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"operation\",\"operation\",-1267664310).cljs$core$IFn$_invoke$arity$1(trace),new cljs.core.Keyword(null,\"layer\",\"layer\",-1601820589)], null),(cljs.core.truth_(cljs.core.some((function (p1__14013_SHARP_){\r\nreturn cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(app_db_id,p1__14013_SHARP_);\r\n}),cljs.core.get_in.cljs$core$IFn$_invoke$arity$2(trace,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"tags\",\"tags\",1771418977),new cljs.core.Keyword(null,\"input-signals\",\"input-signals\",563633497)], null))))?(2):(3)));\r\n}),initial_state,cljs.core.filter.cljs$core$IFn$_invoke$arity$2(day8.re_frame_10x.metamorphic.subscription_re_run_QMARK_,filtered_traces));\r\n});\r\n/**\r\n * Remove information about the subscription that is transient and specific to a single\r\n *   phase.\r\n */\r\nday8.re_frame_10x.metamorphic.reset_sub_state = (function day8$re_frame_10x$metamorphic$reset_sub_state(state){\r\nreturn cljs.core.into.cljs$core$IFn$_invoke$arity$3(cljs.core.PersistentArrayMap.EMPTY,cljs.core.comp.cljs$core$IFn$_invoke$arity$2(cljs.core.filter.cljs$core$IFn$_invoke$arity$1((function (me){\r\nif(cljs.core.truth_(new cljs.core.Keyword(null,\"disposed?\",\"disposed?\",1178302522).cljs$core$IFn$_invoke$arity$1(cljs.core.val(me)))){\r\nreturn null;\r\n} else {\r\nreturn me;\r\n}\r\n})),cljs.core.map.cljs$core$IFn$_invoke$arity$1((function (p__14017){\r\nvar vec__14018 = p__14017;\r\nvar k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__14018,(0),null);\r\nvar v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__14018,(1),null);\r\nreturn new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [k,cljs.core.dissoc.cljs$core$IFn$_invoke$arity$variadic(v,new cljs.core.Keyword(null,\"order\",\"order\",-1254677256),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([new cljs.core.Keyword(null,\"created?\",\"created?\",850508195),new cljs.core.Keyword(null,\"run?\",\"run?\",752622859),new cljs.core.Keyword(null,\"disposed?\",\"disposed?\",1178302522),new cljs.core.Keyword(null,\"previous-value\",\"previous-value\",-1638799677),new cljs.core.Keyword(\"sub\",\"traits\",\"sub/traits\",1778340671)], 0))], null);\r\n}))),state);\r\n});\r\nday8.re_frame_10x.metamorphic.process_sub_traces = (function day8$re_frame_10x$metamorphic$process_sub_traces(initial_state,traces){\r\nvar first_pass = cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (init_state,trace){\r\nvar tags = cljs.core.get.cljs$core$IFn$_invoke$arity$2(trace,new cljs.core.Keyword(null,\"tags\",\"tags\",1771418977));\r\nvar reaction_id = new cljs.core.Keyword(null,\"reaction\",\"reaction\",490869788).cljs$core$IFn$_invoke$arity$1(tags);\r\nvar state = cljs.core.assoc_in(cljs.core.update_in.cljs$core$IFn$_invoke$arity$4(init_state,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [reaction_id,new cljs.core.Keyword(null,\"order\",\"order\",-1254677256)], null),cljs.core.fnil.cljs$core$IFn$_invoke$arity$2(cljs.core.conj,cljs.core.PersistentVector.EMPTY),new cljs.core.Keyword(null,\"op-type\",\"op-type\",-1636141668).cljs$core$IFn$_invoke$arity$1(trace)),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [reaction_id,new cljs.core.Keyword(null,\"subscription\",\"subscription\",1949009182)], null),new cljs.core.Keyword(null,\"query-v\",\"query-v\",-1514170131).cljs$core$IFn$_invoke$arity$1(tags));\r\nvar new_state = (function (){var G__14022 = new cljs.core.Keyword(null,\"op-type\",\"op-type\",-1636141668).cljs$core$IFn$_invoke$arity$1(trace);\r\nvar G__14022__$1 = (((G__14022 instanceof cljs.core.Keyword))?G__14022.fqn:null);\r\nswitch (G__14022__$1) {\r\ncase \"sub/create\":\r\nreturn cljs.core.assoc_in(cljs.core.assoc_in(state,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [reaction_id,new cljs.core.Keyword(null,\"created?\",\"created?\",850508195)], null),true),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [reaction_id,new cljs.core.Keyword(null,\"subscription\",\"subscription\",1949009182)], null),new cljs.core.Keyword(null,\"query-v\",\"query-v\",-1514170131).cljs$core$IFn$_invoke$arity$1(tags));\r\n\r\nbreak;\r\ncase \"sub/run\":\r\nreturn cljs.core.update.cljs$core$IFn$_invoke$arity$3(state,reaction_id,((function (G__14022,G__14022__$1,tags,reaction_id,state){\r\nreturn (function (sub_state){\r\nreturn cljs.core.assoc.cljs$core$IFn$_invoke$arity$variadic(((cljs.core.contains_QMARK_(sub_state,new cljs.core.Keyword(null,\"value\",\"value\",305978217)))?cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(sub_state,new cljs.core.Keyword(null,\"previous-value\",\"previous-value\",-1638799677),new cljs.core.Keyword(null,\"value\",\"value\",305978217).cljs$core$IFn$_invoke$arity$1(sub_state)):sub_state),new cljs.core.Keyword(null,\"run?\",\"run?\",752622859),true,cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([new cljs.core.Keyword(null,\"value\",\"value\",305978217),new cljs.core.Keyword(null,\"value\",\"value\",305978217).cljs$core$IFn$_invoke$arity$1(tags)], 0));\r\n});})(G__14022,G__14022__$1,tags,reaction_id,state))\r\n);\r\n\r\nbreak;\r\ncase \"sub/dispose\":\r\nreturn cljs.core.assoc_in(state,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [reaction_id,new cljs.core.Keyword(null,\"disposed?\",\"disposed?\",1178302522)], null),true);\r\n\r\nbreak;\r\ndefault:\r\nthrow (new Error([\"No matching clause: \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(G__14022__$1)].join('')));\r\n\r\n}\r\n})();\r\nif(cljs.core.contains_QMARK_(cljs.core.get.cljs$core$IFn$_invoke$arity$2(new_state,reaction_id),new cljs.core.Keyword(null,\"subscription\",\"subscription\",1949009182))){\r\n} else {\r\nconsole.warn(trace,cljs.core.get.cljs$core$IFn$_invoke$arity$2(new_state,reaction_id));\r\n}\r\n\r\nreturn new_state;\r\n}),initial_state,traces);\r\nvar second_pass = cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(((function (first_pass){\r\nreturn (function (all_state,p__14026){\r\nvar vec__14029 = p__14026;\r\nvar sub_id = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__14029,(0),null);\r\nvar sub_state = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__14029,(1),null);\r\nif(((cljs.core.contains_QMARK_(sub_state,new cljs.core.Keyword(null,\"previous-value\",\"previous-value\",-1638799677))) && (cljs.core.contains_QMARK_(sub_state,new cljs.core.Keyword(null,\"value\",\"value\",305978217))) && (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,\"previous-value\",\"previous-value\",-1638799677).cljs$core$IFn$_invoke$arity$1(sub_state),new cljs.core.Keyword(null,\"value\",\"value\",305978217).cljs$core$IFn$_invoke$arity$1(sub_state))))){\r\nreturn cljs.core.assoc_in(all_state,new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [sub_id,new cljs.core.Keyword(\"sub\",\"traits\",\"sub/traits\",1778340671),new cljs.core.Keyword(null,\"unchanged?\",\"unchanged?\",1212001763)], null),true);\r\n} else {\r\nreturn all_state;\r\n}\r\n});})(first_pass))\r\n,first_pass,first_pass);\r\nreturn second_pass;\r\n});\r\n/**\r\n * Build up the state of re-frame's running subscriptions over each matched epoch.\r\n *   Returns initial state as first item in list\r\n */\r\nday8.re_frame_10x.metamorphic.subscription_match_state = (function day8$re_frame_10x$metamorphic$subscription_match_state(sub_state,filtered_traces,new_matches){\r\nreturn cljs.core.reductions.cljs$core$IFn$_invoke$arity$3((function (state,match){\r\nvar previous_id = new cljs.core.Keyword(null,\"last-matched-id\",\"last-matched-id\",1192489515).cljs$core$IFn$_invoke$arity$1(state);\r\nvar first_match_id = new cljs.core.Keyword(null,\"id\",\"id\",-1388402092).cljs$core$IFn$_invoke$arity$1(cljs.core.first(match));\r\nvar last_match_id = new cljs.core.Keyword(null,\"id\",\"id\",-1388402092).cljs$core$IFn$_invoke$arity$1(cljs.core.last(match));\r\nvar pre_epoch_traces = cljs.core.into.cljs$core$IFn$_invoke$arity$3(cljs.core.PersistentVector.EMPTY,cljs.core.comp.cljs$core$IFn$_invoke$arity$2(day8.re_frame_10x.metamorphic.id_between_xf((previous_id + (1)),(first_match_id - (1))),cljs.core.filter.cljs$core$IFn$_invoke$arity$1(day8.re_frame_10x.metamorphic.subscription_QMARK_)),filtered_traces);\r\nvar epoch_traces = cljs.core.into.cljs$core$IFn$_invoke$arity$3(cljs.core.PersistentVector.EMPTY,cljs.core.comp.cljs$core$IFn$_invoke$arity$2(day8.re_frame_10x.metamorphic.id_between_xf(first_match_id,last_match_id),cljs.core.filter.cljs$core$IFn$_invoke$arity$1(day8.re_frame_10x.metamorphic.subscription_QMARK_)),filtered_traces);\r\nvar reaction_state = new cljs.core.Keyword(null,\"reaction-state\",\"reaction-state\",958292039).cljs$core$IFn$_invoke$arity$1(state);\r\nvar pre_epoch_state = day8.re_frame_10x.metamorphic.process_sub_traces(day8.re_frame_10x.metamorphic.reset_sub_state(reaction_state),pre_epoch_traces);\r\nvar epoch_state = day8.re_frame_10x.metamorphic.process_sub_traces(day8.re_frame_10x.metamorphic.reset_sub_state(pre_epoch_state),epoch_traces);\r\nreturn new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null,\"pre-epoch-state\",\"pre-epoch-state\",834094164),pre_epoch_state,new cljs.core.Keyword(null,\"reaction-state\",\"reaction-state\",958292039),epoch_state,new cljs.core.Keyword(null,\"first-matched-id\",\"first-matched-id\",-1052882417),first_match_id,new cljs.core.Keyword(null,\"last-matched-id\",\"last-matched-id\",1192489515),last_match_id,new cljs.core.Keyword(null,\"previous-matched-id\",\"previous-matched-id\",888670192),previous_id], null);\r\n}),sub_state,new_matches);\r\n});\r\n","~:ns-info",["^ ","~:rename-macros",null,"~:renames",["^ "],"~:meta",["^ ","~:file","day8/re_frame_10x/metamorphic.cljc","~:line",1,"~:column",5,"~:end-line",1,"~:end-column",34],"~:ns-aliases",["^ ","~$clojure.pprint","~$cljs.pprint","~$clojure.repl","~$cljs.repl","~$clojure.spec.alpha","~$cljs.spec.alpha","~$clojure.spec.gen.alpha","~$cljs.spec.gen.alpha"],"~:use-macros",null,"~:excludes",["~#set",[]],"~:name","~$day8.re-frame-10x.metamorphic","~:op","~:ns","~:imports",null,"~:requires",["^ ","~$cljs.core","^M","~$goog","^N"],"~:seen",["^F",[]],"~:uses",null,"~:require-macros",["^ ","^M","^M"],"~:form",["~#list",["~$ns","^H"]],"~:js-deps",["^ "],"~:deps",["^N","^M"]],"^J","^H","~:resource-id",["~:shadow.build.classpath/resource","day8/re_frame_10x/metamorphic.cljc"],"~:compiled-at",1533407587537,"~:resource-name","day8/re_frame_10x/metamorphic.cljc","~:warnings",[],"~:source","(ns day8.re-frame-10x.metamorphic)\n\n(defn id-between-xf\n  ;; Copied here because I got undeclared Var warnings from figwheel when requiring a CLJC utils ns.\n  \"Returns a transducer that filters for :id between beginning and ending. Inclusive on both ends.\"\n  [beginning ending]\n  (filter #(<= beginning (:id %) ending)))\n\n;; What starts an epoch?\n\n;;; idle -> dispatch -> running\n;;; running -> dispatch -> handling new event\n\n;; What ends an epoch?\n\n;;; the start of a new epoch\n;;; a Reagent animation frame ending AND nothing else being scheduled\n\n;; Slight wrinkles\n\n;;; Any renders that run between epochs deserve their own epoch really.\n;;; Dispatch-sync's\n\n;;;\n\n;\n;(defn add-event-from-idle? [event history pattern-sequence pattern]\n;  #_(println @history event)\n;\n;  (and (= :re-frame.router/fsm-trigger (:op-type event))\n;       (= (:operation event)\n;          [:idle :add-event])))\n;\n;(defn event-run? [event history pattern-sequence pattern]\n;  (= :event (:op-type event)))\n;\n;(defn epoch-started? [event history pattern-sequence pattern]\n;  (or (add-event-from-idle? event history pattern-sequence pattern)\n;      (and (event-run? event history pattern-sequence pattern)\n;           (empty? @history))))\n;\n(defn fsm-trigger? [event]\n  (= :re-frame.router/fsm-trigger (:op-type event)))\n;\n;(defn redispatched-event? [event history pattern-sequence pattern]\n;  (and (fsm-trigger? event)\n;       (= (:operation event)\n;          [:running :add-event])))\n;\n;(defn router-scheduled? [event history pattern-sequence pattern]\n;  (and (fsm-trigger? event)\n;       (= (:operation event)\n;          [:running :finish-run])\n;       (= :running (get-in event [:tags :current-state]))\n;       (= :scheduled (get-in event [:tags :new-state]))))\n;\n;(defn router-finished? [event history pattern-sequence pattern]\n;  (and (fsm-trigger? event)\n;       (= (:operation event)\n;          [:running :finish-run])\n;       (= :running (get-in event [:tags :current-state]))\n;       (= :idle (get-in event [:tags :new-state]))))\n;\n;(defn quiescent? [event _ _ _]\n;  (= :reagent/quiescent (:op-type event)))\n;\n;(defn epoch-ended? [event history pattern-sequence pattern]\n;  (or (quiescent? event history pattern-sequence pattern)\n;      (epoch-started? event history pattern-sequence pattern)))\n;\n\n(defn elapsed-time [ev1 ev2]\n  (let [start-of-epoch (:start ev1)\n        end-of-epoch   (:end ev2)]\n    (when (and (some? start-of-epoch) (some? end-of-epoch))\n      (- end-of-epoch start-of-epoch))))\n\n(defn run-queue? [event]\n  (and (fsm-trigger? event)\n       (= (:operation event)\n          [:scheduled :run-queue])))\n\n(defn request-animation-frame? [event]\n  (= :raf (:op-type event)))\n\n(defn request-animation-frame-end? [event]\n  (= :raf-end (:op-type event)))\n\n(defn summarise-event [ev]\n  (-> ev\n      (dissoc :start :duration :end :child-of)\n      (update :tags dissoc :app-db-before :app-db-after :effects :coeffects :interceptors)))\n\n\n(defn summarise-match [match]\n  (map summarise-event match))\n;\n(defn beginning-id [match]\n  (:id (first match)))\n\n(defn ending-id [match]\n  (:id (last match)))\n;\n;(defn parse-traces-metam\n;  \"Returns a metamorphic runtime\"\n;  [traces]\n;  (let [runtime (-> (m/new-pattern-sequence \"simple traces\")\n;                    (m/begin \"new-epoch-started\" epoch-started?)\n;                    #_(m/followed-by \"run-queue\" run-queue? {:optional? true})\n;                    ;(m/followed-by \"event-run\" event-run?)\n;                    #_(m/followed-by \"router-finished\" router-finished?)\n;                    ;(m/followed-by \"raf\" request-animation-frame?)\n;                    ;(m/followed-by \"raf-end\" request-animation-frame-end?)\n;                    (m/followed-by \"epoch-ended\" epoch-ended?)\n;                    (rt/initialize-runtime))\n;        rt      (reduce rt/evaluate-event runtime traces)]\n;    #_(println \"Count\"\n;               (count (:matches rt))\n;               (map count (:matches rt)))\n;    #_(map summarise-match (:matches rt))\n;    rt))\n\n;;;;;;\n\n;; TODO: this needs to be included too as a starting point.\n(defn add-event-from-idle? [event]\n  (and (= :re-frame.router/fsm-trigger (:op-type event))\n       (= (:operation event)\n          [:idle :add-event])))\n\n(defn subscription? [trace]\n  (and (= \"sub\" (namespace (:op-type trace)))\n       ;; TODO: should we remove cached checks?\n       (not (get-in trace [:tags :cached?]))))\n\n(defn subscription-created? [trace]\n  (and (= :sub/create (:op-type trace))\n       (not (get-in trace [:tags :cached?]))))\n\n(defn subscription-re-run? [trace]\n  (= :sub/run (:op-type trace)))\n\n(defn subscription-destroyed? [trace]\n  (= :sub/dispose (:op-type trace)))\n\n(defn subscription-not-run? [trace]\n  false)\n\n(defn low-level-re-frame-trace?\n  \"Is this part of re-frame internals?\"\n  [trace]\n  (case (:op-type trace)\n    (:re-frame.router/fsm-trigger) true\n    false))\n\n(defn low-level-reagent-trace?\n  \"Is this part of reagent internals?\"\n  [trace]\n  (= :componentWillUnmount (:op-type trace)))\n\n(defn render? [trace]\n  (= :render (:op-type trace)))\n\n(defn unchanged-l2-subscription? [sub]\n  (and (get-in sub [:sub/traits :unchanged?])\n       (not-any? #(= :sub/dispose %) (:order sub))\n       (= 2 (get sub :layer))))\n\n\n(defn finish-run?\n  \"Marks the end of event processing running.\"\n  [event]\n  (and (fsm-trigger? event)\n       (= (:operation event)\n          [:running :finish-run])))\n\n(defn event-run? [event]\n  (= :event (:op-type event)))\n\n(defn event-handler? [trace]\n  (= :event/handler (:op-type trace)))\n\n(defn event-dofx? [trace]\n  (= :event/do-fx (:op-type trace)))\n\n(defn start-of-epoch?\n  \"Detects the start of a re-frame epoch\n\n  Normally an epoch would always start with the queue being run, but with a dispatch-sync, the event is run directly.\"\n  [event]\n  (or (run-queue? event)\n      (event-run? event)))\n\n(defn start-of-epoch-and-prev-end?\n  \"Detects that a new epoch has started and that the previous one ended on the previous event.\n\n  If multiple events are dispatched while processing the first event, each one is considered its\n  own epoch.\"\n  [event state]\n  (or (run-queue? event)\n      ;; An event ran, and the previous event was not\n      ;; a run-queue.\n      (and (event-run? event)\n           (not (run-queue? (:previous-event state))))))\n\n(defn quiescent? [event]\n  (= :reagent/quiescent (:op-type event)))\n\n(def initial-parse-state\n  {:current-match  nil\n   :previous-event nil\n   :partitions     []})\n\n(def initial-sub-state\n  {:last-matched-id 0\n   :pre-epoch-state {}\n   :reaction-state  {}})\n\n(defn parse-traces [parse-state traces]\n  (reduce\n    (fn [state event]\n      (let [current-match  (:current-match state)\n            previous-event (:previous-event state)\n            no-match?      (nil? current-match)]\n        (-> (cond\n\n              ;; No current match yet, check if this is the start of an epoch\n              no-match?\n              (if (start-of-epoch? event)\n                (assoc state :current-match [event])\n                state)\n\n              ;; We are in an epoch match, and reagent has gone to a quiescent state\n              (quiescent? event)\n              (-> state\n                  (update :partitions conj (conj current-match event))\n                  (assoc :current-match nil))\n\n              ;; We are in an epoch match, and we have started a new epoch\n              ;; The previously seen event was the last event of the old epoch,\n              ;; and we need to start a new one from this event.\n              (start-of-epoch-and-prev-end? event state)\n              (-> state\n                  (update :partitions conj (conj current-match previous-event))\n                  (assoc :current-match [event]))\n\n              (event-run? event)\n              (update state :current-match conj event)\n\n\n              :else\n              state\n              ;; Add a timeout/warning if a match goes on for more than a second?\n\n              )\n            (assoc :previous-event event))))\n    parse-state\n    traces))\n\n(defn matched-event [match]\n  (->> match\n       (filter event-run?)\n       (first)))\n\n(defn app-db-after [event-trace]\n  (get-in event-trace [:tags :app-db-after]))\n\n(defn app-db-before [event-trace]\n  (get-in event-trace [:tags :app-db-before]))\n\n(defn subscription-info\n  \"Collect information about the subscription that we'd like\n  to know, like its layer.\"\n  [initial-state filtered-traces app-db-id]\n  (->> filtered-traces\n       (filter subscription-re-run?)\n       (reduce (fn [state trace]\n                 ;; Can we take any shortcuts by assuming that a sub with\n                 ;; multiple input signals is a layer 3? I don't *think* so because\n                 ;; one of those input signals could be a naughty subscription to app-db\n                 ;; directly.\n                 ;; If we knew when subscription handlers were loaded/reloaded then\n                 ;; we could avoid doing most of this work, and only check the input\n                 ;; signals if we hadn't seen it before, or it had been reloaded.\n                 (assoc-in state\n                           [(:operation trace) :layer]\n                           ;; If any of the input signals are app-db, it is a layer 2 sub, else 3\n                           (if (some #(= app-db-id %) (get-in trace [:tags :input-signals]))\n                             2\n                             3)))\n               initial-state)))\n\n(defn reset-sub-state\n  \"Remove information about the subscription that is transient and specific to a single\n  phase.\"\n  [state]\n  (into {}\n        (comp\n          ;; Remove disposed subscriptions\n          (filter (fn [me] (when-not (:disposed? (val me)) me)))\n          ;; Remove transient state\n          (map (fn [[k v]]\n                 [k (dissoc v :order :created? :run? :disposed? :previous-value :sub/traits)])))\n        state))\n\n\n\n(defn process-sub-traces\n  [initial-state traces]\n  (let [first-pass  (reduce (fn [init-state trace]\n                              (let [tags        (get trace :tags)\n                                    reaction-id (:reaction tags)\n                                    state       (-> init-state\n                                                    (update-in [reaction-id :order] (fnil conj []) (:op-type trace))\n                                                    ;; In a perfect world we could provide this only in the :sub/create branch, but we have\n                                                    ;; zombie reactions roaming the DOM, so we re-add it on every trace in case a sub was\n                                                    ;; disposed of previously (and removed from the sub state).\n                                                    (assoc-in [reaction-id :subscription] (:query-v tags)))\n                                    new-state\n                                                (case (:op-type trace)\n                                                  :sub/create (-> state\n                                                                  (assoc-in [reaction-id :created?] true)\n                                                                  (assoc-in [reaction-id :subscription] (:query-v tags)))\n                                                  :sub/run (update state reaction-id (fn [sub-state]\n                                                                                       ;; TODO: should we keep track of subscriptions that have been disposed\n                                                                                       ;; so we can detect zombies?\n\n                                                                                       ;; TODO: this should only update once per phase, even if a sub runs multiple times\n                                                                                       (-> (if (contains? sub-state :value)\n                                                                                             (assoc sub-state :previous-value (:value sub-state))\n                                                                                             sub-state)\n                                                                                           (assoc :run? true\n                                                                                                  :value (:value tags)))))\n                                                  :sub/dispose (assoc-in state [reaction-id :disposed?] true))]\n                                (when-not (contains? (get new-state reaction-id) :subscription)\n                                  #?(:cljs (js/console.warn trace (get new-state reaction-id))))\n\n\n                                new-state))\n                            initial-state\n                            traces)\n        second-pass (reduce (fn [all-state [sub-id sub-state]]\n                              ;; TODO: integrate this into the first pass for efficiency\n                              (if (and (contains? sub-state :previous-value)\n                                       (contains? sub-state :value)\n                                       (= (:previous-value sub-state) (:value sub-state)))\n                                (assoc-in all-state [sub-id :sub/traits :unchanged?] true)\n                                all-state))\n                            first-pass\n                            first-pass)]\n    second-pass))\n\n(defn subscription-match-state\n  \"Build up the state of re-frame's running subscriptions over each matched epoch.\n  Returns initial state as first item in list\"\n  [sub-state filtered-traces new-matches]\n  ;; For each match that we process there are two phases:\n  ;; - Phase 1: Update and collect the state of the subscriptions that have trace between the last epoch\n  ;;   and the new epoch. These traces can be from hover state, local ratom events, figwheel re-renders\n  ;;   or rft resetting app-db. Most of the time these traces are noisy and not interesting, but we do\n  ;;   need to use them to maintain our subscription state. We also want to show them down below the main\n  ;;   subs, in case someone is wondering where they went. If there are no sub traces to process then\n  ;;   this phase doesn't run.\n  ;; - Phase 2: Update and collect the state of the subscription traces within an epoch. These subscription\n  ;;   traces are going to be changing because of app-db changes.\n  ;; We collect and present the state for both phases for consumption in the subs panel\n\n  ;; If you look closely at the state of the subscriptions, and the traces they derive from, you will\n  ;; come to a disturbing realisation: Disposed reactions are resurrected and continue to be run.\n  ;; This is tracked in https://github.com/reagent-project/reagent/pull/270.\n\n  ;#?(:cljs (js/console.log \"New matches?\" (not (empty? new-matches))))\n  (reductions (fn [state match]\n                (let [previous-id      (:last-matched-id state)\n                      first-match-id   (:id (first match))\n                      last-match-id    (:id (last match))\n                      pre-epoch-traces (into []\n                                             (comp\n                                               (id-between-xf (inc previous-id)\n                                                              (dec first-match-id))\n                                               (filter subscription?))\n                                             filtered-traces)\n                      epoch-traces     (into []\n                                             (comp\n                                               (id-between-xf first-match-id last-match-id)\n                                               (filter subscription?))\n                                             filtered-traces)\n                      reaction-state   (:reaction-state state)\n                      pre-epoch-state  (-> reaction-state\n                                           (reset-sub-state)\n                                           (process-sub-traces pre-epoch-traces))\n                      epoch-state      (-> pre-epoch-state\n                                           (reset-sub-state)\n                                           (process-sub-traces epoch-traces))]\n                  {:pre-epoch-state     pre-epoch-state\n                   :reaction-state      epoch-state\n                   :first-matched-id    first-match-id\n                   :last-matched-id     last-match-id\n                   :previous-matched-id previous-id}))\n              sub-state\n              new-matches))\n","~:reader-features",["^F",["~:cljs"]],"~:source-map",["^ ","~i2",["^ ","~i0",[["^ ","~:gcol",0,"~:gline",2],["^ ","^14",46,"^15",5],["^ ","^14",0,"^15",6]],"~i6",[["^ ","^14",0,"^15",5,"^G","day8.re-frame-10x.metamorphic/id-between-xf"]]],"~i5",["^ ","~i3",[["^ ","^14",100,"^15",5,"^G","beginning"]],"~i13",[["^ ","^14",110,"^15",5,"^G","ending"]]],"~i6",["^ ","~i2",[["^ ","^14",0,"^15",6],["^ ","^14",54,"^15",6],["^ ","^14",65,"^15",6,"^G","p1__13930#"],["^ ","^14",0,"^15",7]],"~i3",[["^ ","^14",7,"^15",6,"^G","cljs.core.filter.cljs$core$IFn$_invoke$arity$1"]],"~i11",[["^ ","^14",0,"^15",7],["^ ","^14",9,"^15",7],["^ ","^14",127,"^15",7]],"~i15",[["^ ","^14",10,"^15",7,"^G","beginning"]],"~i25",[["^ ","^14",23,"^15",7],["^ ","^14",23,"^15",7],["^ ","^14",103,"^15",7,"^G","p1__13930#"],["^ ","^14",128,"^15",7],["^ ","^14",128,"^15",7],["^ ","^14",208,"^15",7,"^G","p1__13930#"]],"~i33",[["^ ","^14",229,"^15",7,"^G","ending"]]],"~i41",["^ ","~i0",[["^ ","^14",0,"^15",10],["^ ","^14",51,"^15",10],["^ ","^14",0,"^15",11]],"~i6",[["^ ","^14",0,"^15",10,"^G","day8.re-frame-10x.metamorphic/fsm-trigger?"]],"~i20",[["^ ","^14",110,"^15",10,"^G","event"]]],"~i42",["^ ","~i2",[["^ ","^14",0,"^15",11],["^ ","^14",52,"^15",11]],"~i3",[["^ ","^14",7,"^15",11,"^G","cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2"]],"~i34",[["^ ","^14",148,"^15",11],["^ ","^14",148,"^15",11]],"~i44",[["^ ","^14",238,"^15",11,"^G","event"]]],"~i71",["^ ","~i0",[["^ ","^14",0,"^15",13],["^ ","^14",45,"^15",13],["^ ","^14",0,"^15",14]],"~i6",[["^ ","^14",0,"^15",13,"^G","day8.re-frame-10x.metamorphic/elapsed-time"]],"^1<",[["^ ","^14",98,"^15",13,"^G","ev1"]],"~i24",[["^ ","^14",102,"^15",13,"^G","ev2"]]],"~i72",["^ ","~i2",[["^ ","^14",0,"^15",14],["^ ","^14",0,"^15",16]],"~i8",[["^ ","^14",4,"^15",14,"^G","start-of-epoch"]],"~i23",[["^ ","^14",21,"^15",14],["^ ","^14",21,"^15",14]],"~i31",[["^ ","^14",106,"^15",14,"^G","ev1"]]],"~i73",["^ ","~i8",[["^ ","^14",4,"^15",15,"^G","end-of-epoch"]],"^1C",[["^ ","^14",19,"^15",15],["^ ","^14",19,"^15",15]],"~i29",[["^ ","^14",100,"^15",15,"^G","ev2"]]],"~i74",["^ ","~i4",[["^ ","^14",0,"^15",16],["^ ","^14",0,"^15",17],["^ ","^14",0,"^15",19]],"~i10",[["^ ","^14",3,"^15",16]],"^18",[["^ ","^14",5,"^15",16],["^ ","^14",7,"^15",16],["^ ","^14",26,"^15",16]],"~i22",[["^ ","^14",8,"^15",16,"^G","start-of-epoch"]],"~i38",[["^ ","^14",38,"^15",16],["^ ","^14",40,"^15",16],["^ ","^14",57,"^15",16]],"~i45",[["^ ","^14",41,"^15",16,"^G","end-of-epoch"]]],"~i75",["^ ","~i6",[["^ ","^14",0,"^15",17]],"~i9",[["^ ","^14",8,"^15",17,"^G","end-of-epoch"]],"^1I",[["^ ","^14",23,"^15",17,"^G","start-of-epoch"]]],"~i77",["^ ","~i0",[["^ ","^14",0,"^15",22],["^ ","^14",49,"^15",22],["^ ","^14",0,"^15",23]],"~i6",[["^ ","^14",0,"^15",22,"^G","day8.re-frame-10x.metamorphic/run-queue?"]],"~i18",[["^ ","^14",106,"^15",22,"^G","event"]]],"~i78",["^ ","~i2",[["^ ","^14",0,"^15",23],["^ ","^14",4,"^15",23,"^G","and__3938__auto__"],["^ ","^14",0,"^15",24],["^ ","^14",0,"^15",24],["^ ","^14",20,"^15",24,"^G","and__3938__auto__"],["^ ","^14",0,"^15",27,"^G","and__3938__auto__"]],"~i7",[["^ ","^14",24,"^15",23]],"~i8",[["^ ","^14",24,"^15",23,"^G","day8.re-frame-10x.metamorphic/fsm-trigger?"]],"~i21",[["^ ","^14",73,"^15",23,"^G","event"]]],"~i79",["^ ","~i7",[["^ ","^14",0,"^15",25],["^ ","^14",153,"^15",25],["^ ","^14",236,"^15",25],["^ ","^14",298,"^15",25]],"~i8",[["^ ","^14",7,"^15",25,"^G","cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2"]],"^1H",[["^ ","^14",52,"^15",25],["^ ","^14",52,"^15",25]],"^1I",[["^ ","^14",146,"^15",25,"^G","event"]]],"~i82",["^ ","~i0",[["^ ","^14",0,"^15",30],["^ ","^14",63,"^15",30],["^ ","^14",0,"^15",31]],"~i6",[["^ ","^14",0,"^15",30,"^G","day8.re-frame-10x.metamorphic/request-animation-frame?"]],"~i32",[["^ ","^14",134,"^15",30,"^G","event"]]],"~i83",["^ ","~i2",[["^ ","^14",0,"^15",31],["^ ","^14",52,"^15",31]],"~i3",[["^ ","^14",7,"^15",31,"^G","cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2"]],"^1H",[["^ ","^14",104,"^15",31],["^ ","^14",104,"^15",31]],"^1<",[["^ ","^14",194,"^15",31,"^G","event"]]],"~i85",["^ ","~i0",[["^ ","^14",0,"^15",33],["^ ","^14",67,"^15",33],["^ ","^14",0,"^15",34]],"~i6",[["^ ","^14",0,"^15",33,"^G","day8.re-frame-10x.metamorphic/request-animation-frame-end?"]],"~i36",[["^ ","^14",142,"^15",33,"^G","event"]]],"~i86",["^ ","~i2",[["^ ","^14",0,"^15",34],["^ ","^14",52,"^15",34]],"~i3",[["^ ","^14",7,"^15",34,"^G","cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2"]],"~i14",[["^ ","^14",111,"^15",34],["^ ","^14",111,"^15",34]],"^1A",[["^ ","^14",201,"^15",34,"^G","event"]]],"~i88",["^ ","~i0",[["^ ","^14",0,"^15",36],["^ ","^14",48,"^15",36],["^ ","^14",0,"^15",37]],"~i6",[["^ ","^14",0,"^15",36,"^G","day8.re-frame-10x.metamorphic/summarise-event"]],"^1C",[["^ ","^14",104,"^15",36,"^G","ev"]]],"~i89",["^ ","~i6",[["^ ","^14",115,"^15",37,"^G","ev"]]],"~i90",["^ ","~i6",[["^ ","^14",61,"^15",37],["^ ","^14",118,"^15",37],["^ ","^14",223,"^15",37],["^ ","^14",284,"^15",37],["^ ","^14",335,"^15",37]],"~i7",[["^ ","^14",61,"^15",37,"^G","cljs.core.dissoc.cljs$core$IFn$_invoke$arity$variadic"]]],"~i91",["^ ","~i6",[["^ ","^14",0,"^15",37],["^ ","^14",402,"^15",37],["^ ","^14",472,"^15",37],["^ ","^14",544,"^15",37],["^ ","^14",613,"^15",37],["^ ","^14",722,"^15",37],["^ ","^14",784,"^15",37]],"~i7",[["^ ","^14",7,"^15",37,"^G","cljs.core.update.cljs$core$IFn$_invoke$arity$variadic"]],"^1<",[["^ ","^14",455,"^15",37,"^G","cljs.core/dissoc"]]],"~i94",["^ ","~i0",[["^ ","^14",0,"^15",39],["^ ","^14",48,"^15",39],["^ ","^14",0,"^15",40]],"~i6",[["^ ","^14",0,"^15",39,"^G","day8.re-frame-10x.metamorphic/summarise-match"]],"^1C",[["^ ","^14",104,"^15",39,"^G","match"]]],"~i95",["^ ","~i2",[["^ ","^14",0,"^15",40]],"~i3",[["^ ","^14",7,"^15",40,"^G","cljs.core.map.cljs$core$IFn$_invoke$arity$2"]],"~i7",[["^ ","^14",51,"^15",40,"^G","day8.re-frame-10x.metamorphic/summarise-event"]],"^1C",[["^ ","^14",97,"^15",40,"^G","match"]]],"~i97",["^ ","~i0",[["^ ","^14",0,"^15",42],["^ ","^14",45,"^15",42],["^ ","^14",0,"^15",43]],"~i6",[["^ ","^14",0,"^15",42,"^G","day8.re-frame-10x.metamorphic/beginning-id"]],"^1<",[["^ ","^14",98,"^15",42,"^G","match"]]],"~i98",["^ ","~i2",[["^ ","^14",0,"^15",43],["^ ","^14",7,"^15",43]],"~i7",[["^ ","^14",87,"^15",43]],"~i8",[["^ ","^14",87,"^15",43,"^G","cljs.core/first"]],"^1X",[["^ ","^14",103,"^15",43,"^G","match"]]],"~i100",["^ ","~i0",[["^ ","^14",0,"^15",45],["^ ","^14",42,"^15",45],["^ ","^14",0,"^15",46]],"~i6",[["^ ","^14",0,"^15",45,"^G","day8.re-frame-10x.metamorphic/ending-id"]],"~i17",[["^ ","^14",92,"^15",45,"^G","match"]]],"~i101",["^ ","~i2",[["^ ","^14",0,"^15",46],["^ ","^14",7,"^15",46]],"~i7",[["^ ","^14",87,"^15",46]],"~i8",[["^ ","^14",87,"^15",46,"^G","cljs.core/last"]],"^16",[["^ ","^14",102,"^15",46,"^G","match"]]],"~i125",["^ ","~i0",[["^ ","^14",0,"^15",48],["^ ","^14",59,"^15",48],["^ ","^14",0,"^15",49]],"~i6",[["^ ","^14",0,"^15",48,"^G","day8.re-frame-10x.metamorphic/add-event-from-idle?"]],"~i28",[["^ ","^14",126,"^15",48,"^G","event"]]],"~i126",["^ ","~i2",[["^ ","^14",0,"^15",49]],"~i7",[["^ ","^14",9,"^15",49],["^ ","^14",54,"^15",49]],"~i8",[["^ ","^14",9,"^15",49,"^G","cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2"]],"~i39",[["^ ","^14",150,"^15",49],["^ ","^14",150,"^15",49]],"~i49",[["^ ","^14",240,"^15",49,"^G","event"]]],"~i127",["^ ","~i7",[["^ ","^14",253,"^15",49],["^ ","^14",399,"^15",49],["^ ","^14",482,"^15",49],["^ ","^14",536,"^15",49]],"~i8",[["^ ","^14",253,"^15",49,"^G","cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2"]],"^1H",[["^ ","^14",298,"^15",49],["^ ","^14",298,"^15",49]],"^1I",[["^ ","^14",392,"^15",49,"^G","event"]]],"~i130",["^ ","~i0",[["^ ","^14",0,"^15",51],["^ ","^14",52,"^15",51],["^ ","^14",0,"^15",52]],"~i6",[["^ ","^14",0,"^15",51,"^G","day8.re-frame-10x.metamorphic/subscription?"]],"^1P",[["^ ","^14",112,"^15",51,"^G","trace"]]],"~i131",["^ ","~i2",[["^ ","^14",0,"^15",52]],"~i7",[["^ ","^14",9,"^15",52],["^ ","^14",54,"^15",52]],"~i8",[["^ ","^14",9,"^15",52,"^G","cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2"]],"~i16",[["^ ","^14",60,"^15",52]],"^26",[["^ ","^14",60,"^15",52,"^G","cljs.core/namespace"]],"~i27",[["^ ","^14",80,"^15",52],["^ ","^14",80,"^15",52]],"~i37",[["^ ","^14",170,"^15",52,"^G","trace"]]],"~i133",["^ ","~i7",[["^ ","^14",184,"^15",52]],"~i8",[["^ ","^14",184,"^15",52,"^G","cljs.core/not"]],"~i12",[["^ ","^14",198,"^15",52],["^ ","^14",251,"^15",52],["^ ","^14",334,"^15",52],["^ ","^14",387,"^15",52]],"^16",[["^ ","^14",198,"^15",52,"^G","cljs.core.get_in.cljs$core$IFn$_invoke$arity$2"]],"^1<",[["^ ","^14",245,"^15",52,"^G","trace"]]],"~i135",["^ ","~i0",[["^ ","^14",0,"^15",54],["^ ","^14",60,"^15",54],["^ ","^14",0,"^15",55]],"~i6",[["^ ","^14",0,"^15",54,"^G","day8.re-frame-10x.metamorphic/subscription-created?"]],"^1F",[["^ ","^14",128,"^15",54,"^G","trace"]]],"~i136",["^ ","~i2",[["^ ","^14",0,"^15",55]],"~i7",[["^ ","^14",9,"^15",55],["^ ","^14",54,"^15",55]],"~i8",[["^ ","^14",9,"^15",55,"^G","cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2"]],"^1I",[["^ ","^14",117,"^15",55],["^ ","^14",117,"^15",55]],"^1S",[["^ ","^14",207,"^15",55,"^G","trace"]]],"~i137",["^ ","~i7",[["^ ","^14",220,"^15",55]],"~i8",[["^ ","^14",220,"^15",55,"^G","cljs.core/not"]],"^2D",[["^ ","^14",234,"^15",55],["^ ","^14",287,"^15",55],["^ ","^14",370,"^15",55],["^ ","^14",423,"^15",55]],"^16",[["^ ","^14",234,"^15",55,"^G","cljs.core.get_in.cljs$core$IFn$_invoke$arity$2"]],"^1<",[["^ ","^14",281,"^15",55,"^G","trace"]]],"~i139",["^ ","~i0",[["^ ","^14",0,"^15",57],["^ ","^14",59,"^15",57],["^ ","^14",0,"^15",58]],"~i6",[["^ ","^14",0,"^15",57,"^G","day8.re-frame-10x.metamorphic/subscription-re-run?"]],"^29",[["^ ","^14",126,"^15",57,"^G","trace"]]],"~i140",["^ ","~i2",[["^ ","^14",0,"^15",58],["^ ","^14",52,"^15",58]],"~i3",[["^ ","^14",7,"^15",58,"^G","cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2"]],"^1X",[["^ ","^14",109,"^15",58],["^ ","^14",109,"^15",58]],"^1A",[["^ ","^14",199,"^15",58,"^G","trace"]]],"~i142",["^ ","~i0",[["^ ","^14",0,"^15",60],["^ ","^14",62,"^15",60],["^ ","^14",0,"^15",61]],"~i6",[["^ ","^14",0,"^15",60,"^G","day8.re-frame-10x.metamorphic/subscription-destroyed?"]],"^1D",[["^ ","^14",132,"^15",60,"^G","trace"]]],"~i143",["^ ","~i2",[["^ ","^14",0,"^15",61],["^ ","^14",52,"^15",61]],"~i3",[["^ ","^14",7,"^15",61,"^G","cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2"]],"^1N",[["^ ","^14",115,"^15",61],["^ ","^14",115,"^15",61]],"^29",[["^ ","^14",205,"^15",61,"^G","trace"]]],"~i145",["^ ","~i0",[["^ ","^14",0,"^15",63],["^ ","^14",60,"^15",63],["^ ","^14",0,"^15",64],["^ ","^14",0,"^15",64]],"~i6",[["^ ","^14",0,"^15",63,"^G","day8.re-frame-10x.metamorphic/subscription-not-run?"]],"^1F",[["^ ","^14",128,"^15",63,"^G","trace"]]],"~i148",["^ ","~i0",[["^ ","^14",0,"^15",66],["^ ","^14",64,"^15",69],["^ ","^14",0,"^15",70]],"~i6",[["^ ","^14",0,"^15",69,"^G","day8.re-frame-10x.metamorphic/low-level-re-frame-trace?"]]],"~i150",["^ ","~i3",[["^ ","^14",136,"^15",69,"^G","trace"]]],"~i151",["^ ","~i2",[["^ ","^14",0,"^15",70],["^ ","^14",4,"^15",70,"^G","G__13972"],["^ ","^14",4,"^15",71,"^G","G__13972"],["^ ","^14",19,"^15",71],["^ ","^14",21,"^15",71],["^ ","^14",22,"^15",71,"^G","G__13972"],["^ ","^14",42,"^15",71,"^G","cljs.core/Keyword"],["^ ","^14",75,"^15",71],["^ ","^14",0,"^15",72],["^ ","^14",0,"^15",72],["^ ","^14",8,"^15",72,"^G","G__13972"],["^ ","^14",5,"^15",73],["^ ","^14",0,"^15",74],["^ ","^14",0,"^15",78]],"~i8",[["^ ","^14",15,"^15",70],["^ ","^14",15,"^15",70]],"^1N",[["^ ","^14",105,"^15",70,"^G","trace"]]],"~i155",["^ ","~i0",[["^ ","^14",0,"^15",82],["^ ","^14",63,"^15",85],["^ ","^14",0,"^15",86]],"~i6",[["^ ","^14",0,"^15",85,"^G","day8.re-frame-10x.metamorphic/low-level-reagent-trace?"]]],"~i157",["^ ","~i3",[["^ ","^14",134,"^15",85,"^G","trace"]]],"~i158",["^ ","~i2",[["^ ","^14",0,"^15",86],["^ ","^14",52,"^15",86]],"~i3",[["^ ","^14",7,"^15",86,"^G","cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2"]],"^2A",[["^ ","^14",137,"^15",86],["^ ","^14",137,"^15",86]],"^2B",[["^ ","^14",227,"^15",86,"^G","trace"]]],"~i160",["^ ","~i0",[["^ ","^14",0,"^15",88],["^ ","^14",46,"^15",88],["^ ","^14",0,"^15",89]],"~i6",[["^ ","^14",0,"^15",88,"^G","day8.re-frame-10x.metamorphic/render?"]],"^18",[["^ ","^14",100,"^15",88,"^G","trace"]]],"~i161",["^ ","~i2",[["^ ","^14",0,"^15",89],["^ ","^14",52,"^15",89]],"~i3",[["^ ","^14",7,"^15",89,"^G","cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2"]],"^16",[["^ ","^14",110,"^15",89],["^ ","^14",110,"^15",89]],"^1C",[["^ ","^14",200,"^15",89,"^G","trace"]]],"~i163",["^ ","~i0",[["^ ","^14",0,"^15",91],["^ ","^14",65,"^15",91],["^ ","^14",0,"^15",92]],"~i6",[["^ ","^14",0,"^15",91,"^G","day8.re-frame-10x.metamorphic/unchanged-l2-subscription?"]],"^1>",[["^ ","^14",138,"^15",91,"^G","sub"]]],"~i164",["^ ","~i2",[["^ ","^14",0,"^15",92],["^ ","^14",4,"^15",92,"^G","and__3938__auto__"],["^ ","^14",0,"^15",93],["^ ","^14",0,"^15",93],["^ ","^14",20,"^15",93,"^G","and__3938__auto__"],["^ ","^14",0,"^15",94],["^ ","^14",0,"^15",100,"^G","and__3938__auto__"]],"~i7",[["^ ","^14",24,"^15",92],["^ ","^14",75,"^15",92],["^ ","^14",158,"^15",92],["^ ","^14",220,"^15",92]],"~i8",[["^ ","^14",24,"^15",92,"^G","cljs.core.get_in.cljs$core$IFn$_invoke$arity$2"]],"^18",[["^ ","^14",71,"^15",92,"^G","sub"]]],"~i165",["^ ","~i7",[["^ ","^14",9,"^15",94],["^ ","^14",34,"^15",94],["^ ","^14",18,"^15",95,"^G","p1__13980#"],["^ ","^14",0,"^15",96]],"~i8",[["^ ","^14",9,"^15",94,"^G","cljs.core/not-any?"]],"^1N",[["^ ","^14",0,"^15",96],["^ ","^14",52,"^15",96],["^ ","^14",115,"^15",96,"^G","p1__13980#"]],"~i19",[["^ ","^14",7,"^15",96,"^G","cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2"]],"^2B",[["^ ","^14",1,"^15",98],["^ ","^14",1,"^15",98]],"^1K",[["^ ","^14",87,"^15",98,"^G","sub"]]],"~i166",["^ ","~i7",[["^ ","^14",98,"^15",98],["^ ","^14",143,"^15",98]],"~i8",[["^ ","^14",98,"^15",98,"^G","cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2"]],"^2D",[["^ ","^14",147,"^15",98],["^ ","^14",195,"^15",98]],"^16",[["^ ","^14",147,"^15",98,"^G","cljs.core.get.cljs$core$IFn$_invoke$arity$2"]],"^26",[["^ ","^14",191,"^15",98,"^G","sub"]]],"~i169",["^ ","~i0",[["^ ","^14",0,"^15",103],["^ ","^14",50,"^15",106],["^ ","^14",0,"^15",107]],"~i6",[["^ ","^14",0,"^15",106,"^G","day8.re-frame-10x.metamorphic/finish-run?"]]],"~i171",["^ ","~i3",[["^ ","^14",108,"^15",106,"^G","event"]]],"~i172",["^ ","~i2",[["^ ","^14",0,"^15",107],["^ ","^14",4,"^15",107,"^G","and__3938__auto__"],["^ ","^14",0,"^15",108],["^ ","^14",0,"^15",108],["^ ","^14",20,"^15",108,"^G","and__3938__auto__"],["^ ","^14",0,"^15",111,"^G","and__3938__auto__"]],"~i7",[["^ ","^14",24,"^15",107]],"~i8",[["^ ","^14",24,"^15",107,"^G","day8.re-frame-10x.metamorphic/fsm-trigger?"]],"^1P",[["^ ","^14",73,"^15",107,"^G","event"]]],"~i173",["^ ","~i7",[["^ ","^14",0,"^15",109],["^ ","^14",153,"^15",109],["^ ","^14",236,"^15",109],["^ ","^14",295,"^15",109]],"~i8",[["^ ","^14",7,"^15",109,"^G","cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2"]],"^1H",[["^ ","^14",52,"^15",109],["^ ","^14",52,"^15",109]],"^1I",[["^ ","^14",146,"^15",109,"^G","event"]]],"~i176",["^ ","~i0",[["^ ","^14",0,"^15",114],["^ ","^14",49,"^15",114],["^ ","^14",0,"^15",115]],"~i6",[["^ ","^14",0,"^15",114,"^G","day8.re-frame-10x.metamorphic/event-run?"]],"^1N",[["^ ","^14",106,"^15",114,"^G","event"]]],"~i177",["^ ","~i2",[["^ ","^14",0,"^15",115],["^ ","^14",52,"^15",115]],"~i3",[["^ ","^14",7,"^15",115,"^G","cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2"]],"^2D",[["^ ","^14",106,"^15",115],["^ ","^14",106,"^15",115]],"^1I",[["^ ","^14",196,"^15",115,"^G","event"]]],"~i179",["^ ","~i0",[["^ ","^14",0,"^15",117],["^ ","^14",53,"^15",117],["^ ","^14",0,"^15",118]],"~i6",[["^ ","^14",0,"^15",117,"^G","day8.re-frame-10x.metamorphic/event-handler?"]],"^1I",[["^ ","^14",114,"^15",117,"^G","trace"]]],"~i180",["^ ","~i2",[["^ ","^14",0,"^15",118],["^ ","^14",52,"^15",118]],"~i3",[["^ ","^14",7,"^15",118,"^G","cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2"]],"^1<",[["^ ","^14",120,"^15",118],["^ ","^14",120,"^15",118]],"~i30",[["^ ","^14",210,"^15",118,"^G","trace"]]],"~i182",["^ ","~i0",[["^ ","^14",0,"^15",120],["^ ","^14",50,"^15",120],["^ ","^14",0,"^15",121]],"~i6",[["^ ","^14",0,"^15",120,"^G","day8.re-frame-10x.metamorphic/event-dofx?"]],"^2X",[["^ ","^14",108,"^15",120,"^G","trace"]]],"~i183",["^ ","~i2",[["^ ","^14",0,"^15",121],["^ ","^14",52,"^15",121]],"~i3",[["^ ","^14",7,"^15",121,"^G","cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2"]],"^1N",[["^ ","^14",116,"^15",121],["^ ","^14",116,"^15",121]],"^29",[["^ ","^14",206,"^15",121,"^G","trace"]]],"~i185",["^ ","~i0",[["^ ","^14",0,"^15",123],["^ ","^14",54,"^15",128],["^ ","^14",0,"^15",129]],"~i6",[["^ ","^14",0,"^15",128,"^G","day8.re-frame-10x.metamorphic/start-of-epoch?"]]],"~i189",["^ ","~i3",[["^ ","^14",116,"^15",128,"^G","event"]]],"~i190",["^ ","~i2",[["^ ","^14",0,"^15",129],["^ ","^14",4,"^15",129,"^G","or__3949__auto__"],["^ ","^14",0,"^15",130],["^ ","^14",0,"^15",130],["^ ","^14",20,"^15",130,"^G","or__3949__auto__"],["^ ","^14",0,"^15",131,"^G","or__3949__auto__"]],"~i6",[["^ ","^14",23,"^15",129]],"~i7",[["^ ","^14",23,"^15",129,"^G","day8.re-frame-10x.metamorphic/run-queue?"]],"^1N",[["^ ","^14",70,"^15",129,"^G","event"]]],"~i191",["^ ","~i6",[["^ ","^14",0,"^15",133]],"~i7",[["^ ","^14",7,"^15",133,"^G","day8.re-frame-10x.metamorphic/event-run?"]],"^1N",[["^ ","^14",54,"^15",133,"^G","event"]]],"~i193",["^ ","~i0",[["^ ","^14",0,"^15",136],["^ ","^14",67,"^15",142],["^ ","^14",0,"^15",143]],"~i6",[["^ ","^14",0,"^15",142,"^G","day8.re-frame-10x.metamorphic/start-of-epoch-and-prev-end?"]]],"~i198",["^ ","~i3",[["^ ","^14",142,"^15",142,"^G","event"]],"~i9",[["^ ","^14",148,"^15",142,"^G","state"]]],"~i199",["^ ","~i2",[["^ ","^14",0,"^15",143],["^ ","^14",4,"^15",143,"^G","or__3949__auto__"],["^ ","^14",0,"^15",144],["^ ","^14",0,"^15",144],["^ ","^14",20,"^15",144,"^G","or__3949__auto__"],["^ ","^14",0,"^15",145,"^G","or__3949__auto__"]],"~i6",[["^ ","^14",23,"^15",143]],"~i7",[["^ ","^14",23,"^15",143,"^G","day8.re-frame-10x.metamorphic/run-queue?"]],"^1N",[["^ ","^14",70,"^15",143,"^G","event"]]],"~i202",["^ ","~i6",[["^ ","^14",0,"^15",147],["^ ","^14",4,"^15",147,"^G","and__3938__auto__"],["^ ","^14",0,"^15",148],["^ ","^14",0,"^15",148],["^ ","^14",20,"^15",148,"^G","and__3938__auto__"],["^ ","^14",0,"^15",151,"^G","and__3938__auto__"]],"^17",[["^ ","^14",24,"^15",147]],"^2D",[["^ ","^14",24,"^15",147,"^G","day8.re-frame-10x.metamorphic/event-run?"]],"^1C",[["^ ","^14",71,"^15",147,"^G","event"]]],"~i203",["^ ","^17",[["^ ","^14",0,"^15",149]],"^2D",[["^ ","^14",7,"^15",149,"^G","cljs.core/not"]],"^2@",[["^ ","^14",21,"^15",149]],"^26",[["^ ","^14",21,"^15",149,"^G","day8.re-frame-10x.metamorphic/run-queue?"]],"^29",[["^ ","^14",68,"^15",149],["^ ","^14",68,"^15",149]],"^1K",[["^ ","^14",171,"^15",149,"^G","state"]]],"~i205",["^ ","~i0",[["^ ","^14",0,"^15",155],["^ ","^14",49,"^15",155],["^ ","^14",0,"^15",156]],"~i6",[["^ ","^14",0,"^15",155,"^G","day8.re-frame-10x.metamorphic/quiescent?"]],"^1N",[["^ ","^14",106,"^15",155,"^G","event"]]],"~i206",["^ ","~i2",[["^ ","^14",0,"^15",156],["^ ","^14",52,"^15",156]],"~i3",[["^ ","^14",7,"^15",156,"^G","cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2"]],"^1A",[["^ ","^14",127,"^15",156],["^ ","^14",127,"^15",156]],"^1>",[["^ ","^14",217,"^15",156,"^G","event"]]],"~i208",["^ ","~i0",[["^ ","^14",0,"^15",158],["^ ","^14",52,"^15",158],["^ ","^14",95,"^15",158],["^ ","^14",166,"^15",158],["^ ","^14",171,"^15",158],["^ ","^14",244,"^15",158],["^ ","^14",249,"^15",158],["^ ","^14",313,"^15",158]],"~i5",[["^ ","^14",0,"^15",158,"^G","day8.re-frame-10x.metamorphic/initial-parse-state"]]],"~i213",["^ ","~i0",[["^ ","^14",0,"^15",159],["^ ","^14",50,"^15",159],["^ ","^14",93,"^15",159],["^ ","^14",168,"^15",159],["^ ","^14",172,"^15",159],["^ ","^14",246,"^15",159],["^ ","^14",281,"^15",159],["^ ","^14",353,"^15",159]],"~i5",[["^ ","^14",0,"^15",159,"^G","day8.re-frame-10x.metamorphic/initial-sub-state"]]],"~i218",["^ ","~i0",[["^ ","^14",0,"^15",160],["^ ","^14",45,"^15",160],["^ ","^14",0,"^15",161]],"~i6",[["^ ","^14",0,"^15",160,"^G","day8.re-frame-10x.metamorphic/parse-traces"]],"^1<",[["^ ","^14",98,"^15",160,"^G","parse-state"]],"^1S",[["^ ","^14",110,"^15",160,"^G","traces"]]],"~i219",["^ ","~i2",[["^ ","^14",0,"^15",161]],"~i3",[["^ ","^14",7,"^15",161,"^G","cljs.core.reduce.cljs$core$IFn$_invoke$arity$3"]]],"~i220",["^ ","~i4",[["^ ","^14",54,"^15",161],["^ ","^14",0,"^15",162]],"~i9",[["^ ","^14",65,"^15",161,"^G","state"]],"^18",[["^ ","^14",71,"^15",161,"^G","event"]]],"~i221",["^ ","~i6",[["^ ","^14",0,"^15",162],["^ ","^14",0,"^15",165]],"^2D",[["^ ","^14",4,"^15",162,"^G","current-match"]],"^2A",[["^ ","^14",20,"^15",162],["^ ","^14",20,"^15",162]],"~i43",[["^ ","^14",121,"^15",162,"^G","state"]]],"~i222",["^ ","^2D",[["^ ","^14",4,"^15",163,"^G","previous-event"]],"^2A",[["^ ","^14",21,"^15",163],["^ ","^14",21,"^15",163]],"^1?",[["^ ","^14",124,"^15",163,"^G","state"]]],"~i223",["^ ","^2D",[["^ ","^14",4,"^15",164,"^G","no-match?"]],"^2A",[["^ ","^14",22,"^15",164],["^ ","^14",40,"^15",164]],"^1:",[["^ ","^14",23,"^15",164,"^G","current-match"]]],"~i224",["^ ","^2D",[["^ ","^14",53,"^15",165],["^ ","^14",378,"^15",165],["^ ","^14",773,"^15",165],["^ ","^14",1293,"^15",165],["^ ","^14",1512,"^15",165]]],"~i227",["^ ","^1X",[["^ ","^14",55,"^15",165,"^G","no-match?"]]],"~i228",["^ ","^1X",[["^ ","^14",72,"^15",165]],"^1N",[["^ ","^14",90,"^15",165]],"^2X",[["^ ","^14",90,"^15",165,"^G","day8.re-frame-10x.metamorphic/start-of-epoch?"]],"~i35",[["^ ","^14",142,"^15",165,"^G","event"]]],"~i229",["^ ","^2@",[["^ ","^14",150,"^15",165],["^ ","^14",202,"^15",165],["^ ","^14",273,"^15",165]],"^26",[["^ ","^14",150,"^15",165,"^G","cljs.core.assoc.cljs$core$IFn$_invoke$arity$3"]],"^1C",[["^ ","^14",196,"^15",165,"^G","state"]],"^1K",[["^ ","^14",356,"^15",165,"^G","event"]]],"~i230",["^ ","^2@",[["^ ","^14",371,"^15",165,"^G","state"]]],"~i233",["^ ","^1X",[["^ ","^14",396,"^15",165]],"^18",[["^ ","^14",396,"^15",165,"^G","day8.re-frame-10x.metamorphic/quiescent?"]],"~i26",[["^ ","^14",443,"^15",165,"^G","event"]]],"~i234",["^ ","^1N",[["^ ","^14",544,"^15",165,"^G","state"]]],"~i235",["^ ","^1N",[["^ ","^14",497,"^15",165],["^ ","^14",550,"^15",165]],"^2X",[["^ ","^14",497,"^15",165,"^G","cljs.core.update.cljs$core$IFn$_invoke$arity$4"]],"^1J",[["^ ","^14",614,"^15",165,"^G","cljs.core/conj"]],"^3J",[["^ ","^14",629,"^15",165]],"^1?",[["^ ","^14",629,"^15",165,"^G","cljs.core.conj.cljs$core$IFn$_invoke$arity$2"]],"^2<",[["^ ","^14",674,"^15",165,"^G","current-match"]],"~i63",[["^ ","^14",688,"^15",165,"^G","event"]]],"~i236",["^ ","^1N",[["^ ","^14",451,"^15",165],["^ ","^14",696,"^15",165],["^ ","^14",767,"^15",165]],"^2X",[["^ ","^14",451,"^15",165,"^G","cljs.core.assoc.cljs$core$IFn$_invoke$arity$3"]]],"~i241",["^ ","^1X",[["^ ","^14",791,"^15",165]],"^18",[["^ ","^14",791,"^15",165,"^G","day8.re-frame-10x.metamorphic/start-of-epoch-and-prev-end?"]],"^1?",[["^ ","^14",856,"^15",165,"^G","event"]],"~i50",[["^ ","^14",862,"^15",165,"^G","state"]]],"~i242",["^ ","^1N",[["^ ","^14",963,"^15",165,"^G","state"]]],"~i243",["^ ","^1N",[["^ ","^14",916,"^15",165],["^ ","^14",969,"^15",165]],"^2X",[["^ ","^14",916,"^15",165,"^G","cljs.core.update.cljs$core$IFn$_invoke$arity$4"]],"^1J",[["^ ","^14",1033,"^15",165,"^G","cljs.core/conj"]],"^3J",[["^ ","^14",1048,"^15",165]],"^1?",[["^ ","^14",1048,"^15",165,"^G","cljs.core.conj.cljs$core$IFn$_invoke$arity$2"]],"^2<",[["^ ","^14",1093,"^15",165,"^G","current-match"]],"^3W",[["^ ","^14",1107,"^15",165,"^G","previous-event"]]],"~i244",["^ ","^1N",[["^ ","^14",870,"^15",165],["^ ","^14",1124,"^15",165],["^ ","^14",1195,"^15",165]],"^2X",[["^ ","^14",870,"^15",165,"^G","cljs.core.assoc.cljs$core$IFn$_invoke$arity$3"]],"^1;",[["^ ","^14",1278,"^15",165,"^G","event"]]],"~i246",["^ ","^1X",[["^ ","^14",1311,"^15",165]],"^18",[["^ ","^14",1311,"^15",165,"^G","day8.re-frame-10x.metamorphic/event-run?"]],"^3T",[["^ ","^14",1358,"^15",165,"^G","event"]]],"~i247",["^ ","^1X",[["^ ","^14",1366,"^15",165],["^ ","^14",1419,"^15",165]],"^18",[["^ ","^14",1366,"^15",165,"^G","cljs.core.update.cljs$core$IFn$_invoke$arity$4"]],"^1I",[["^ ","^14",1413,"^15",165,"^G","state"]],"^3J",[["^ ","^14",1490,"^15",165,"^G","cljs.core/conj"]],"~i48",[["^ ","^14",1505,"^15",165,"^G","event"]]],"~i251",["^ ","^1X",[["^ ","^14",1512,"^15",165,"^G","state"]]],"~i255",["^ ","^2D",[["^ ","^14",0,"^15",165],["^ ","^14",5,"^15",166]],"^16",[["^ ","^14",7,"^15",165,"^G","cljs.core.assoc.cljs$core$IFn$_invoke$arity$3"]],"^3P",[["^ ","^14",78,"^15",166,"^G","event"]]],"~i256",["^ ","~i4",[["^ ","^14",3,"^15",167,"^G","parse-state"]]],"~i257",["^ ","~i4",[["^ ","^14",15,"^15",167,"^G","traces"]]],"~i259",["^ ","~i0",[["^ ","^14",0,"^15",169],["^ ","^14",46,"^15",169],["^ ","^14",0,"^15",170]],"~i6",[["^ ","^14",0,"^15",169,"^G","day8.re-frame-10x.metamorphic/matched-event"]],"^1P",[["^ ","^14",100,"^15",169,"^G","match"]]],"~i260",["^ ","~i7",[["^ ","^14",117,"^15",170,"^G","match"]]],"~i261",["^ ","~i7",[["^ ","^14",23,"^15",170]],"~i8",[["^ ","^14",23,"^15",170,"^G","cljs.core.filter.cljs$core$IFn$_invoke$arity$2"]],"^18",[["^ ","^14",70,"^15",170,"^G","day8.re-frame-10x.metamorphic/event-run?"]]],"~i262",["^ ","~i7",[["^ ","^14",0,"^15",170]],"~i8",[["^ ","^14",7,"^15",170,"^G","cljs.core/first"]]],"~i264",["^ ","~i0",[["^ ","^14",0,"^15",172],["^ ","^14",45,"^15",172],["^ ","^14",0,"^15",173]],"~i6",[["^ ","^14",0,"^15",172,"^G","day8.re-frame-10x.metamorphic/app-db-after"]],"^1<",[["^ ","^14",98,"^15",172,"^G","event-trace"]]],"~i265",["^ ","~i2",[["^ ","^14",0,"^15",173],["^ ","^14",66,"^15",173],["^ ","^14",149,"^15",173],["^ ","^14",202,"^15",173]],"~i3",[["^ ","^14",7,"^15",173,"^G","cljs.core.get_in.cljs$core$IFn$_invoke$arity$2"]],"^1H",[["^ ","^14",54,"^15",173,"^G","event-trace"]]],"~i267",["^ ","~i0",[["^ ","^14",0,"^15",175],["^ ","^14",46,"^15",175],["^ ","^14",0,"^15",176]],"~i6",[["^ ","^14",0,"^15",175,"^G","day8.re-frame-10x.metamorphic/app-db-before"]],"^1P",[["^ ","^14",100,"^15",175,"^G","event-trace"]]],"~i268",["^ ","~i2",[["^ ","^14",0,"^15",176],["^ ","^14",66,"^15",176],["^ ","^14",149,"^15",176],["^ ","^14",202,"^15",176]],"~i3",[["^ ","^14",7,"^15",176,"^G","cljs.core.get_in.cljs$core$IFn$_invoke$arity$2"]],"^1H",[["^ ","^14",54,"^15",176,"^G","event-trace"]]],"~i270",["^ ","~i0",[["^ ","^14",0,"^15",178],["^ ","^14",50,"^15",182],["^ ","^14",0,"^15",183]],"~i6",[["^ ","^14",0,"^15",182,"^G","day8.re-frame-10x.metamorphic/subscription-info"]]],"~i273",["^ ","~i3",[["^ ","^14",108,"^15",182,"^G","initial-state"]],"^26",[["^ ","^14",122,"^15",182,"^G","filtered-traces"]],"^1:",[["^ ","^14",138,"^15",182,"^G","app-db-id"]]],"~i274",["^ ","~i7",[["^ ","^14",121,"^15",187,"^G","filtered-traces"]]],"~i275",["^ ","~i7",[["^ ","^14",17,"^15",187]],"~i8",[["^ ","^14",17,"^15",187,"^G","cljs.core.filter.cljs$core$IFn$_invoke$arity$2"]],"^18",[["^ ","^14",64,"^15",187,"^G","day8.re-frame-10x.metamorphic/subscription-re-run?"]]],"~i276",["^ ","~i7",[["^ ","^14",0,"^15",183]],"~i8",[["^ ","^14",7,"^15",183,"^G","cljs.core.reduce.cljs$core$IFn$_invoke$arity$3"]],"^18",[["^ ","^14",54,"^15",183],["^ ","^14",0,"^15",184]],"^1<",[["^ ","^14",65,"^15",183,"^G","state"]],"^3T",[["^ ","^14",71,"^15",183,"^G","trace"]]],"~i284",["^ ","^26",[["^ ","^14",0,"^15",184],["^ ","^14",32,"^15",184],["^ ","^14",216,"^15",184]],"^1N",[["^ ","^14",7,"^15",184,"^G","cljs.core/assoc-in"]],"^2A",[["^ ","^14",26,"^15",184,"^G","state"]]],"~i285",["^ ","^29",[["^ ","^14",115,"^15",184],["^ ","^14",115,"^15",184]],"~i40",[["^ ","^14",209,"^15",184,"^G","trace"]]],"~i287",["^ ","^2A",[["^ ","^14",280,"^15",184],["^ ","^14",273,"^15",186],["^ ","^14",277,"^15",186]],"^1D",[["^ ","^14",298,"^15",184],["^ ","^14",313,"^15",184],["^ ","^14",324,"^15",184,"^G","p1__14013#"],["^ ","^14",0,"^15",185]],"^1S",[["^ ","^14",298,"^15",184,"^G","cljs.core/some"]],"^1J",[["^ ","^14",0,"^15",185],["^ ","^14",62,"^15",185,"^G","p1__14013#"]],"^2;",[["^ ","^14",7,"^15",185,"^G","cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2"]],"^1;",[["^ ","^14",52,"^15",185,"^G","app-db-id"]],"~i54",[["^ ","^14",3,"^15",186],["^ ","^14",56,"^15",186],["^ ","^14",139,"^15",186],["^ ","^14",192,"^15",186]],"~i55",[["^ ","^14",3,"^15",186,"^G","cljs.core.get_in.cljs$core$IFn$_invoke$arity$2"]],"~i62",[["^ ","^14",50,"^15",186,"^G","trace"]]],"~i290",["^ ","^18",[["^ ","^14",3,"^15",187,"^G","initial-state"]]],"~i292",["^ ","~i0",[["^ ","^14",0,"^15",189],["^ ","^14",48,"^15",193],["^ ","^14",0,"^15",194]],"~i6",[["^ ","^14",0,"^15",193,"^G","day8.re-frame-10x.metamorphic/reset-sub-state"]]],"~i295",["^ ","~i3",[["^ ","^14",104,"^15",193,"^G","state"]]],"~i296",["^ ","~i2",[["^ ","^14",0,"^15",194],["^ ","^14",52,"^15",194]],"~i3",[["^ ","^14",7,"^15",194,"^G","cljs.core.into.cljs$core$IFn$_invoke$arity$3"]]],"~i297",["^ ","~i8",[["^ ","^14",87,"^15",194]],"~i9",[["^ ","^14",87,"^15",194,"^G","cljs.core.comp.cljs$core$IFn$_invoke$arity$2"]]],"~i299",["^ ","^1H",[["^ ","^14",132,"^15",194]],"^17",[["^ ","^14",132,"^15",194,"^G","cljs.core.filter.cljs$core$IFn$_invoke$arity$1"]],"^1N",[["^ ","^14",179,"^15",194],["^ ","^14",0,"^15",195]],"^1C",[["^ ","^14",190,"^15",194,"^G","me"]],"^2A",[["^ ","^14",0,"^15",195],["^ ","^14",0,"^15",196],["^ ","^14",0,"^15",198]],"^2B",[["^ ","^14",20,"^15",195],["^ ","^14",20,"^15",195]],"^2<",[["^ ","^14",113,"^15",195]],"^3Z",[["^ ","^14",113,"^15",195,"^G","cljs.core/val"]],"^4J",[["^ ","^14",127,"^15",195,"^G","me"]],"~i59",[["^ ","^14",0,"^15",198,"^G","me"]]],"~i301",["^ ","^1H",[["^ ","^14",4,"^15",200]],"^17",[["^ ","^14",4,"^15",200,"^G","cljs.core.map.cljs$core$IFn$_invoke$arity$1"]],"^18",[["^ ","^14",48,"^15",200],["^ ","^14",59,"^15",200,"^G","p__14017"],["^ ","^14",0,"^15",201],["^ ","^14",0,"^15",201],["^ ","^14",4,"^15",201,"^G","vec__14018"],["^ ","^14",17,"^15",201,"^G","p__14017"],["^ ","^14",8,"^15",202],["^ ","^14",8,"^15",202,"^G","cljs.core.nth.cljs$core$IFn$_invoke$arity$3"],["^ ","^14",52,"^15",202,"^G","vec__14018"],["^ ","^14",63,"^15",202],["^ ","^14",67,"^15",202],["^ ","^14",8,"^15",203],["^ ","^14",8,"^15",203,"^G","cljs.core.nth.cljs$core$IFn$_invoke$arity$3"],["^ ","^14",52,"^15",203,"^G","vec__14018"],["^ ","^14",63,"^15",203],["^ ","^14",67,"^15",203],["^ ","^14",0,"^15",204],["^ ","^14",0,"^15",204]],"^1P",[["^ ","^14",4,"^15",202,"^G","k"]],"^1C",[["^ ","^14",4,"^15",203,"^G","v"]]],"~i302",["^ ","^1N",[["^ ","^14",90,"^15",204,"^G","k"]],"^1<",[["^ ","^14",92,"^15",204],["^ ","^14",148,"^15",204],["^ ","^14",254,"^15",204],["^ ","^14",314,"^15",204],["^ ","^14",366,"^15",204],["^ ","^14",429,"^15",204],["^ ","^14",503,"^15",204]],"^1P",[["^ ","^14",92,"^15",204,"^G","cljs.core.dissoc.cljs$core$IFn$_invoke$arity$variadic"]],"^29",[["^ ","^14",146,"^15",204,"^G","v"]]],"~i303",["^ ","~i8",[["^ ","^14",5,"^15",205,"^G","state"]]],"~i307",["^ ","~i0",[["^ ","^14",0,"^15",207],["^ ","^14",51,"^15",207],["^ ","^14",0,"^15",208]],"~i6",[["^ ","^14",0,"^15",207,"^G","day8.re-frame-10x.metamorphic/process-sub-traces"]]],"~i308",["^ ","~i3",[["^ ","^14",110,"^15",207,"^G","initial-state"]],"^26",[["^ ","^14",124,"^15",207,"^G","traces"]]],"~i309",["^ ","~i2",[["^ ","^14",0,"^15",208],["^ ","^14",0,"^15",255]],"~i8",[["^ ","^14",4,"^15",208,"^G","first-pass"]],"^1<",[["^ ","^14",17,"^15",208]],"^1P",[["^ ","^14",17,"^15",208,"^G","cljs.core.reduce.cljs$core$IFn$_invoke$arity$3"]],"^29",[["^ ","^14",64,"^15",208],["^ ","^14",0,"^15",209]],"^1:",[["^ ","^14",75,"^15",208,"^G","init-state"]],"^1?",[["^ ","^14",86,"^15",208,"^G","trace"]]],"~i310",["^ ","^36",[["^ ","^14",0,"^15",209],["^ ","^14",0,"^15",236]],"^1V",[["^ ","^14",4,"^15",209,"^G","tags"]],"^44",[["^ ","^14",11,"^15",209],["^ ","^14",61,"^15",209]],"^2<",[["^ ","^14",11,"^15",209,"^G","cljs.core.get.cljs$core$IFn$_invoke$arity$2"]],"~i53",[["^ ","^14",55,"^15",209,"^G","trace"]]],"~i311",["^ ","^1V",[["^ ","^14",4,"^15",210,"^G","reaction-id"]],"^44",[["^ ","^14",18,"^15",210],["^ ","^14",18,"^15",210]],"^4S",[["^ ","^14",108,"^15",210,"^G","tags"]]],"~i312",["^ ","^1V",[["^ ","^14",4,"^15",211,"^G","state"]],"~i52",[["^ ","^14",81,"^15",211,"^G","init-state"]]],"~i313",["^ ","^52",[["^ ","^14",31,"^15",211],["^ ","^14",92,"^15",211],["^ ","^14",187,"^15",211]],"^4[",[["^ ","^14",31,"^15",211,"^G","cljs.core.update_in.cljs$core$IFn$_invoke$arity$4"]],"~i64",[["^ ","^14",175,"^15",211,"^G","reaction-id"]],"~i84",[["^ ","^14",251,"^15",211],["^ ","^14",311,"^15",211]],"^1U",[["^ ","^14",251,"^15",211,"^G","cljs.core.fnil.cljs$core$IFn$_invoke$arity$2"]],"^1[",[["^ ","^14",296,"^15",211,"^G","cljs.core/conj"]],"~i99",[["^ ","^14",345,"^15",211],["^ ","^14",345,"^15",211]],"~i109",[["^ ","^14",435,"^15",211,"^G","trace"]]],"~i317",["^ ","^52",[["^ ","^14",12,"^15",211],["^ ","^14",443,"^15",211],["^ ","^14",538,"^15",211]],"^4[",[["^ ","^14",12,"^15",211,"^G","cljs.core/assoc-in"]],"^3W",[["^ ","^14",526,"^15",211,"^G","reaction-id"]],"^1[",[["^ ","^14",615,"^15",211],["^ ","^14",615,"^15",211]],"^25",[["^ ","^14",705,"^15",211,"^G","tags"]]],"~i318",["^ ","^1V",[["^ ","^14",4,"^15",212,"^G","new-state"]]],"~i319",["^ ","^44",[["^ ","^14",16,"^15",212],["^ ","^14",33,"^15",212,"^G","G__14022"],["^ ","^14",4,"^15",213,"^G","G__14022"],["^ ","^14",19,"^15",213],["^ ","^14",21,"^15",213],["^ ","^14",22,"^15",213,"^G","G__14022"],["^ ","^14",42,"^15",213,"^G","cljs.core/Keyword"],["^ ","^14",75,"^15",213],["^ ","^14",0,"^15",214],["^ ","^14",0,"^15",214],["^ ","^14",8,"^15",214,"^G","G__14022"],["^ ","^14",5,"^15",215],["^ ","^14",5,"^15",219],["^ ","^14",5,"^15",227],["^ ","^14",0,"^15",232],["^ ","^14",6,"^15",232],["^ ","^14",11,"^15",232,"^G","js/Error"],["^ ","^14",17,"^15",232],["^ ","^14",18,"^15",232],["^ ","^14",85,"^15",232,"^G","G__14022"]],"^4J",[["^ ","^14",44,"^15",212],["^ ","^14",44,"^15",212]],"^54",[["^ ","^14",134,"^15",212,"^G","trace"]]],"~i320",["^ ","~i66",[["^ ","^14",45,"^15",216,"^G","state"]]],"~i321",["^ ","^5<",[["^ ","^14",26,"^15",216],["^ ","^14",51,"^15",216],["^ ","^14",146,"^15",216],["^ ","^14",214,"^15",216]],"~i67",[["^ ","^14",26,"^15",216,"^G","cljs.core/assoc-in"]],"^1M",[["^ ","^14",134,"^15",216,"^G","reaction-id"]]],"~i322",["^ ","^5<",[["^ ","^14",0,"^15",216],["^ ","^14",220,"^15",216],["^ ","^14",315,"^15",216]],"^5>",[["^ ","^14",7,"^15",216,"^G","cljs.core/assoc-in"]],"^1M",[["^ ","^14",303,"^15",216,"^G","reaction-id"]],"~i104",[["^ ","^14",392,"^15",216],["^ ","^14",392,"^15",216]],"~i114",[["^ ","^14",482,"^15",216,"^G","tags"]]],"~i323",["^ ","^4S",[["^ ","^14",0,"^15",220]],"~i60",[["^ ","^14",7,"^15",220,"^G","cljs.core.update.cljs$core$IFn$_invoke$arity$3"]],"^5>",[["^ ","^14",54,"^15",220,"^G","state"]],"^1E",[["^ ","^14",60,"^15",220,"^G","reaction-id"]],"^1U",[["^ ","^14",72,"^15",220],["^ ","^14",0,"^15",222]],"^1[",[["^ ","^14",18,"^15",221,"^G","sub-state"]]],"~i328",["^ ","^20",[["^ ","^14",60,"^15",222]],"^22",[["^ ","^14",62,"^15",222],["^ ","^14",98,"^15",222]],"~i96",[["^ ","^14",62,"^15",222,"^G","cljs.core/contains?"]],"~i106",[["^ ","^14",88,"^15",222,"^G","sub-state"]]],"~i329",["^ ","~i93",[["^ ","^14",154,"^15",222],["^ ","^14",210,"^15",222]],"^21",[["^ ","^14",154,"^15",222,"^G","cljs.core.assoc.cljs$core$IFn$_invoke$arity$3"]],"^25",[["^ ","^14",200,"^15",222,"^G","sub-state"]],"^2:",[["^ ","^14",284,"^15",222],["^ ","^14",284,"^15",222]],"~i134",[["^ ","^14",368,"^15",222,"^G","sub-state"]]],"~i330",["^ ","^5H",[["^ ","^14",380,"^15",222,"^G","sub-state"]]],"~i331",["^ ","^20",[["^ ","^14",0,"^15",222],["^ ","^14",391,"^15",222],["^ ","^14",443,"^15",222],["^ ","^14",498,"^15",222]],"~i92",[["^ ","^14",7,"^15",222,"^G","cljs.core.assoc.cljs$core$IFn$_invoke$arity$variadic"]]],"~i332",["^ ","~i105",[["^ ","^14",552,"^15",222],["^ ","^14",552,"^15",222]],"~i113",[["^ ","^14",636,"^15",222,"^G","tags"]]],"~i333",["^ ","^3W",[["^ ","^14",0,"^15",228],["^ ","^14",32,"^15",228],["^ ","^14",127,"^15",228],["^ ","^14",198,"^15",228]],"^54",[["^ ","^14",7,"^15",228,"^G","cljs.core/assoc-in"]],"^1E",[["^ ","^14",26,"^15",228,"^G","state"]],"~i80",[["^ ","^14",115,"^15",228,"^G","reaction-id"]]],"~i334",["^ ","^1S",[["^ ","^14",0,"^15",236],["^ ","^14",0,"^15",237],["^ ","^14",0,"^15",238]],"^1=",[["^ ","^14",3,"^15",236],["^ ","^14",96,"^15",236]],"^3J",[["^ ","^14",3,"^15",236,"^G","cljs.core/contains?"]],"^4[",[["^ ","^14",29,"^15",236]],"^4J",[["^ ","^14",29,"^15",236,"^G","cljs.core.get.cljs$core$IFn$_invoke$arity$2"]],"~i58",[["^ ","^14",73,"^15",236,"^G","new-state"]],"~i68",[["^ ","^14",83,"^15",236,"^G","reaction-id"]]],"~i335",["^ ","^3J",[["^ ","^14",0,"^15",238]],"^1?",[["^ ","^14",0,"^15",238,"^G","js/console.warn"]],"^5C",[["^ ","^14",13,"^15",238,"^G","trace"]],"^5<",[["^ ","^14",19,"^15",238]],"^5>",[["^ ","^14",19,"^15",238,"^G","cljs.core.get.cljs$core$IFn$_invoke$arity$2"]],"^1@",[["^ ","^14",63,"^15",238,"^G","new-state"]],"~i81",[["^ ","^14",73,"^15",238,"^G","reaction-id"]]],"~i338",["^ ","^1S",[["^ ","^14",0,"^15",241,"^G","new-state"]]],"~i339",["^ ","^29",[["^ ","^14",3,"^15",242,"^G","initial-state"]]],"~i340",["^ ","^29",[["^ ","^14",17,"^15",242,"^G","traces"]]],"~i341",["^ ","~i8",[["^ ","^14",4,"^15",243,"^G","second-pass"]],"^1<",[["^ ","^14",18,"^15",243]],"^1P",[["^ ","^14",18,"^15",243,"^G","cljs.core.reduce.cljs$core$IFn$_invoke$arity$3"]],"^29",[["^ ","^14",65,"^15",243],["^ ","^14",28,"^15",244,"^G","p__14026"],["^ ","^14",0,"^15",245],["^ ","^14",0,"^15",245],["^ ","^14",4,"^15",245,"^G","vec__14029"],["^ ","^14",17,"^15",245,"^G","p__14026"],["^ ","^14",13,"^15",246],["^ ","^14",13,"^15",246,"^G","cljs.core.nth.cljs$core$IFn$_invoke$arity$3"],["^ ","^14",57,"^15",246,"^G","vec__14029"],["^ ","^14",68,"^15",246],["^ ","^14",72,"^15",246],["^ ","^14",16,"^15",247],["^ ","^14",16,"^15",247,"^G","cljs.core.nth.cljs$core$IFn$_invoke$arity$3"],["^ ","^14",60,"^15",247,"^G","vec__14029"],["^ ","^14",71,"^15",247],["^ ","^14",75,"^15",247],["^ ","^14",0,"^15",248]],"^1:",[["^ ","^14",18,"^15",244,"^G","all-state"]],"^1?",[["^ ","^14",4,"^15",246,"^G","sub-id"]],"~i51",[["^ ","^14",4,"^15",247,"^G","sub-state"]]],"~i343",["^ ","^36",[["^ ","^14",0,"^15",248]],"^1>",[["^ ","^14",3,"^15",248]],"^2;",[["^ ","^14",5,"^15",248],["^ ","^14",41,"^15",248]],"^4H",[["^ ","^14",5,"^15",248,"^G","cljs.core/contains?"]],"^3Z",[["^ ","^14",31,"^15",248,"^G","sub-state"]]],"~i344",["^ ","^2;",[["^ ","^14",121,"^15",248],["^ ","^14",157,"^15",248]],"^4H",[["^ ","^14",121,"^15",248,"^G","cljs.core/contains?"]],"^3Z",[["^ ","^14",147,"^15",248,"^G","sub-state"]]],"~i345",["^ ","^2;",[["^ ","^14",217,"^15",248]],"^4H",[["^ ","^14",217,"^15",248,"^G","cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2"]],"^1=",[["^ ","^14",262,"^15",248],["^ ","^14",262,"^15",248]],"^4S",[["^ ","^14",366,"^15",248,"^G","sub-state"]],"~i70",[["^ ","^14",377,"^15",248],["^ ","^14",377,"^15",248]],"^1O",[["^ ","^14",461,"^15",248,"^G","sub-state"]]],"~i346",["^ ","^1S",[["^ ","^14",0,"^15",249],["^ ","^14",36,"^15",249],["^ ","^14",126,"^15",249],["^ ","^14",188,"^15",249],["^ ","^14",261,"^15",249]],"^1:",[["^ ","^14",7,"^15",249,"^G","cljs.core/assoc-in"]],"^1=",[["^ ","^14",26,"^15",249,"^G","all-state"]],"^4[",[["^ ","^14",119,"^15",249,"^G","sub-id"]]],"~i347",["^ ","^1S",[["^ ","^14",0,"^15",251,"^G","all-state"]]],"~i348",["^ ","^29",[["^ ","^14",1,"^15",254,"^G","first-pass"]]],"~i349",["^ ","^29",[["^ ","^14",12,"^15",254,"^G","first-pass"]]],"~i350",["^ ","~i4",[["^ ","^14",0,"^15",255,"^G","second-pass"]]],"~i352",["^ ","~i0",[["^ ","^14",0,"^15",257],["^ ","^14",57,"^15",261],["^ ","^14",0,"^15",262]],"~i6",[["^ ","^14",0,"^15",261,"^G","day8.re-frame-10x.metamorphic/subscription-match-state"]]],"~i355",["^ ","~i3",[["^ ","^14",122,"^15",261,"^G","sub-state"]],"^16",[["^ ","^14",132,"^15",261,"^G","filtered-traces"]],"^1F",[["^ ","^14",148,"^15",261,"^G","new-matches"]]],"~i372",["^ ","~i2",[["^ ","^14",0,"^15",262]],"~i3",[["^ ","^14",7,"^15",262,"^G","cljs.core.reductions.cljs$core$IFn$_invoke$arity$3"]],"^1X",[["^ ","^14",58,"^15",262],["^ ","^14",0,"^15",263]],"^2X",[["^ ","^14",69,"^15",262,"^G","state"]],"^19",[["^ ","^14",75,"^15",262,"^G","match"]]],"~i373",["^ ","^2@",[["^ ","^14",0,"^15",263],["^ ","^14",0,"^15",271],["^ ","^14",0,"^15",271],["^ ","^14",50,"^15",271],["^ ","^14",140,"^15",271],["^ ","^14",224,"^15",271],["^ ","^14",317,"^15",271],["^ ","^14",406,"^15",271]],"^1I",[["^ ","^14",4,"^15",263,"^G","previous-id"]],"^2;",[["^ ","^14",18,"^15",263],["^ ","^14",18,"^15",263]],"~i57",[["^ ","^14",123,"^15",263,"^G","state"]]],"~i374",["^ ","^1I",[["^ ","^14",4,"^15",264,"^G","first-match-id"]],"^2;",[["^ ","^14",21,"^15",264],["^ ","^14",21,"^15",264]],"^1?",[["^ ","^14",101,"^15",264]],"^1K",[["^ ","^14",101,"^15",264,"^G","cljs.core/first"]],"^5[",[["^ ","^14",117,"^15",264,"^G","match"]]],"~i375",["^ ","^1I",[["^ ","^14",4,"^15",265,"^G","last-match-id"]],"^2;",[["^ ","^14",20,"^15",265],["^ ","^14",20,"^15",265]],"^1?",[["^ ","^14",100,"^15",265]],"^1K",[["^ ","^14",100,"^15",265,"^G","cljs.core/last"]],"^3Z",[["^ ","^14",115,"^15",265,"^G","match"]]],"~i376",["^ ","^1I",[["^ ","^14",4,"^15",266,"^G","pre-epoch-traces"]],"^2;",[["^ ","^14",23,"^15",266],["^ ","^14",68,"^15",266]],"^4H",[["^ ","^14",23,"^15",266,"^G","cljs.core.into.cljs$core$IFn$_invoke$arity$3"]]],"~i377",["^ ","^1K",[["^ ","^14",101,"^15",266]],"~i46",[["^ ","^14",101,"^15",266,"^G","cljs.core.comp.cljs$core$IFn$_invoke$arity$2"]]],"~i378",["^ ","~i47",[["^ ","^14",146,"^15",266]],"^44",[["^ ","^14",146,"^15",266,"^G","day8.re-frame-10x.metamorphic/id-between-xf"]],"^4L",[["^ ","^14",190,"^15",266],["^ ","^14",205,"^15",266]],"^5>",[["^ ","^14",191,"^15",266,"^G","previous-id"]]],"~i379",["^ ","^4L",[["^ ","^14",210,"^15",266],["^ ","^14",228,"^15",266]],"^5>",[["^ ","^14",211,"^15",266,"^G","first-match-id"]]],"~i380",["^ ","^6D",[["^ ","^14",234,"^15",266]],"^44",[["^ ","^14",234,"^15",266,"^G","cljs.core.filter.cljs$core$IFn$_invoke$arity$1"]],"^4K",[["^ ","^14",281,"^15",266,"^G","day8.re-frame-10x.metamorphic/subscription?"]]],"~i381",["^ ","^1K",[["^ ","^14",333,"^15",266,"^G","filtered-traces"]]],"~i382",["^ ","^1I",[["^ ","^14",4,"^15",267,"^G","epoch-traces"]],"^2;",[["^ ","^14",19,"^15",267],["^ ","^14",64,"^15",267]],"^4H",[["^ ","^14",19,"^15",267,"^G","cljs.core.into.cljs$core$IFn$_invoke$arity$3"]]],"~i383",["^ ","^1K",[["^ ","^14",97,"^15",267]],"^6B",[["^ ","^14",97,"^15",267,"^G","cljs.core.comp.cljs$core$IFn$_invoke$arity$2"]]],"~i384",["^ ","^6D",[["^ ","^14",142,"^15",267]],"^44",[["^ ","^14",142,"^15",267,"^G","day8.re-frame-10x.metamorphic/id-between-xf"]],"^4L",[["^ ","^14",186,"^15",267,"^G","first-match-id"]],"^1M",[["^ ","^14",201,"^15",267,"^G","last-match-id"]]],"~i385",["^ ","^6D",[["^ ","^14",216,"^15",267]],"^44",[["^ ","^14",216,"^15",267,"^G","cljs.core.filter.cljs$core$IFn$_invoke$arity$1"]],"^4K",[["^ ","^14",263,"^15",267,"^G","day8.re-frame-10x.metamorphic/subscription?"]]],"~i386",["^ ","^1K",[["^ ","^14",315,"^15",267,"^G","filtered-traces"]]],"~i387",["^ ","^1I",[["^ ","^14",4,"^15",268,"^G","reaction-state"]],"^2;",[["^ ","^14",21,"^15",268],["^ ","^14",21,"^15",268]],"~i56",[["^ ","^14",123,"^15",268,"^G","state"]]],"~i388",["^ ","^1I",[["^ ","^14",4,"^15",269,"^G","pre-epoch-state"]],"^3J",[["^ ","^14",117,"^15",269,"^G","reaction-state"]]],"~i389",["^ ","^3J",[["^ ","^14",71,"^15",269]],"^1?",[["^ ","^14",71,"^15",269,"^G","day8.re-frame-10x.metamorphic/reset-sub-state"]]],"~i390",["^ ","^3J",[["^ ","^14",22,"^15",269]],"^1?",[["^ ","^14",22,"^15",269,"^G","day8.re-frame-10x.metamorphic/process-sub-traces"]],"^3W",[["^ ","^14",133,"^15",269,"^G","pre-epoch-traces"]]],"~i391",["^ ","^1I",[["^ ","^14",4,"^15",270,"^G","epoch-state"]],"^3J",[["^ ","^14",113,"^15",270,"^G","pre-epoch-state"]]],"~i392",["^ ","^3J",[["^ ","^14",67,"^15",270]],"^1?",[["^ ","^14",67,"^15",270,"^G","day8.re-frame-10x.metamorphic/reset-sub-state"]]],"~i393",["^ ","^3J",[["^ ","^14",18,"^15",270]],"^1?",[["^ ","^14",18,"^15",270,"^G","day8.re-frame-10x.metamorphic/process-sub-traces"]],"^3W",[["^ ","^14",130,"^15",270,"^G","epoch-traces"]]],"~i394",["^ ","^4H",[["^ ","^14",124,"^15",271,"^G","pre-epoch-state"]]],"~i395",["^ ","^4H",[["^ ","^14",212,"^15",271,"^G","epoch-state"]]],"~i396",["^ ","^4H",[["^ ","^14",302,"^15",271,"^G","first-match-id"]]],"~i397",["^ ","^4H",[["^ ","^14",392,"^15",271,"^G","last-match-id"]]],"~i398",["^ ","^4H",[["^ ","^14",488,"^15",271,"^G","previous-id"]]],"~i399",["^ ","^1X",[["^ ","^14",3,"^15",272,"^G","sub-state"]]],"~i400",["^ ","^1X",[["^ ","^14",13,"^15",272,"^G","new-matches"]]],"~i660",["^ ","^1=",[["^ ","^14",62,"^15",71],["^ ","^14",62,"^15",71,"^G","G__13972"],["^ ","^14",62,"^15",213],["^ ","^14",62,"^15",213,"^G","G__14022"]]]],"~:cljc",true],"~:cache-keys",["~#cmap",[["~:macro","^M"],[1532292597000],["^X","goog/math/math.js"],[1531925801810,"^N","~$goog.array","~$goog.asserts"],["^X","goog/array/array.js"],[1531925801810,"^N","^76"],["^X","goog/debug/error.js"],[1531925801810,"^N"],["^X","day8/re_frame_10x/metamorphic.cljc"],[1531925808142,"^N","^M"],["^X","goog/dom/nodetype.js"],[1531925801810,"^N"],["^X","goog/object/object.js"],[1531925801810,"^N"],"~:SHADOW-TIMESTAMP",[1533404981000,1532292597000],["^X","goog/math/long.js"],[1531925801810,"^N","^76","~$goog.reflect"],["^X","goog/functions/functions.js"],[1531925801810,"^N"],["^X","goog/structs/map.js"],[1531925801810,"^N","~$goog.iter.Iterator","~$goog.iter.StopIteration","~$goog.object"],["^X","goog/asserts/asserts.js"],[1531925801810,"^N","~$goog.debug.Error","~$goog.dom.NodeType","~$goog.string"],["^X","goog/uri/uri.js"],[1531925801810,"^N","^75","^76","^7>","~$goog.structs","~$goog.structs.Map","~$goog.uri.utils","~$goog.uri.utils.ComponentIndex","~$goog.uri.utils.StandardQueryParam"],["^X","goog/base.js"],[1531925801810],["^X","goog/structs/structs.js"],[1531925801810,"^N","^75","^7;"],["^X","goog/string/string.js"],[1531925801810,"^N"],["^X","goog/reflect/reflect.js"],[1531925801810,"^N"],["^X","goog/string/stringbuffer.js"],[1531925801810,"^N"],["^X","goog/iter/iter.js"],[1531925801810,"^N","^75","^76","~$goog.functions","~$goog.math"],["^X","cljs/core.cljs"],[1532292597383,"~$goog.math.Long","~$goog.math.Integer","^7>","^7;","^75","~$goog.Uri","~$goog.string.StringBuffer"],["^X","goog/math/integer.js"],[1531925801810,"^N"],["^X","goog/uri/utils.js"],[1531925801810,"^N","^75","^76","^7>"]]],"~:analyzer",["^ ","^3",null,"^4",["^ "],"^5",["^ ","^6","day8/re_frame_10x/metamorphic.cljc","^7",1,"^8",5,"^9",1,"^:",34],"^;",["^ ","^<","^=","^>","^?","^@","^A","^B","^C"],"^D",null,"^E",["^F",[]],"^G","^H","^K",null,"^L",["^ ","^M","^M","^N","^N"],"^O",["^F",[]],"~:shadow/js-access-global",["^F",["Error"]],"^P",null,"~:defs",["^ ","~$subscription?",["^ ","~:protocol-inline",null,"^5",["^ ","^6","day8/re_frame_10x/metamorphic.cljc","^7",131,"^8",7,"^9",131,"^:",20,"~:arglists",["^S",["~$quote",["^S",[["~$trace"]]]]]],"^G","~$day8.re-frame-10x.metamorphic/subscription?","~:variadic",false,"^6","day8/re_frame_10x/metamorphic.cljc","^:",20,"~:method-params",["^S",[["^7Q"]]],"~:protocol-impl",null,"~:arglists-meta",["^S",[null,null]],"^8",1,"^7",131,"^9",131,"~:max-fixed-arity",1,"~:fn-var",true,"^7O",["^S",["^7P",["^S",[["^7Q"]]]]]],"~$start-of-epoch-and-prev-end?",["^ ","^7N",null,"^5",["^ ","^6","day8/re_frame_10x/metamorphic.cljc","^7",194,"^8",7,"^9",194,"^:",35,"^7O",["^S",["^7P",["^S",[["~$event","~$state"]]]]],"~:doc","Detects that a new epoch has started and that the previous one ended on the previous event.\n\n  If multiple events are dispatched while processing the first event, each one is considered its\n  own epoch."],"^G","~$day8.re-frame-10x.metamorphic/start-of-epoch-and-prev-end?","^7S",false,"^6","day8/re_frame_10x/metamorphic.cljc","^:",35,"^7T",["^S",[["^7Z","^7["]]],"^7U",null,"^7V",["^S",[null,null]],"^8",1,"^7",194,"^9",194,"^7W",2,"^7X",true,"^7O",["^S",["^7P",["^S",[["^7Z","^7["]]]]],"^80","Detects that a new epoch has started and that the previous one ended on the previous event.\n\n  If multiple events are dispatched while processing the first event, each one is considered its\n  own epoch."],"~$subscription-destroyed?",["^ ","^7N",null,"^5",["^ ","^6","day8/re_frame_10x/metamorphic.cljc","^7",143,"^8",7,"^9",143,"^:",30,"^7O",["^S",["^7P",["^S",[["^7Q"]]]]]],"^G","~$day8.re-frame-10x.metamorphic/subscription-destroyed?","^7S",false,"^6","day8/re_frame_10x/metamorphic.cljc","^:",30,"^7T",["^S",[["^7Q"]]],"^7U",null,"^7V",["^S",[null,null]],"^8",1,"^7",143,"^9",143,"^7W",1,"^7X",true,"^7O",["^S",["^7P",["^S",[["^7Q"]]]]]],"~$low-level-reagent-trace?",["^ ","^7N",null,"^5",["^ ","^6","day8/re_frame_10x/metamorphic.cljc","^7",156,"^8",7,"^9",156,"^:",31,"^7O",["^S",["^7P",["^S",[["^7Q"]]]]],"^80","Is this part of reagent internals?"],"^G","~$day8.re-frame-10x.metamorphic/low-level-reagent-trace?","^7S",false,"^6","day8/re_frame_10x/metamorphic.cljc","^:",31,"^7T",["^S",[["^7Q"]]],"^7U",null,"^7V",["^S",[null,null]],"^8",1,"^7",156,"^9",156,"^7W",1,"^7X",true,"^7O",["^S",["^7P",["^S",[["^7Q"]]]]],"^80","Is this part of reagent internals?"],"~$request-animation-frame-end?",["^ ","^7N",null,"^5",["^ ","^6","day8/re_frame_10x/metamorphic.cljc","^7",86,"^8",7,"^9",86,"^:",35,"^7O",["^S",["^7P",["^S",[["^7Z"]]]]]],"^G","~$day8.re-frame-10x.metamorphic/request-animation-frame-end?","^7S",false,"^6","day8/re_frame_10x/metamorphic.cljc","^:",35,"^7T",["^S",[["^7Z"]]],"^7U",null,"^7V",["^S",[null,null]],"^8",1,"^7",86,"^9",86,"^7W",1,"^7X",true,"^7O",["^S",["^7P",["^S",[["^7Z"]]]]]],"~$event-handler?",["^ ","^7N",null,"^5",["^ ","^6","day8/re_frame_10x/metamorphic.cljc","^7",180,"^8",7,"^9",180,"^:",21,"^7O",["^S",["^7P",["^S",[["^7Q"]]]]]],"^G","~$day8.re-frame-10x.metamorphic/event-handler?","^7S",false,"^6","day8/re_frame_10x/metamorphic.cljc","^:",21,"^7T",["^S",[["^7Q"]]],"^7U",null,"^7V",["^S",[null,null]],"^8",1,"^7",180,"^9",180,"^7W",1,"^7X",true,"^7O",["^S",["^7P",["^S",[["^7Q"]]]]]],"~$subscription-created?",["^ ","^7N",null,"^5",["^ ","^6","day8/re_frame_10x/metamorphic.cljc","^7",136,"^8",7,"^9",136,"^:",28,"^7O",["^S",["^7P",["^S",[["^7Q"]]]]]],"^G","~$day8.re-frame-10x.metamorphic/subscription-created?","^7S",false,"^6","day8/re_frame_10x/metamorphic.cljc","^:",28,"^7T",["^S",[["^7Q"]]],"^7U",null,"^7V",["^S",[null,null]],"^8",1,"^7",136,"^9",136,"^7W",1,"^7X",true,"^7O",["^S",["^7P",["^S",[["^7Q"]]]]]],"~$subscription-match-state",["^ ","^7N",null,"^5",["^ ","^6","day8/re_frame_10x/metamorphic.cljc","^7",353,"^8",7,"^9",353,"^:",31,"^7O",["^S",["^7P",["^S",[["~$sub-state","~$filtered-traces","~$new-matches"]]]]],"^80","Build up the state of re-frame's running subscriptions over each matched epoch.\n  Returns initial state as first item in list"],"^G","~$day8.re-frame-10x.metamorphic/subscription-match-state","^7S",false,"^6","day8/re_frame_10x/metamorphic.cljc","^:",31,"^7T",["^S",[["^8=","^8>","^8?"]]],"^7U",null,"^7V",["^S",[null,null]],"^8",1,"^7",353,"^9",353,"^7W",3,"^7X",true,"^7O",["^S",["^7P",["^S",[["^8=","^8>","^8?"]]]]],"^80","Build up the state of re-frame's running subscriptions over each matched epoch.\n  Returns initial state as first item in list"],"~$quiescent?",["^ ","^7N",null,"^5",["^ ","^6","day8/re_frame_10x/metamorphic.cljc","^7",206,"^8",7,"^9",206,"^:",17,"^7O",["^S",["^7P",["^S",[["^7Z"]]]]]],"^G","~$day8.re-frame-10x.metamorphic/quiescent?","^7S",false,"^6","day8/re_frame_10x/metamorphic.cljc","^:",17,"^7T",["^S",[["^7Z"]]],"^7U",null,"^7V",["^S",[null,null]],"^8",1,"^7",206,"^9",206,"^7W",1,"^7X",true,"^7O",["^S",["^7P",["^S",[["^7Z"]]]]]],"~$add-event-from-idle?",["^ ","^7N",null,"^5",["^ ","^6","day8/re_frame_10x/metamorphic.cljc","^7",126,"^8",7,"^9",126,"^:",27,"^7O",["^S",["^7P",["^S",[["^7Z"]]]]]],"^G","~$day8.re-frame-10x.metamorphic/add-event-from-idle?","^7S",false,"^6","day8/re_frame_10x/metamorphic.cljc","^:",27,"^7T",["^S",[["^7Z"]]],"^7U",null,"^7V",["^S",[null,null]],"^8",1,"^7",126,"^9",126,"^7W",1,"^7X",true,"^7O",["^S",["^7P",["^S",[["^7Z"]]]]]],"~$summarise-event",["^ ","^7N",null,"^5",["^ ","^6","day8/re_frame_10x/metamorphic.cljc","^7",89,"^8",7,"^9",89,"^:",22,"^7O",["^S",["^7P",["^S",[["~$ev"]]]]]],"^G","~$day8.re-frame-10x.metamorphic/summarise-event","^7S",false,"^6","day8/re_frame_10x/metamorphic.cljc","^:",22,"^7T",["^S",[["^8F"]]],"^7U",null,"^7V",["^S",[null,null]],"^8",1,"^7",89,"^9",89,"^7W",1,"^7X",true,"^7O",["^S",["^7P",["^S",[["^8F"]]]]]],"~$unchanged-l2-subscription?",["^ ","^7N",null,"^5",["^ ","^6","day8/re_frame_10x/metamorphic.cljc","^7",164,"^8",7,"^9",164,"^:",33,"^7O",["^S",["^7P",["^S",[["~$sub"]]]]]],"^G","~$day8.re-frame-10x.metamorphic/unchanged-l2-subscription?","^7S",false,"^6","day8/re_frame_10x/metamorphic.cljc","^:",33,"^7T",["^S",[["^8I"]]],"^7U",null,"^7V",["^S",[null,null]],"^8",1,"^7",164,"^9",164,"^7W",1,"^7X",true,"^7O",["^S",["^7P",["^S",[["^8I"]]]]]],"~$summarise-match",["^ ","^7N",null,"^5",["^ ","^6","day8/re_frame_10x/metamorphic.cljc","^7",95,"^8",7,"^9",95,"^:",22,"^7O",["^S",["^7P",["^S",[["~$match"]]]]]],"^G","~$day8.re-frame-10x.metamorphic/summarise-match","^7S",false,"^6","day8/re_frame_10x/metamorphic.cljc","^:",22,"^7T",["^S",[["^8L"]]],"^7U",null,"^7V",["^S",[null,null]],"^8",1,"^7",95,"^9",95,"^7W",1,"^7X",true,"^7O",["^S",["^7P",["^S",[["^8L"]]]]]],"~$run-queue?",["^ ","^7N",null,"^5",["^ ","^6","day8/re_frame_10x/metamorphic.cljc","^7",78,"^8",7,"^9",78,"^:",17,"^7O",["^S",["^7P",["^S",[["^7Z"]]]]]],"^G","~$day8.re-frame-10x.metamorphic/run-queue?","^7S",false,"^6","day8/re_frame_10x/metamorphic.cljc","^:",17,"^7T",["^S",[["^7Z"]]],"^7U",null,"^7V",["^S",[null,null]],"^8",1,"^7",78,"^9",78,"^7W",1,"^7X",true,"^7O",["^S",["^7P",["^S",[["^7Z"]]]]]],"~$finish-run?",["^ ","^7N",null,"^5",["^ ","^6","day8/re_frame_10x/metamorphic.cljc","^7",170,"^8",7,"^9",170,"^:",18,"^7O",["^S",["^7P",["^S",[["^7Z"]]]]],"^80","Marks the end of event processing running."],"^G","~$day8.re-frame-10x.metamorphic/finish-run?","^7S",false,"^6","day8/re_frame_10x/metamorphic.cljc","^:",18,"^7T",["^S",[["^7Z"]]],"^7U",null,"^7V",["^S",[null,null]],"^8",1,"^7",170,"^9",170,"^7W",1,"^7X",true,"^7O",["^S",["^7P",["^S",[["^7Z"]]]]],"^80","Marks the end of event processing running."],"~$beginning-id",["^ ","^7N",null,"^5",["^ ","^6","day8/re_frame_10x/metamorphic.cljc","^7",98,"^8",7,"^9",98,"^:",19,"^7O",["^S",["^7P",["^S",[["^8L"]]]]]],"^G","~$day8.re-frame-10x.metamorphic/beginning-id","^7S",false,"^6","day8/re_frame_10x/metamorphic.cljc","^:",19,"^7T",["^S",[["^8L"]]],"^7U",null,"^7V",["^S",[null,null]],"^8",1,"^7",98,"^9",98,"^7W",1,"^7X",true,"^7O",["^S",["^7P",["^S",[["^8L"]]]]]],"~$initial-sub-state",["^ ","^G","~$day8.re-frame-10x.metamorphic/initial-sub-state","^6","day8/re_frame_10x/metamorphic.cljc","^7",214,"^8",1,"^9",214,"^:",23,"^5",["^ ","^6","day8/re_frame_10x/metamorphic.cljc","^7",214,"^8",6,"^9",214,"^:",23],"~:tag","~$cljs.core/IMap"],"~$subscription-info",["^ ","^7N",null,"^5",["^ ","^6","day8/re_frame_10x/metamorphic.cljc","^7",271,"^8",7,"^9",271,"^:",24,"^7O",["^S",["^7P",["^S",[["~$initial-state","^8>","~$app-db-id"]]]]],"^80","Collect information about the subscription that we'd like\n  to know, like its layer."],"^G","~$day8.re-frame-10x.metamorphic/subscription-info","^7S",false,"^6","day8/re_frame_10x/metamorphic.cljc","^:",24,"^7T",["^S",[["^8Y","^8>","^8Z"]]],"^7U",null,"^7V",["^S",[null,null]],"^8",1,"^7",271,"^9",271,"^7W",3,"^7X",true,"^7O",["^S",["^7P",["^S",[["^8Y","^8>","^8Z"]]]]],"^80","Collect information about the subscription that we'd like\n  to know, like its layer."],"~$app-db-after",["^ ","^7N",null,"^5",["^ ","^6","day8/re_frame_10x/metamorphic.cljc","^7",265,"^8",7,"^9",265,"^:",19,"^7O",["^S",["^7P",["^S",[["~$event-trace"]]]]]],"^G","~$day8.re-frame-10x.metamorphic/app-db-after","^7S",false,"^6","day8/re_frame_10x/metamorphic.cljc","^:",19,"^7T",["^S",[["^91"]]],"^7U",null,"^7V",["^S",[null,null]],"^8",1,"^7",265,"^9",265,"^7W",1,"^7X",true,"^7O",["^S",["^7P",["^S",[["^91"]]]]]],"~$parse-traces",["^ ","^7N",null,"^5",["^ ","^6","day8/re_frame_10x/metamorphic.cljc","^7",219,"^8",7,"^9",219,"^:",19,"^7O",["^S",["^7P",["^S",[["~$parse-state","~$traces"]]]]]],"^G","~$day8.re-frame-10x.metamorphic/parse-traces","^7S",false,"^6","day8/re_frame_10x/metamorphic.cljc","^:",19,"^7T",["^S",[["^94","^95"]]],"^7U",null,"^7V",["^S",[null,null]],"^8",1,"^7",219,"^9",219,"^7W",2,"^7X",true,"^7O",["^S",["^7P",["^S",[["^94","^95"]]]]]],"~$id-between-xf",["^ ","^7N",null,"^5",["^ ","^6","day8/re_frame_10x/metamorphic.cljc","^7",3,"^8",7,"^9",3,"^:",20,"^7O",["^S",["^7P",["^S",[["~$beginning","~$ending"]]]]],"^80","Returns a transducer that filters for :id between beginning and ending. Inclusive on both ends."],"^G","~$day8.re-frame-10x.metamorphic/id-between-xf","^7S",false,"^6","day8/re_frame_10x/metamorphic.cljc","^:",20,"^7T",["^S",[["^98","^99"]]],"^7U",null,"^7V",["^S",[null,null]],"^8",1,"^7",3,"^9",3,"^7W",2,"^7X",true,"^7O",["^S",["^7P",["^S",[["^98","^99"]]]]],"^80","Returns a transducer that filters for :id between beginning and ending. Inclusive on both ends."],"~$initial-parse-state",["^ ","^G","~$day8.re-frame-10x.metamorphic/initial-parse-state","^6","day8/re_frame_10x/metamorphic.cljc","^7",209,"^8",1,"^9",209,"^:",25,"^5",["^ ","^6","day8/re_frame_10x/metamorphic.cljc","^7",209,"^8",6,"^9",209,"^:",25],"^8V","^8W"],"~$event-run?",["^ ","^7N",null,"^5",["^ ","^6","day8/re_frame_10x/metamorphic.cljc","^7",177,"^8",7,"^9",177,"^:",17,"^7O",["^S",["^7P",["^S",[["^7Z"]]]]]],"^G","~$day8.re-frame-10x.metamorphic/event-run?","^7S",false,"^6","day8/re_frame_10x/metamorphic.cljc","^:",17,"^7T",["^S",[["^7Z"]]],"^7U",null,"^7V",["^S",[null,null]],"^8",1,"^7",177,"^9",177,"^7W",1,"^7X",true,"^7O",["^S",["^7P",["^S",[["^7Z"]]]]]],"~$ending-id",["^ ","^7N",null,"^5",["^ ","^6","day8/re_frame_10x/metamorphic.cljc","^7",101,"^8",7,"^9",101,"^:",16,"^7O",["^S",["^7P",["^S",[["^8L"]]]]]],"^G","~$day8.re-frame-10x.metamorphic/ending-id","^7S",false,"^6","day8/re_frame_10x/metamorphic.cljc","^:",16,"^7T",["^S",[["^8L"]]],"^7U",null,"^7V",["^S",[null,null]],"^8",1,"^7",101,"^9",101,"^7W",1,"^7X",true,"^7O",["^S",["^7P",["^S",[["^8L"]]]]]],"~$app-db-before",["^ ","^7N",null,"^5",["^ ","^6","day8/re_frame_10x/metamorphic.cljc","^7",268,"^8",7,"^9",268,"^:",20,"^7O",["^S",["^7P",["^S",[["^91"]]]]]],"^G","~$day8.re-frame-10x.metamorphic/app-db-before","^7S",false,"^6","day8/re_frame_10x/metamorphic.cljc","^:",20,"^7T",["^S",[["^91"]]],"^7U",null,"^7V",["^S",[null,null]],"^8",1,"^7",268,"^9",268,"^7W",1,"^7X",true,"^7O",["^S",["^7P",["^S",[["^91"]]]]]],"~$subscription-not-run?",["^ ","^7N",null,"^5",["^ ","^6","day8/re_frame_10x/metamorphic.cljc","^7",146,"^8",7,"^9",146,"^:",28,"^7O",["^S",["^7P",["^S",[["^7Q"]]]]]],"^G","~$day8.re-frame-10x.metamorphic/subscription-not-run?","^7S",false,"^6","day8/re_frame_10x/metamorphic.cljc","^:",28,"^7T",["^S",[["^7Q"]]],"^7U",null,"^7V",["^S",[null,null]],"^8",1,"^7",146,"^9",146,"^7W",1,"^7X",true,"^7O",["^S",["^7P",["^S",[["^7Q"]]]]]],"~$event-dofx?",["^ ","^7N",null,"^5",["^ ","^6","day8/re_frame_10x/metamorphic.cljc","^7",183,"^8",7,"^9",183,"^:",18,"^7O",["^S",["^7P",["^S",[["^7Q"]]]]]],"^G","~$day8.re-frame-10x.metamorphic/event-dofx?","^7S",false,"^6","day8/re_frame_10x/metamorphic.cljc","^:",18,"^7T",["^S",[["^7Q"]]],"^7U",null,"^7V",["^S",[null,null]],"^8",1,"^7",183,"^9",183,"^7W",1,"^7X",true,"^7O",["^S",["^7P",["^S",[["^7Q"]]]]]],"~$render?",["^ ","^7N",null,"^5",["^ ","^6","day8/re_frame_10x/metamorphic.cljc","^7",161,"^8",7,"^9",161,"^:",14,"^7O",["^S",["^7P",["^S",[["^7Q"]]]]]],"^G","~$day8.re-frame-10x.metamorphic/render?","^7S",false,"^6","day8/re_frame_10x/metamorphic.cljc","^:",14,"^7T",["^S",[["^7Q"]]],"^7U",null,"^7V",["^S",[null,null]],"^8",1,"^7",161,"^9",161,"^7W",1,"^7X",true,"^7O",["^S",["^7P",["^S",[["^7Q"]]]]]],"~$matched-event",["^ ","^7N",null,"^5",["^ ","^6","day8/re_frame_10x/metamorphic.cljc","^7",260,"^8",7,"^9",260,"^:",20,"^7O",["^S",["^7P",["^S",[["^8L"]]]]]],"^G","~$day8.re-frame-10x.metamorphic/matched-event","^7S",false,"^6","day8/re_frame_10x/metamorphic.cljc","^:",20,"^7T",["^S",[["^8L"]]],"^7U",null,"^7V",["^S",[null,null]],"^8",1,"^7",260,"^9",260,"^7W",1,"^7X",true,"^7O",["^S",["^7P",["^S",[["^8L"]]]]]],"~$request-animation-frame?",["^ ","^7N",null,"^5",["^ ","^6","day8/re_frame_10x/metamorphic.cljc","^7",83,"^8",7,"^9",83,"^:",31,"^7O",["^S",["^7P",["^S",[["^7Z"]]]]]],"^G","~$day8.re-frame-10x.metamorphic/request-animation-frame?","^7S",false,"^6","day8/re_frame_10x/metamorphic.cljc","^:",31,"^7T",["^S",[["^7Z"]]],"^7U",null,"^7V",["^S",[null,null]],"^8",1,"^7",83,"^9",83,"^7W",1,"^7X",true,"^7O",["^S",["^7P",["^S",[["^7Z"]]]]]],"~$reset-sub-state",["^ ","^7N",null,"^5",["^ ","^6","day8/re_frame_10x/metamorphic.cljc","^7",293,"^8",7,"^9",293,"^:",22,"^7O",["^S",["^7P",["^S",[["^7["]]]]],"^80","Remove information about the subscription that is transient and specific to a single\n  phase."],"^G","~$day8.re-frame-10x.metamorphic/reset-sub-state","^7S",false,"^6","day8/re_frame_10x/metamorphic.cljc","^:",22,"^7T",["^S",[["^7["]]],"^7U",null,"^7V",["^S",[null,null]],"^8",1,"^7",293,"^9",293,"^7W",1,"^7X",true,"^7O",["^S",["^7P",["^S",[["^7["]]]]],"^80","Remove information about the subscription that is transient and specific to a single\n  phase."],"~$start-of-epoch?",["^ ","^7N",null,"^5",["^ ","^6","day8/re_frame_10x/metamorphic.cljc","^7",186,"^8",7,"^9",186,"^:",22,"^7O",["^S",["^7P",["^S",[["^7Z"]]]]],"^80","Detects the start of a re-frame epoch\n\n  Normally an epoch would always start with the queue being run, but with a dispatch-sync, the event is run directly."],"^G","~$day8.re-frame-10x.metamorphic/start-of-epoch?","^7S",false,"^6","day8/re_frame_10x/metamorphic.cljc","^:",22,"^7T",["^S",[["^7Z"]]],"^7U",null,"^7V",["^S",[null,null]],"^8",1,"^7",186,"^9",186,"^7W",1,"^7X",true,"^7O",["^S",["^7P",["^S",[["^7Z"]]]]],"^80","Detects the start of a re-frame epoch\n\n  Normally an epoch would always start with the queue being run, but with a dispatch-sync, the event is run directly."],"~$low-level-re-frame-trace?",["^ ","^7N",null,"^5",["^ ","^6","day8/re_frame_10x/metamorphic.cljc","^7",149,"^8",7,"^9",149,"^:",32,"^7O",["^S",["^7P",["^S",[["^7Q"]]]]],"^80","Is this part of re-frame internals?"],"^G","~$day8.re-frame-10x.metamorphic/low-level-re-frame-trace?","^7S",false,"^6","day8/re_frame_10x/metamorphic.cljc","^:",32,"^7T",["^S",[["^7Q"]]],"^7U",null,"^7V",["^S",[null,null]],"^8",1,"^7",149,"^9",149,"^7W",1,"^7X",true,"^7O",["^S",["^7P",["^S",[["^7Q"]]]]],"^80","Is this part of re-frame internals?"],"~$process-sub-traces",["^ ","^7N",null,"^5",["^ ","^6","day8/re_frame_10x/metamorphic.cljc","^7",308,"^8",7,"^9",308,"^:",25,"^7O",["^S",["^7P",["^S",[["^8Y","^95"]]]]]],"^G","~$day8.re-frame-10x.metamorphic/process-sub-traces","^7S",false,"^6","day8/re_frame_10x/metamorphic.cljc","^:",25,"^7T",["^S",[["^8Y","^95"]]],"^7U",null,"^7V",["^S",[null,null]],"^8",1,"^7",308,"^9",308,"^7W",2,"^7X",true,"^7O",["^S",["^7P",["^S",[["^8Y","^95"]]]]]],"~$subscription-re-run?",["^ ","^7N",null,"^5",["^ ","^6","day8/re_frame_10x/metamorphic.cljc","^7",140,"^8",7,"^9",140,"^:",27,"^7O",["^S",["^7P",["^S",[["^7Q"]]]]]],"^G","~$day8.re-frame-10x.metamorphic/subscription-re-run?","^7S",false,"^6","day8/re_frame_10x/metamorphic.cljc","^:",27,"^7T",["^S",[["^7Q"]]],"^7U",null,"^7V",["^S",[null,null]],"^8",1,"^7",140,"^9",140,"^7W",1,"^7X",true,"^7O",["^S",["^7P",["^S",[["^7Q"]]]]]],"~$fsm-trigger?",["^ ","^7N",null,"^5",["^ ","^6","day8/re_frame_10x/metamorphic.cljc","^7",42,"^8",7,"^9",42,"^:",19,"^7O",["^S",["^7P",["^S",[["^7Z"]]]]]],"^G","~$day8.re-frame-10x.metamorphic/fsm-trigger?","^7S",false,"^6","day8/re_frame_10x/metamorphic.cljc","^:",19,"^7T",["^S",[["^7Z"]]],"^7U",null,"^7V",["^S",[null,null]],"^8",1,"^7",42,"^9",42,"^7W",1,"^7X",true,"^7O",["^S",["^7P",["^S",[["^7Z"]]]]]],"~$elapsed-time",["^ ","^7N",null,"^5",["^ ","^6","day8/re_frame_10x/metamorphic.cljc","^7",72,"^8",7,"^9",72,"^:",19,"^7O",["^S",["^7P",["^S",[["~$ev1","~$ev2"]]]]]],"^G","~$day8.re-frame-10x.metamorphic/elapsed-time","^7S",false,"^6","day8/re_frame_10x/metamorphic.cljc","^:",19,"^7T",["^S",[["^9Z","^9["]]],"^7U",null,"^7V",["^S",[null,null]],"^8",1,"^7",72,"^9",72,"^7W",2,"^7X",true,"^7O",["^S",["^7P",["^S",[["^9Z","^9["]]]]]]],"^Q",["^ ","^M","^M"],"~:cljs.analyzer/constants",["^ ","^O",["^F",["~:raf-end","~:add-event","~:tags","~:created?","~:unchanged?","~:sub/run","~:previous-value","~:idle","~:previous-event","~:app-db-after","~:else","~:reaction-state","~:reagent/quiescent","~:sub/create","~:value","~:child-of","~:re-frame.router/fsm-trigger","~:operation","~:start","~:run?","~:app-db-before","~:last-matched-id","~:duration","~:query-v","~:componentWillUnmount","~:first-matched-id","~:running","~:previous-matched-id","~:event/handler","~:render","~:event","~:layer","~:event/do-fx","~:pre-epoch-state","~:id","~:effects","~:run-queue","~:scheduled","~:raf","~:order","~:cached?","~:sub/dispose","~:coeffects","~:input-signals","~:interceptors","~:disposed?","~:partitions","~:end","~:reaction","~:op-type","~:finish-run","~:subscription","~:current-match","~:sub/traits"]],"^:Y",["^:T","^:B","^;7","^:D","^;5","^:C","^:W","^:V","^:X","^:2","^:H","^:A","^:4","^:F","^:;","^:U","^;0","^;2","^:9","^:3","^:Z","^:?","^:7","^:[","^:J","^:O","^;;","^:6","^:Y","^:Q","^:L","^;8","^:P","^:N","^:R","^::","^:>","^;:","^;4","^:G","^:S","^:=","^:<","^;1","^;3","^:5","^:E","^:8","^;6","^;9","^:I","^:@","^:K","^:M"]],"^U",["^ "],"^V",["^N","^M"]],"^J","^H","~:ns-specs",["^ "],"~:ns-speced-vars",[],"~:compiler-options",["^73",[["^;>","~:static-fns"],true,["^;>","~:elide-asserts"],false,["^;>","~:optimize-constants"],null,["^;>","~:external-config"],null,["^;>","~:tooling-config"],null,["^;>","~:emit-constants"],null,["^;>","~:infer-externs"],true,["^;>","^11"],null,["~:js-options","~:js-provider"],"~:shadow",["~:mode"],"~:dev",["^;>","~:fn-invoke-direct"],null,["^;>","^13"],"/dev/null"]]]